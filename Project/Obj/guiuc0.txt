; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [--debug -c --asm --interleave -o.\Obj\guiuc0.o --depend=.\Obj\guiuc0.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\Libraries\CMSIS\CM3\CoreSupport -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x\startup\arm -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\User -I..\BaseDrive -I..\Ucosii -I..\Ucosii\Port -I..\Ucosii\Src -I..\Ucosii\Include -I..\Ucgui -I..\Ucgui\Config -I..\Ucgui\GUI_X -I..\Ucgui\GUI -I..\Ucgui\GUI\ConvertColor -I..\Ucgui\GUI\ConvertMono -I..\Ucgui\GUI\Core -I..\Ucgui\GUI\Core -I..\Ucgui\GUI\LCDDriver -I..\Ucgui\GUI\MultiLayer -I..\Ucgui\GUI\Widget -I..\Ucgui\GUI\WM -I..\ExternalDrive\Lcd -I..\ExternalDrive\Touch -I..\Panel -ID:\Keil\ARM\INC -ID:\Keil\ARM\INC\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=.\Obj\guiuc0.crf ..\Ucgui\GUI\Core\GUIUC0.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=1

                  GUI_UC2DB PROC
;;;37     */
;;;38     void GUI_UC2DB(U16 Code, U8* pOut) {
000000  28ff              CMP      r0,#0xff
;;;39     /* move regular ASCII to (unused) 0xE000-0xE0ff area */
;;;40       if (Code < 0x100) {
000002  dc04              BGT      |L1.14|
;;;41         if (Code !=0)  /* end marker ? */
000004  b158              CBZ      r0,|L1.30|
;;;42           Code += 0xe000;
000006  f5004260          ADD      r2,r0,#0xe000
00000a  b290              UXTH     r0,r2
00000c  e007              B        |L1.30|
                  |L1.14|
;;;43       } else {
;;;44     /* If Low byte 0: Move to (unused) 0xE100-0xE1ff area */
;;;45         if ((Code&0xff) == 0) {
00000e  f0100fff          TST      r0,#0xff
000012  d104              BNE      |L1.30|
;;;46           Code = (Code>>8) +0xe100;
000014  f44f4261          MOV      r2,#0xe100
000018  eb022220          ADD      r2,r2,r0,ASR #8
00001c  b290              UXTH     r0,r2
                  |L1.30|
;;;47         }
;;;48       }
;;;49     /* Convert into double byte, putting msb first*/
;;;50       *pOut++ = Code >> 8;     /* Save msb first */
00001e  1202              ASRS     r2,r0,#8
000020  f8012b01          STRB     r2,[r1],#1
;;;51       *pOut   = Code & 0xff;
000024  7008              STRB     r0,[r1,#0]
;;;52     }
000026  4770              BX       lr
;;;53     
                          ENDP

                  GUI_DB2UC PROC
;;;62     */
;;;63     U16 GUI_DB2UC(U8 Byte0, U8 Byte1) {
000028  4602              MOV      r2,r0
;;;64       if (Byte0==0)
00002a  b90a              CBNZ     r2,|L1.48|
;;;65         return 0;
00002c  2000              MOVS     r0,#0
                  |L1.46|
;;;66       if ((Byte0&0xfe) == 0xe0) {
;;;67         if (Byte0 == 0xe0)        /* ASCII */
;;;68           return Byte1;
;;;69         return ((U16)Byte1)<<8;   /* low byte was zero */
;;;70       }
;;;71       return Byte1 | (((U16)Byte0)<<8);
;;;72     }
00002e  4770              BX       lr
                  |L1.48|
000030  f00200fe          AND      r0,r2,#0xfe           ;66
000034  28e0              CMP      r0,#0xe0              ;66
000036  d105              BNE      |L1.68|
000038  2ae0              CMP      r2,#0xe0              ;67
00003a  d101              BNE      |L1.64|
00003c  4608              MOV      r0,r1                 ;68
00003e  e7f6              B        |L1.46|
                  |L1.64|
000040  0208              LSLS     r0,r1,#8              ;69
000042  e7f4              B        |L1.46|
                  |L1.68|
000044  ea412002          ORR      r0,r1,r2,LSL #8       ;71
000048  e7f1              B        |L1.46|
;;;73     
                          ENDP

