; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [--debug -c --asm --interleave -o.\Obj\slider.o --depend=.\Obj\slider.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\Libraries\CMSIS\CM3\CoreSupport -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x\startup\arm -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\User -I..\BaseDrive -I..\Ucosii -I..\Ucosii\Port -I..\Ucosii\Src -I..\Ucosii\Include -I..\Ucgui -I..\Ucgui\Config -I..\Ucgui\GUI_X -I..\Ucgui\GUI -I..\Ucgui\GUI\ConvertColor -I..\Ucgui\GUI\ConvertMono -I..\Ucgui\GUI\Core -I..\Ucgui\GUI\Core -I..\Ucgui\GUI\LCDDriver -I..\Ucgui\GUI\MultiLayer -I..\Ucgui\GUI\Widget -I..\Ucgui\GUI\WM -I..\ExternalDrive\Lcd -I..\ExternalDrive\Touch -I..\Panel -ID:\Keil\ARM\INC -ID:\Keil\ARM\INC\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=.\Obj\slider.crf ..\Ucgui\GUI\Widget\SLIDER.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  _Paint PROC
;;;121    */
;;;122    static void _Paint(SLIDER_Obj* pObj, WM_HWIN hObj) {
000000  e92d4ff0          PUSH     {r4-r11,lr}
000004  b089              SUB      sp,sp,#0x24
000006  4604              MOV      r4,r0
000008  468a              MOV      r10,r1
;;;123      GUI_RECT r, rFocus, rSlider, rSlot;
;;;124      int x0, xsize, i, Range, NumTicks;
;;;125      WIDGET__GetClientRect(&pObj->Widget, &rFocus);
00000a  a905              ADD      r1,sp,#0x14
00000c  4620              MOV      r0,r4
00000e  f7fffffe          BL       WIDGET__GetClientRect
;;;126      GUI__ReduceRect(&r, &rFocus, 1);
000012  2201              MOVS     r2,#1
000014  a905              ADD      r1,sp,#0x14
000016  a807              ADD      r0,sp,#0x1c
000018  f7fffffe          BL       GUI__ReduceRect
;;;127      NumTicks = pObj->NumTicks;
00001c  6ca5              LDR      r5,[r4,#0x48]
;;;128      xsize    = r.x1 - r.x0  + 1 - pObj->Width;
00001e  f9bd0020          LDRSH    r0,[sp,#0x20]
000022  f9bd101c          LDRSH    r1,[sp,#0x1c]
000026  1a40              SUBS     r0,r0,r1
000028  1c40              ADDS     r0,r0,#1
00002a  f9b4104c          LDRSH    r1,[r4,#0x4c]
00002e  1a47              SUBS     r7,r0,r1
;;;129      x0       = r.x0 + pObj->Width / 2;
000030  f9b4004c          LDRSH    r0,[r4,#0x4c]
000034  eb0071d0          ADD      r1,r0,r0,LSR #31
000038  f9bd201c          LDRSH    r2,[sp,#0x1c]
00003c  eb020661          ADD      r6,r2,r1,ASR #1
;;;130      Range    = pObj->Max - pObj->Min;
000040  e9d4100e          LDRD     r1,r0,[r4,#0x38]
000044  eba00901          SUB      r9,r0,r1
;;;131      if (Range == 0) {
000048  f1b90f00          CMP      r9,#0
00004c  d101              BNE      |L1.82|
;;;132        Range = 1;
00004e  f04f0901          MOV      r9,#1
                  |L1.82|
;;;133      }
;;;134      /* Fill with parents background color */
;;;135      #if !SLIDER_SUPPORT_TRANSPARENCY   /* Not needed any more, since window is transparent*/
;;;136        if (pObj->aBkColor[0] == GUI_INVALID_COLOR) {
;;;137          LCD_SetBkColor(WIDGET__GetBkColor(hObj));
;;;138        } else {
;;;139          LCD_SetBkColor(pObj->aBkColor[0]);
;;;140        }
;;;141        GUI_Clear();
;;;142      #else
;;;143        if (!WM_GetHasTrans(hObj)) {
000052  4650              MOV      r0,r10
000054  f7fffffe          BL       WM_GetHasTrans
000058  b920              CBNZ     r0,|L1.100|
;;;144          LCD_SetBkColor(pObj->aBkColor[0]);
00005a  6aa0              LDR      r0,[r4,#0x28]
00005c  f7fffffe          BL       LCD_SetBkColor
;;;145          GUI_Clear();
000060  f7fffffe          BL       GUI_Clear
                  |L1.100|
;;;146        }
;;;147      #endif
;;;148      /* Calculate Slider position */
;;;149      rSlider    = r;
000064  e9dd0107          LDRD     r0,r1,[sp,#0x1c]
000068  e9cd0103          STRD     r0,r1,[sp,#0xc]
;;;150      rSlider.y0 = 5;
00006c  2005              MOVS     r0,#5
00006e  f8ad000e          STRH     r0,[sp,#0xe]
;;;151      rSlider.x0 = x0 + (U32)xsize * (U32)(pObj->v - pObj->Min) / Range - pObj->Width / 2;
000072  6ba2              LDR      r2,[r4,#0x38]
000074  6c21              LDR      r1,[r4,#0x40]
000076  1a89              SUBS     r1,r1,r2
000078  4379              MULS     r1,r7,r1
00007a  fbb1f1f9          UDIV     r1,r1,r9
00007e  4431              ADD      r1,r1,r6
000080  f9b4004c          LDRSH    r0,[r4,#0x4c]
000084  eb0072d0          ADD      r2,r0,r0,LSR #31
000088  eba10162          SUB      r1,r1,r2,ASR #1
00008c  b209              SXTH     r1,r1
00008e  f8ad100c          STRH     r1,[sp,#0xc]
;;;152      rSlider.x1 = rSlider.x0 + pObj->Width;
000092  f8bd000c          LDRH     r0,[sp,#0xc]
000096  f8b4104c          LDRH     r1,[r4,#0x4c]
00009a  4408              ADD      r0,r0,r1
00009c  b200              SXTH     r0,r0
00009e  f8ad0010          STRH     r0,[sp,#0x10]
;;;153      /* Calculate Slot position */
;;;154      rSlot.x0 = x0;
0000a2  b230              SXTH     r0,r6
0000a4  f8ad0004          STRH     r0,[sp,#4]
;;;155      rSlot.x1 = x0 + xsize;
0000a8  19f0              ADDS     r0,r6,r7
0000aa  b200              SXTH     r0,r0
0000ac  f8ad0008          STRH     r0,[sp,#8]
;;;156      rSlot.y0 = (rSlider.y0 + rSlider.y1) / 2 - 1;
0000b0  f9bd100e          LDRSH    r1,[sp,#0xe]
0000b4  f9bd2012          LDRSH    r2,[sp,#0x12]
0000b8  1888              ADDS     r0,r1,r2
0000ba  eb0071d0          ADD      r1,r0,r0,LSR #31
0000be  1049              ASRS     r1,r1,#1
0000c0  1e49              SUBS     r1,r1,#1
0000c2  b209              SXTH     r1,r1
0000c4  f8ad1006          STRH     r1,[sp,#6]
;;;157      rSlot.y1 = rSlot.y0 + 3;
0000c8  f8bd0006          LDRH     r0,[sp,#6]
0000cc  1cc0              ADDS     r0,r0,#3
0000ce  b200              SXTH     r0,r0
0000d0  f8ad000a          STRH     r0,[sp,#0xa]
;;;158      WIDGET__EFFECT_DrawDownRect(&pObj->Widget, &rSlot);        /* Draw slot */
0000d4  a901              ADD      r1,sp,#4
0000d6  4620              MOV      r0,r4
0000d8  f7fffffe          BL       WIDGET__EFFECT_DrawDownRect
;;;159      /* Draw the ticks */
;;;160      if (NumTicks < 0) {
0000dc  2d00              CMP      r5,#0
0000de  da07              BGE      |L1.240|
;;;161        NumTicks = Range + 1;
0000e0  f1090501          ADD      r5,r9,#1
;;;162        if (NumTicks > (xsize / 5)) {
0000e4  2005              MOVS     r0,#5
0000e6  fb97f0f0          SDIV     r0,r7,r0
0000ea  42a8              CMP      r0,r5
0000ec  da00              BGE      |L1.240|
;;;163          NumTicks = 11;
0000ee  250b              MOVS     r5,#0xb
                  |L1.240|
;;;164        }
;;;165      }
;;;166      if (NumTicks > 1) {
0000f0  2d01              CMP      r5,#1
0000f2  dd16              BLE      |L1.290|
;;;167        LCD_SetColor(GUI_BLACK);
0000f4  2000              MOVS     r0,#0
0000f6  f7fffffe          BL       LCD_SetColor
;;;168        for (i = 0; i < NumTicks; i++) {
0000fa  f04f0800          MOV      r8,#0
0000fe  e00e              B        |L1.286|
                  |L1.256|
;;;169          int x = x0 + xsize * i / (NumTicks - 1);
000100  fb07f008          MUL      r0,r7,r8
000104  1e69              SUBS     r1,r5,#1
000106  fb90f0f1          SDIV     r0,r0,r1
00010a  eb000b06          ADD      r11,r0,r6
;;;170          WIDGET__DrawVLine(&pObj->Widget, x, 1, 3);
00010e  2303              MOVS     r3,#3
000110  2201              MOVS     r2,#1
000112  4659              MOV      r1,r11
000114  4620              MOV      r0,r4
000116  f7fffffe          BL       WIDGET__DrawVLine
00011a  f1080801          ADD      r8,r8,#1              ;168
                  |L1.286|
00011e  45a8              CMP      r8,r5                 ;168
000120  dbee              BLT      |L1.256|
                  |L1.290|
;;;171        }
;;;172      }
;;;173      /* Draw the slider itself */
;;;174      LCD_SetColor(pObj->aColor[0]);
000122  6b20              LDR      r0,[r4,#0x30]
000124  f7fffffe          BL       LCD_SetColor
;;;175      WIDGET__FillRectEx(&pObj->Widget, &rSlider);
000128  a903              ADD      r1,sp,#0xc
00012a  4620              MOV      r0,r4
00012c  f7fffffe          BL       WIDGET__FillRectEx
;;;176      LCD_SetColor(GUI_BLACK);
000130  2000              MOVS     r0,#0
000132  f7fffffe          BL       LCD_SetColor
;;;177      WIDGET__EFFECT_DrawUpRect(&pObj->Widget, &rSlider);
000136  a903              ADD      r1,sp,#0xc
000138  4620              MOV      r0,r4
00013a  f7fffffe          BL       WIDGET__EFFECT_DrawUpRect
;;;178      /* Draw focus */
;;;179      if (pObj->Widget.State & WIDGET_STATE_FOCUS) {
00013e  8ce0              LDRH     r0,[r4,#0x26]
000140  f0100f01          TST      r0,#1
000144  d007              BEQ      |L1.342|
;;;180        LCD_SetColor(GUI_BLACK);
000146  2000              MOVS     r0,#0
000148  f7fffffe          BL       LCD_SetColor
;;;181        WIDGET__DrawFocusRect(&pObj->Widget, &rFocus, 0);
00014c  2200              MOVS     r2,#0
00014e  a905              ADD      r1,sp,#0x14
000150  4620              MOV      r0,r4
000152  f7fffffe          BL       WIDGET__DrawFocusRect
                  |L1.342|
;;;182      }
;;;183    }
000156  b009              ADD      sp,sp,#0x24
000158  e8bd8ff0          POP      {r4-r11,pc}
;;;184    
                          ENDP

                  _SliderPressed PROC
;;;188    */
;;;189    static void _SliderPressed(SLIDER_Handle hObj, SLIDER_Obj* pObj) {
00015c  b570              PUSH     {r4-r6,lr}
00015e  4605              MOV      r5,r0
000160  460c              MOV      r4,r1
;;;190      WIDGET_OrState(hObj, SLIDER_STATE_PRESSED);
000162  f44f7180          MOV      r1,#0x100
000166  4628              MOV      r0,r5
000168  f7fffffe          BL       WIDGET_OrState
;;;191      if (pObj->Widget.Win.Status & WM_SF_ISVIS) {
00016c  8ba0              LDRH     r0,[r4,#0x1c]
00016e  f0100f02          TST      r0,#2
000172  d003              BEQ      |L1.380|
;;;192        WM_NotifyParent(hObj, WM_NOTIFICATION_CLICKED);
000174  2101              MOVS     r1,#1
000176  4628              MOV      r0,r5
000178  f7fffffe          BL       WM_NotifyParent
                  |L1.380|
;;;193      }
;;;194    }
00017c  bd70              POP      {r4-r6,pc}
;;;195    
                          ENDP

                  _SliderReleased PROC
;;;199    */
;;;200    static void _SliderReleased(SLIDER_Handle hObj, SLIDER_Obj* pObj) {
00017e  b570              PUSH     {r4-r6,lr}
000180  4605              MOV      r5,r0
000182  460c              MOV      r4,r1
;;;201      WIDGET_AndState(hObj, SLIDER_STATE_PRESSED);
000184  f44f7180          MOV      r1,#0x100
000188  4628              MOV      r0,r5
00018a  f7fffffe          BL       WIDGET_AndState
;;;202      if (pObj->Widget.Win.Status & WM_SF_ISVIS) {
00018e  8ba0              LDRH     r0,[r4,#0x1c]
000190  f0100f02          TST      r0,#2
000194  d003              BEQ      |L1.414|
;;;203        WM_NotifyParent(hObj, WM_NOTIFICATION_RELEASED);
000196  2102              MOVS     r1,#2
000198  4628              MOV      r0,r5
00019a  f7fffffe          BL       WM_NotifyParent
                  |L1.414|
;;;204      }
;;;205    }
00019e  bd70              POP      {r4-r6,pc}
;;;206    
                          ENDP

                  SLIDER_SetValue PROC
;;;411    */
;;;412    void SLIDER_SetValue(SLIDER_Handle hObj, int v) {
0001a0  b570              PUSH     {r4-r6,lr}
0001a2  4606              MOV      r6,r0
0001a4  460d              MOV      r5,r1
;;;413      SLIDER_Obj* pObj;
;;;414      if (hObj) {
0001a6  b1d6              CBZ      r6,|L1.478|
;;;415        WM_LOCK();
0001a8  f7fffffe          BL       GUI_Lock
;;;416        pObj = SLIDER_H2P(hObj);
0001ac  4630              MOV      r0,r6
0001ae  f7fffffe          BL       GUI_ALLOC_h2p
0001b2  4604              MOV      r4,r0
;;;417        /* Put in min/max range */
;;;418        if (v < pObj->Min) {
0001b4  6ba0              LDR      r0,[r4,#0x38]
0001b6  42a8              CMP      r0,r5
0001b8  dd00              BLE      |L1.444|
;;;419          v = pObj->Min;
0001ba  6ba5              LDR      r5,[r4,#0x38]
                  |L1.444|
;;;420        }
;;;421        if (v > pObj->Max) {
0001bc  6be0              LDR      r0,[r4,#0x3c]
0001be  42a8              CMP      r0,r5
0001c0  da00              BGE      |L1.452|
;;;422          v = pObj->Max;
0001c2  6be5              LDR      r5,[r4,#0x3c]
                  |L1.452|
;;;423        }
;;;424        if (pObj->v != v) {
0001c4  6c20              LDR      r0,[r4,#0x40]
0001c6  42a8              CMP      r0,r5
0001c8  d007              BEQ      |L1.474|
;;;425          pObj->v = v;
0001ca  6425              STR      r5,[r4,#0x40]
;;;426          WM_InvalidateWindow(hObj);
0001cc  4630              MOV      r0,r6
0001ce  f7fffffe          BL       WM_InvalidateWindow
;;;427          WM_NotifyParent(hObj, WM_NOTIFICATION_VALUE_CHANGED);
0001d2  2105              MOVS     r1,#5
0001d4  4630              MOV      r0,r6
0001d6  f7fffffe          BL       WM_NotifyParent
                  |L1.474|
;;;428        }
;;;429        WM_UNLOCK();
0001da  f7fffffe          BL       GUI_Unlock
                  |L1.478|
;;;430      }
;;;431    }
0001de  bd70              POP      {r4-r6,pc}
;;;432    
                          ENDP

                  _OnTouch PROC
;;;210    */
;;;211    static void _OnTouch(SLIDER_Handle hObj, SLIDER_Obj* pObj, WM_MESSAGE*pMsg) {
0001e0  e92d4ff7          PUSH     {r0-r2,r4-r11,lr}
0001e4  460c              MOV      r4,r1
0001e6  4617              MOV      r7,r2
;;;212      const GUI_PID_STATE* pState = (const GUI_PID_STATE*)pMsg->Data.p;
0001e8  f8d78008          LDR      r8,[r7,#8]
;;;213      if (pMsg->Data.p) {  /* Something happened in our area (pressed or released) */
0001ec  68b8              LDR      r0,[r7,#8]
0001ee  b3f0              CBZ      r0,|L1.622|
;;;214        if (pState->Pressed) {
0001f0  f8980008          LDRB     r0,[r8,#8]
0001f4  b3e0              CBZ      r0,|L1.624|
;;;215          int x0, xsize, x, Sel, Range;
;;;216          Range = (pObj->Max - pObj->Min);
0001f6  e9d4100e          LDRD     r1,r0,[r4,#0x38]
0001fa  eba00b01          SUB      r11,r0,r1
;;;217          x0    = 1 + pObj->Width / 2;  /* 1 pixel focus rectangle + width of actual slider */
0001fe  f9b4004c          LDRSH    r0,[r4,#0x4c]
000202  eb0071d0          ADD      r1,r0,r0,LSR #31
000206  1049              ASRS     r1,r1,#1
000208  f1010a01          ADD      r10,r1,#1
;;;218          x     = (pObj->Widget.State & WIDGET_STATE_VERTICAL) ? pState->y : pState->x;
00020c  8ce0              LDRH     r0,[r4,#0x26]
00020e  f0100f08          TST      r0,#8
000212  d002              BEQ      |L1.538|
000214  f8d80004          LDR      r0,[r8,#4]
000218  e001              B        |L1.542|
                  |L1.538|
00021a  f8d80000          LDR      r0,[r8,#0]
                  |L1.542|
00021e  4605              MOV      r5,r0
;;;219          x    -= x0;
000220  eba5050a          SUB      r5,r5,r10
;;;220          xsize = WIDGET__GetWindowSizeX(hObj) - 2 * x0;
000224  9800              LDR      r0,[sp,#0]
000226  f7fffffe          BL       WIDGET__GetWindowSizeX
00022a  2102              MOVS     r1,#2
00022c  fb01091a          MLS      r9,r1,r10,r0
;;;221          if (x <= 0) {
000230  2d00              CMP      r5,#0
000232  dc01              BGT      |L1.568|
;;;222            Sel = pObj->Min;
000234  6ba6              LDR      r6,[r4,#0x38]
000236  e015              B        |L1.612|
                  |L1.568|
;;;223          } else if (x >= xsize) {
000238  454d              CMP      r5,r9
00023a  db01              BLT      |L1.576|
;;;224            Sel = pObj->Max;
00023c  6be6              LDR      r6,[r4,#0x3c]
00023e  e011              B        |L1.612|
                  |L1.576|
;;;225          } else {
;;;226            int Div;
;;;227            Div = xsize ? xsize : 1;     /* Make sure we do not divide by 0, even though xsize should never be 0 in this case anyhow */
000240  f1b90f00          CMP      r9,#0
000244  d001              BEQ      |L1.586|
000246  4649              MOV      r1,r9
000248  e000              B        |L1.588|
                  |L1.586|
00024a  2101              MOVS     r1,#1
                  |L1.588|
00024c  4608              MOV      r0,r1
;;;228            Sel = pObj->Min + ((U32)Range * (U32)x + Div / 2) / Div;
00024e  4601              MOV      r1,r0
000250  eb0072d0          ADD      r2,r0,r0,LSR #31
000254  1052              ASRS     r2,r2,#1
000256  fb0b2205          MLA      r2,r11,r5,r2
00025a  fbb2f2f0          UDIV     r2,r2,r0
00025e  6ba3              LDR      r3,[r4,#0x38]
000260  18d6              ADDS     r6,r2,r3
;;;229          }
000262  bf00              NOP      
                  |L1.612|
;;;230          if (WM_IsFocussable(hObj)) {
000264  9800              LDR      r0,[sp,#0]
000266  f7fffffe          BL       WM_IsFocussable
00026a  b128              CBZ      r0,|L1.632|
;;;231            WM_SetFocus(hObj);
00026c  e001              B        |L1.626|
                  |L1.622|
00026e  e01c              B        |L1.682|
                  |L1.624|
000270  e013              B        |L1.666|
                  |L1.626|
000272  9800              LDR      r0,[sp,#0]
000274  f7fffffe          BL       WM_SetFocus
                  |L1.632|
;;;232          }
;;;233          WM_SetCapture(hObj, 1);
000278  2101              MOVS     r1,#1
00027a  9800              LDR      r0,[sp,#0]
00027c  f7fffffe          BL       WM_SetCapture
;;;234          SLIDER_SetValue(hObj, Sel);
000280  4631              MOV      r1,r6
000282  9800              LDR      r0,[sp,#0]
000284  f7fffffe          BL       SLIDER_SetValue
;;;235          if ((pObj->Widget.State & SLIDER_STATE_PRESSED) == 0){   
000288  8ce0              LDRH     r0,[r4,#0x26]
00028a  f4107f80          TST      r0,#0x100
00028e  d103              BNE      |L1.664|
;;;236            _SliderPressed(hObj, pObj);
000290  4621              MOV      r1,r4
000292  9800              LDR      r0,[sp,#0]
000294  f7fffffe          BL       _SliderPressed
                  |L1.664|
;;;237          }
;;;238        } else {
000298  e007              B        |L1.682|
                  |L1.666|
;;;239          /* React only if button was pressed before ... avoid problems with moving / hiding windows above (such as dropdown) */
;;;240          if (pObj->Widget.State & SLIDER_STATE_PRESSED) {   
00029a  8ce0              LDRH     r0,[r4,#0x26]
00029c  f4107f80          TST      r0,#0x100
0002a0  d003              BEQ      |L1.682|
;;;241            _SliderReleased(hObj, pObj);
0002a2  4621              MOV      r1,r4
0002a4  9800              LDR      r0,[sp,#0]
0002a6  f7fffffe          BL       _SliderReleased
                  |L1.682|
;;;242          }
;;;243        }
;;;244      }
;;;245    }
0002aa  e8bd8ffe          POP      {r1-r11,pc}
;;;246    
                          ENDP

                  SLIDER_Dec PROC
;;;358    */
;;;359    void SLIDER_Dec(SLIDER_Handle hObj) {
0002ae  b570              PUSH     {r4-r6,lr}
0002b0  4605              MOV      r5,r0
;;;360      SLIDER_Obj* pObj;
;;;361      if (hObj) {
0002b2  b1ad              CBZ      r5,|L1.736|
;;;362        WM_LOCK();
0002b4  f7fffffe          BL       GUI_Lock
;;;363        pObj = SLIDER_H2P(hObj);
0002b8  4628              MOV      r0,r5
0002ba  f7fffffe          BL       GUI_ALLOC_h2p
0002be  4604              MOV      r4,r0
;;;364        if (pObj->v > pObj->Min) {
0002c0  6ba1              LDR      r1,[r4,#0x38]
0002c2  6c20              LDR      r0,[r4,#0x40]
0002c4  4288              CMP      r0,r1
0002c6  dd09              BLE      |L1.732|
;;;365          pObj->v--;
0002c8  6c20              LDR      r0,[r4,#0x40]
0002ca  1e40              SUBS     r0,r0,#1
0002cc  6420              STR      r0,[r4,#0x40]
;;;366          WM_InvalidateWindow(hObj);
0002ce  4628              MOV      r0,r5
0002d0  f7fffffe          BL       WM_InvalidateWindow
;;;367          WM_NotifyParent(hObj, WM_NOTIFICATION_VALUE_CHANGED);
0002d4  2105              MOVS     r1,#5
0002d6  4628              MOV      r0,r5
0002d8  f7fffffe          BL       WM_NotifyParent
                  |L1.732|
;;;368        }
;;;369        WM_UNLOCK();
0002dc  f7fffffe          BL       GUI_Unlock
                  |L1.736|
;;;370      }
;;;371    }
0002e0  bd70              POP      {r4-r6,pc}
;;;372    
                          ENDP

                  SLIDER_Inc PROC
;;;376    */
;;;377    void SLIDER_Inc(SLIDER_Handle hObj) {
0002e2  b570              PUSH     {r4-r6,lr}
0002e4  4605              MOV      r5,r0
;;;378      SLIDER_Obj* pObj;
;;;379      if (hObj) {
0002e6  b1ad              CBZ      r5,|L1.788|
;;;380        WM_LOCK();
0002e8  f7fffffe          BL       GUI_Lock
;;;381        pObj = SLIDER_H2P(hObj);
0002ec  4628              MOV      r0,r5
0002ee  f7fffffe          BL       GUI_ALLOC_h2p
0002f2  4604              MOV      r4,r0
;;;382        if (pObj->v < pObj->Max) {
0002f4  e9d4100f          LDRD     r1,r0,[r4,#0x3c]
0002f8  4288              CMP      r0,r1
0002fa  da09              BGE      |L1.784|
;;;383          pObj->v++;
0002fc  6c20              LDR      r0,[r4,#0x40]
0002fe  1c40              ADDS     r0,r0,#1
000300  6420              STR      r0,[r4,#0x40]
;;;384          WM_InvalidateWindow(hObj);
000302  4628              MOV      r0,r5
000304  f7fffffe          BL       WM_InvalidateWindow
;;;385          WM_NotifyParent(hObj, WM_NOTIFICATION_VALUE_CHANGED);
000308  2105              MOVS     r1,#5
00030a  4628              MOV      r0,r5
00030c  f7fffffe          BL       WM_NotifyParent
                  |L1.784|
;;;386        }
;;;387        WM_UNLOCK();
000310  f7fffffe          BL       GUI_Unlock
                  |L1.788|
;;;388      }
;;;389    }
000314  bd70              POP      {r4-r6,pc}
;;;390    
                          ENDP

                  _OnKey PROC
;;;250    */
;;;251    static void  _OnKey(SLIDER_Handle hObj, WM_MESSAGE*pMsg) {
000316  e92d41f0          PUSH     {r4-r8,lr}
00031a  4606              MOV      r6,r0
00031c  460c              MOV      r4,r1
;;;252      const WM_KEY_INFO* pKeyInfo;
;;;253      int Key;
;;;254      pKeyInfo = (const WM_KEY_INFO*)(pMsg->Data.p);
00031e  68a5              LDR      r5,[r4,#8]
;;;255      Key = pKeyInfo->Key;
000320  682f              LDR      r7,[r5,#0]
;;;256      if (pKeyInfo->PressedCnt > 0) {
000322  6868              LDR      r0,[r5,#4]
000324  2800              CMP      r0,#0
000326  dd0e              BLE      |L1.838|
;;;257        switch (Key) {
000328  2f10              CMP      r7,#0x10
00032a  d005              BEQ      |L1.824|
00032c  2f12              CMP      r7,#0x12
00032e  d107              BNE      |L1.832|
;;;258          case GUI_KEY_RIGHT:
;;;259            SLIDER_Inc(hObj);
000330  4630              MOV      r0,r6
000332  f7fffffe          BL       SLIDER_Inc
;;;260            break;                    /* Send to parent by not doing anything */
000336  e005              B        |L1.836|
                  |L1.824|
;;;261          case GUI_KEY_LEFT:
;;;262            SLIDER_Dec(hObj);
000338  4630              MOV      r0,r6
00033a  f7fffffe          BL       SLIDER_Dec
;;;263            break;                    /* Send to parent by not doing anything */
00033e  e001              B        |L1.836|
                  |L1.832|
;;;264          default:
;;;265            return;
;;;266        }
;;;267      }
;;;268    }
000340  e8bd81f0          POP      {r4-r8,pc}
                  |L1.836|
000344  bf00              NOP                            ;260
                  |L1.838|
000346  bf00              NOP      
000348  e7fa              B        |L1.832|
;;;269    
                          ENDP

                  _SLIDER_Callback PROC
;;;273    */
;;;274    static void _SLIDER_Callback (WM_MESSAGE *pMsg) {
00034a  b570              PUSH     {r4-r6,lr}
00034c  4604              MOV      r4,r0
;;;275      SLIDER_Handle hObj;
;;;276      SLIDER_Obj* pObj;
;;;277      hObj = pMsg->hWin;
00034e  f9b45004          LDRSH    r5,[r4,#4]
;;;278      pObj = SLIDER_H2P(hObj);
000352  4628              MOV      r0,r5
000354  f7fffffe          BL       GUI_ALLOC_h2p
000358  4606              MOV      r6,r0
;;;279      /* Let widget handle the standard messages */
;;;280      if (WIDGET_HandleActive(hObj, pMsg) == 0) {
00035a  4621              MOV      r1,r4
00035c  4628              MOV      r0,r5
00035e  f7fffffe          BL       WIDGET_HandleActive
000362  b900              CBNZ     r0,|L1.870|
                  |L1.868|
;;;281        return;
;;;282      }
;;;283      switch (pMsg->MsgId) {
;;;284      case WM_PAINT:
;;;285        GUI_DEBUG_LOG("SLIDER: _Callback(WM_PAINT)\n");
;;;286        _Paint(pObj, hObj);
;;;287        return;
;;;288      case WM_TOUCH:
;;;289        _OnTouch(hObj, pObj, pMsg);
;;;290        break;
;;;291      case WM_KEY:
;;;292        _OnKey(hObj, pMsg);
;;;293        break;
;;;294      }
;;;295      WM_DefaultProc(pMsg);
;;;296    }
000364  bd70              POP      {r4-r6,pc}
                  |L1.870|
000366  6820              LDR      r0,[r4,#0]            ;283
000368  280c              CMP      r0,#0xc               ;283
00036a  d008              BEQ      |L1.894|
00036c  280e              CMP      r0,#0xe               ;283
00036e  d00c              BEQ      |L1.906|
000370  280f              CMP      r0,#0xf               ;283
000372  d10f              BNE      |L1.916|
000374  4629              MOV      r1,r5                 ;286
000376  4630              MOV      r0,r6                 ;286
000378  f7fffffe          BL       _Paint
00037c  e7f2              B        |L1.868|
                  |L1.894|
00037e  4622              MOV      r2,r4                 ;289
000380  4631              MOV      r1,r6                 ;289
000382  4628              MOV      r0,r5                 ;289
000384  f7fffffe          BL       _OnTouch
000388  e004              B        |L1.916|
                  |L1.906|
00038a  4621              MOV      r1,r4                 ;292
00038c  4628              MOV      r0,r5                 ;292
00038e  f7fffffe          BL       _OnKey
000392  bf00              NOP                            ;293
                  |L1.916|
000394  bf00              NOP                            ;290
000396  4620              MOV      r0,r4                 ;295
000398  f7fffffe          BL       WM_DefaultProc
00039c  bf00              NOP      
00039e  e7e1              B        |L1.868|
;;;297    
                          ENDP

                  SLIDER_CreateEx PROC
;;;311    */
;;;312    SLIDER_Handle SLIDER_CreateEx(int x0, int y0, int xsize, int ysize, WM_HWIN hParent,
0003a0  e92d4fff          PUSH     {r0-r11,lr}
;;;313                                  int WinFlags, int ExFlags, int Id)
;;;314    {
0003a4  b085              SUB      sp,sp,#0x14
0003a6  4680              MOV      r8,r0
0003a8  4689              MOV      r9,r1
0003aa  4692              MOV      r10,r2
0003ac  e9dd5b13          LDRD     r5,r11,[sp,#0x4c]
;;;315      SLIDER_Handle hObj;
;;;316      /* Create the window */
;;;317      WM_LOCK();
0003b0  f7fffffe          BL       GUI_Lock
;;;318      #if SLIDER_SUPPORT_TRANSPARENCY
;;;319        WinFlags |= WM_CF_HASTRANS;
0003b4  f0450501          ORR      r5,r5,#1
;;;320      #endif
;;;321      hObj = WM_CreateWindowAsChild(x0, y0, xsize, ysize, hParent, WinFlags, _SLIDER_Callback, sizeof(SLIDER_Obj) - sizeof(WM_Obj));
0003b8  2330              MOVS     r3,#0x30
0003ba  4a58              LDR      r2,|L1.1308|
0003bc  b2a9              UXTH     r1,r5
0003be  9812              LDR      r0,[sp,#0x48]
0003c0  e88d000f          STM      sp,{r0-r3}
0003c4  4652              MOV      r2,r10
0003c6  4649              MOV      r1,r9
0003c8  4640              MOV      r0,r8
0003ca  9b08              LDR      r3,[sp,#0x20]
0003cc  f7fffffe          BL       WM_CreateWindowAsChild
0003d0  4606              MOV      r6,r0
;;;322      if (hObj) {
0003d2  b316              CBZ      r6,|L1.1050|
;;;323        SLIDER_Obj* pObj = SLIDER_H2P(hObj);
0003d4  4630              MOV      r0,r6
0003d6  f7fffffe          BL       GUI_ALLOC_h2p
0003da  4604              MOV      r4,r0
;;;324        U16 InitState;
;;;325        /* Handle SpecialFlags */
;;;326        InitState = WIDGET_STATE_FOCUSSABLE;
0003dc  2710              MOVS     r7,#0x10
;;;327        if (ExFlags & SLIDER_CF_VERTICAL) {
0003de  f01b0f08          TST      r11,#8
0003e2  d001              BEQ      |L1.1000|
;;;328          InitState |= WIDGET_CF_VERTICAL;
0003e4  f0470708          ORR      r7,r7,#8
                  |L1.1000|
;;;329        }
;;;330        /* init widget specific variables */
;;;331        WIDGET__Init(&pObj->Widget, Id, InitState);
0003e8  463a              MOV      r2,r7
0003ea  4620              MOV      r0,r4
0003ec  9915              LDR      r1,[sp,#0x54]
0003ee  f7fffffe          BL       WIDGET__Init
;;;332        /* init member variables */
;;;333        SLIDER_INIT_ID(pObj);
;;;334        pObj->aBkColor[0] = _DefaultBkColor;
0003f2  484b              LDR      r0,|L1.1312|
0003f4  6800              LDR      r0,[r0,#0]  ; _DefaultBkColor
0003f6  62a0              STR      r0,[r4,#0x28]
;;;335        pObj->aBkColor[1] = SLIDER_BKCOLOR1_DEFAULT;
0003f8  f06f417f          MVN      r1,#0xff000000
0003fc  62e1              STR      r1,[r4,#0x2c]
;;;336        pObj->aColor[0]   = SLIDER_COLOR0_DEFAULT;
0003fe  4849              LDR      r0,|L1.1316|
000400  6320              STR      r0,[r4,#0x30]
;;;337        pObj->aColor[1]   = SLIDER_COLOR1_DEFAULT;
000402  2100              MOVS     r1,#0
000404  6361              STR      r1,[r4,#0x34]
;;;338        pObj->Width       = 8;
000406  2008              MOVS     r0,#8
000408  f8a4004c          STRH     r0,[r4,#0x4c]
;;;339        pObj->Max         = 100;
00040c  2064              MOVS     r0,#0x64
00040e  63e0              STR      r0,[r4,#0x3c]
;;;340        pObj->Min         = 0;
000410  2000              MOVS     r0,#0
000412  63a0              STR      r0,[r4,#0x38]
;;;341        pObj->NumTicks    = -1;
000414  1e40              SUBS     r0,r0,#1
000416  64a0              STR      r0,[r4,#0x48]
;;;342      } else {
000418  bf00              NOP      
                  |L1.1050|
;;;343        GUI_DEBUG_ERROROUT_IF(hObj==0, "SLIDER_Create failed")
;;;344      }
;;;345      WM_UNLOCK();
00041a  f7fffffe          BL       GUI_Unlock
;;;346      return hObj;
00041e  4630              MOV      r0,r6
;;;347    }
000420  b009              ADD      sp,sp,#0x24
000422  e8bd8ff0          POP      {r4-r11,pc}
;;;348    
                          ENDP

                  SLIDER_SetWidth PROC
;;;394    */
;;;395    void SLIDER_SetWidth(SLIDER_Handle hObj, int Width) {
000426  b570              PUSH     {r4-r6,lr}
000428  4606              MOV      r6,r0
00042a  460d              MOV      r5,r1
;;;396      SLIDER_Obj* pObj;
;;;397      if (hObj) {
00042c  b18e              CBZ      r6,|L1.1106|
;;;398        WM_LOCK();
00042e  f7fffffe          BL       GUI_Lock
;;;399        pObj = SLIDER_H2P(hObj);
000432  4630              MOV      r0,r6
000434  f7fffffe          BL       GUI_ALLOC_h2p
000438  4604              MOV      r4,r0
;;;400        if (pObj->Width != Width) {
00043a  f9b4004c          LDRSH    r0,[r4,#0x4c]
00043e  42a8              CMP      r0,r5
000440  d005              BEQ      |L1.1102|
;;;401          pObj->Width = Width;
000442  b228              SXTH     r0,r5
000444  f8a4004c          STRH     r0,[r4,#0x4c]
;;;402          WM_InvalidateWindow(hObj);
000448  4630              MOV      r0,r6
00044a  f7fffffe          BL       WM_InvalidateWindow
                  |L1.1102|
;;;403        }
;;;404        WM_UNLOCK();
00044e  f7fffffe          BL       GUI_Unlock
                  |L1.1106|
;;;405      }
;;;406    }
000452  bd70              POP      {r4-r6,pc}
;;;407    
                          ENDP

                  SLIDER_SetRange PROC
;;;436    */
;;;437    void SLIDER_SetRange(SLIDER_Handle hObj, int Min, int Max) {
000454  e92d41f0          PUSH     {r4-r8,lr}
000458  4607              MOV      r7,r0
00045a  460c              MOV      r4,r1
00045c  4616              MOV      r6,r2
;;;438      if (hObj) {
00045e  b1c7              CBZ      r7,|L1.1170|
;;;439        SLIDER_Obj* pObj;
;;;440        WM_LOCK();
000460  f7fffffe          BL       GUI_Lock
;;;441        pObj = SLIDER_H2P(hObj);
000464  4638              MOV      r0,r7
000466  f7fffffe          BL       GUI_ALLOC_h2p
00046a  4605              MOV      r5,r0
;;;442        if (Max < Min) {
00046c  42a6              CMP      r6,r4
00046e  da00              BGE      |L1.1138|
;;;443          Max = Min;
000470  4626              MOV      r6,r4
                  |L1.1138|
;;;444        }
;;;445        pObj->Min = Min;
000472  63ac              STR      r4,[r5,#0x38]
;;;446        pObj->Max = Max;
000474  63ee              STR      r6,[r5,#0x3c]
;;;447        if (pObj->v < Min) {
000476  6c28              LDR      r0,[r5,#0x40]
000478  42a0              CMP      r0,r4
00047a  da00              BGE      |L1.1150|
;;;448          pObj->v = Min;
00047c  642c              STR      r4,[r5,#0x40]
                  |L1.1150|
;;;449        }
;;;450        if (pObj->v > Max) {
00047e  6c28              LDR      r0,[r5,#0x40]
000480  42b0              CMP      r0,r6
000482  dd00              BLE      |L1.1158|
;;;451          pObj->v = Max;
000484  642e              STR      r6,[r5,#0x40]
                  |L1.1158|
;;;452        }
;;;453        WM_InvalidateWindow(hObj);
000486  4638              MOV      r0,r7
000488  f7fffffe          BL       WM_InvalidateWindow
;;;454        WM_UNLOCK();
00048c  f7fffffe          BL       GUI_Unlock
;;;455      }
000490  bf00              NOP      
                  |L1.1170|
;;;456    }
000492  e8bd81f0          POP      {r4-r8,pc}
;;;457    
                          ENDP

                  SLIDER_SetNumTicks PROC
;;;461    */
;;;462    void SLIDER_SetNumTicks(SLIDER_Handle hObj, int NumTicks) {
000496  b570              PUSH     {r4-r6,lr}
000498  4605              MOV      r5,r0
00049a  460c              MOV      r4,r1
;;;463      if (hObj && (NumTicks >= 0)) {
00049c  b175              CBZ      r5,|L1.1212|
00049e  2c00              CMP      r4,#0
0004a0  db0c              BLT      |L1.1212|
;;;464        SLIDER_Obj* pObj;
;;;465        WM_LOCK();
0004a2  f7fffffe          BL       GUI_Lock
;;;466        pObj = SLIDER_H2P(hObj);
0004a6  4628              MOV      r0,r5
0004a8  f7fffffe          BL       GUI_ALLOC_h2p
0004ac  4606              MOV      r6,r0
;;;467        pObj->NumTicks = NumTicks;
0004ae  64b4              STR      r4,[r6,#0x48]
;;;468        WM_InvalidateWindow(hObj);
0004b0  4628              MOV      r0,r5
0004b2  f7fffffe          BL       WM_InvalidateWindow
;;;469        WM_UNLOCK();
0004b6  f7fffffe          BL       GUI_Unlock
;;;470      }
0004ba  bf00              NOP      
                  |L1.1212|
;;;471    }
0004bc  bd70              POP      {r4-r6,pc}
;;;472    
                          ENDP

                  SLIDER_SetBkColor PROC
;;;476    */
;;;477    void SLIDER_SetBkColor(SLIDER_Handle hObj, GUI_COLOR Color) {
0004be  b570              PUSH     {r4-r6,lr}
0004c0  4605              MOV      r5,r0
0004c2  460c              MOV      r4,r1
;;;478      if (hObj) {
0004c4  b1b5              CBZ      r5,|L1.1268|
;;;479        SLIDER_Obj * pObj;
;;;480        WM_LOCK();
0004c6  f7fffffe          BL       GUI_Lock
;;;481        pObj = SLIDER_H2P(hObj);
0004ca  4628              MOV      r0,r5
0004cc  f7fffffe          BL       GUI_ALLOC_h2p
0004d0  4606              MOV      r6,r0
;;;482        pObj->aBkColor[0] = Color;
0004d2  62b4              STR      r4,[r6,#0x28]
;;;483        #if SLIDER_SUPPORT_TRANSPARENCY
;;;484          if (Color <= 0xFFFFFF) {
0004d4  f1b47f80          CMP      r4,#0x1000000
0004d8  d203              BCS      |L1.1250|
;;;485            WM_ClrHasTrans(hObj);
0004da  4628              MOV      r0,r5
0004dc  f7fffffe          BL       WM_ClrHasTrans
0004e0  e002              B        |L1.1256|
                  |L1.1250|
;;;486          } else {
;;;487            WM_SetHasTrans(hObj);
0004e2  4628              MOV      r0,r5
0004e4  f7fffffe          BL       WM_SetHasTrans
                  |L1.1256|
;;;488          }
;;;489        #endif
;;;490        WM_InvalidateWindow(hObj);
0004e8  4628              MOV      r0,r5
0004ea  f7fffffe          BL       WM_InvalidateWindow
;;;491        WM_UNLOCK();
0004ee  f7fffffe          BL       GUI_Unlock
;;;492      }
0004f2  bf00              NOP      
                  |L1.1268|
;;;493    }
0004f4  bd70              POP      {r4-r6,pc}
;;;494    
                          ENDP

                  SLIDER_SetDefaultBkColor PROC
;;;498    */
;;;499    void SLIDER_SetDefaultBkColor(GUI_COLOR Color) {
0004f6  490a              LDR      r1,|L1.1312|
;;;500      _DefaultBkColor = Color;
0004f8  6008              STR      r0,[r1,#0]  ; _DefaultBkColor
;;;501    }
0004fa  4770              BX       lr
;;;502    
                          ENDP

                  SLIDER_GetValue PROC
;;;512    */
;;;513    int SLIDER_GetValue(SLIDER_Handle hObj) {
0004fc  b570              PUSH     {r4-r6,lr}
0004fe  4604              MOV      r4,r0
;;;514      int r = 0;
000500  2600              MOVS     r6,#0
;;;515      SLIDER_Obj* pObj;
;;;516      if (hObj) {
000502  b144              CBZ      r4,|L1.1302|
;;;517        WM_LOCK();
000504  f7fffffe          BL       GUI_Lock
;;;518        pObj = SLIDER_H2P(hObj);
000508  4620              MOV      r0,r4
00050a  f7fffffe          BL       GUI_ALLOC_h2p
00050e  4605              MOV      r5,r0
;;;519        r = pObj->v;
000510  6c2e              LDR      r6,[r5,#0x40]
;;;520        WM_UNLOCK();
000512  f7fffffe          BL       GUI_Unlock
                  |L1.1302|
;;;521      }
;;;522      return r;
000516  4630              MOV      r0,r6
;;;523    }
000518  bd70              POP      {r4-r6,pc}
;;;524    
                          ENDP

00051a  0000              DCW      0x0000
                  |L1.1308|
                          DCD      _SLIDER_Callback
                  |L1.1312|
                          DCD      _DefaultBkColor
                  |L1.1316|
                          DCD      0x00c0c0c0

                          AREA ||.data||, DATA, ALIGN=2

                  _DefaultBkColor
                          DCD      0x00c0c0c0
