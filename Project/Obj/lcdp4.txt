; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [--debug -c --asm --interleave -o.\Obj\lcdp4.o --depend=.\Obj\lcdp4.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\Libraries\CMSIS\CM3\CoreSupport -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x\startup\arm -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\User -I..\BaseDrive -I..\Ucosii -I..\Ucosii\Port -I..\Ucosii\Src -I..\Ucosii\Include -I..\Ucgui -I..\Ucgui\Config -I..\Ucgui\GUI_X -I..\Ucgui\GUI -I..\Ucgui\GUI\ConvertColor -I..\Ucgui\GUI\ConvertMono -I..\Ucgui\GUI\Core -I..\Ucgui\GUI\Core -I..\Ucgui\GUI\LCDDriver -I..\Ucgui\GUI\MultiLayer -I..\Ucgui\GUI\Widget -I..\Ucgui\GUI\WM -I..\ExternalDrive\Lcd -I..\ExternalDrive\Touch -I..\Panel -ID:\Keil\ARM\INC -ID:\Keil\ARM\INC\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=.\Obj\lcdp4.crf ..\Ucgui\GUI\ConvertMono\LCDP4.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=1

                  LCD_Color2Index_4 PROC
;;;56     */
;;;57     unsigned LCD_Color2Index_4(LCD_COLOR Color) {
000000  b530              PUSH     {r4,r5,lr}
000002  4601              MOV      r1,r0
;;;58       int r,g,b;
;;;59       r = (Color>>(0+4))  &15;
000004  f3c11203          UBFX     r2,r1,#4,#4
;;;60       g = (Color>>(8+4))  &15;
000008  f3c13303          UBFX     r3,r1,#12,#4
;;;61       b = (Color>>(16+4)) &15;
00000c  f3c15403          UBFX     r4,r1,#20,#4
;;;62       return (r+g+b+1) /3;
000010  18d0              ADDS     r0,r2,r3
000012  4420              ADD      r0,r0,r4
000014  1c40              ADDS     r0,r0,#1
000016  2503              MOVS     r5,#3
000018  fb90f0f5          SDIV     r0,r0,r5
;;;63     }
00001c  bd30              POP      {r4,r5,pc}
;;;64     
                          ENDP

                  LCD_Index2Color_4 PROC
;;;68     */
;;;69     LCD_COLOR LCD_Index2Color_4(int Index) {
00001e  4601              MOV      r1,r0
;;;70       return ((U32)Index)*0x111111;
000020  eb011001          ADD      r0,r1,r1,LSL #4
000024  eb002001          ADD      r0,r0,r1,LSL #8
000028  eb003000          ADD      r0,r0,r0,LSL #12
;;;71     }
00002c  4770              BX       lr
;;;72     
                          ENDP

                  LCD_GetIndexMask_4 PROC
;;;76     */
;;;77     unsigned LCD_GetIndexMask_4(void) {
00002e  200f              MOVS     r0,#0xf
;;;78       return 0x0f;
;;;79     }
000030  4770              BX       lr
;;;80     
                          ENDP

