; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [--debug -c --asm --interleave -o.\Obj\editbin.o --depend=.\Obj\editbin.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\Libraries\CMSIS\CM3\CoreSupport -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x\startup\arm -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\User -I..\BaseDrive -I..\Ucosii -I..\Ucosii\Port -I..\Ucosii\Src -I..\Ucosii\Include -I..\Ucgui -I..\Ucgui\Config -I..\Ucgui\GUI_X -I..\Ucgui\GUI -I..\Ucgui\GUI\ConvertColor -I..\Ucgui\GUI\ConvertMono -I..\Ucgui\GUI\Core -I..\Ucgui\GUI\Core -I..\Ucgui\GUI\LCDDriver -I..\Ucgui\GUI\MultiLayer -I..\Ucgui\GUI\Widget -I..\Ucgui\GUI\WM -I..\ExternalDrive\Lcd -I..\ExternalDrive\Touch -I..\Panel -ID:\Keil\ARM\INC -ID:\Keil\ARM\INC\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=.\Obj\editbin.crf ..\Ucgui\GUI\Widget\EDITBin.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  _BinChar2Int PROC
;;;38     */
;;;39     static int _BinChar2Int(int Char) {
000000  4601              MOV      r1,r0
;;;40       if ((Char >= '0') && (Char <= '1'))
000002  2930              CMP      r1,#0x30
000004  db04              BLT      |L1.16|
000006  2931              CMP      r1,#0x31
000008  dc02              BGT      |L1.16|
;;;41         return Char - '0';
00000a  f1a10030          SUB      r0,r1,#0x30
                  |L1.14|
;;;42       return -1;
;;;43     }
00000e  4770              BX       lr
                  |L1.16|
000010  f04f30ff          MOV      r0,#0xffffffff        ;42
000014  e7fb              B        |L1.14|
;;;44     
                          ENDP

                  _GetNumDigits PROC
;;;48     */
;;;49     static int _GetNumDigits(U32 Value) {
000016  4601              MOV      r1,r0
;;;50       int Ret;
;;;51       for (Ret = 0; Value; Value >>= 1, Ret++);
000018  2000              MOVS     r0,#0
00001a  e001              B        |L1.32|
                  |L1.28|
00001c  0849              LSRS     r1,r1,#1
00001e  1c40              ADDS     r0,r0,#1
                  |L1.32|
000020  2900              CMP      r1,#0
000022  d1fb              BNE      |L1.28|
;;;52       return Ret;
;;;53     }
000024  4770              BX       lr
;;;54     
                          ENDP

                  _UpdateBuffer PROC
;;;58     */
;;;59     static void _UpdateBuffer(EDIT_Handle hObj) {
000026  b538              PUSH     {r3-r5,lr}
000028  4605              MOV      r5,r0
;;;60       char * s;
;;;61       EDIT_Obj * pObj;
;;;62       pObj = EDIT_H2P(hObj); /* The GUI needs not to be locked here. This function is called only from EDIT_AddKey which has already locked the GUI */
00002a  4628              MOV      r0,r5
00002c  f7fffffe          BL       GUI_ALLOC_h2p
000030  4604              MOV      r4,r0
;;;63       s = (char*) GUI_ALLOC_h2p(pObj->hpText);
000032  f9b40028          LDRSH    r0,[r4,#0x28]
000036  f7fffffe          BL       GUI_ALLOC_h2p
00003a  9000              STR      r0,[sp,#0]
;;;64       GUI_AddBin(pObj->CurrentValue, pObj->MaxLen, &s);
00003c  8d62              LDRH     r2,[r4,#0x2a]
00003e  b2d1              UXTB     r1,r2
000040  466a              MOV      r2,sp
000042  6be0              LDR      r0,[r4,#0x3c]
000044  f7fffffe          BL       GUI_AddBin
;;;65     }
000048  bd38              POP      {r3-r5,pc}
;;;66     
                          ENDP

                  _EditBin PROC
;;;70     */
;;;71     static void _EditBin(U8 Bit, EDIT_Obj* pObj, EDIT_Handle hObj) {
00004a  e92d47f0          PUSH     {r4-r10,lr}
00004e  4605              MOV      r5,r0
000050  460c              MOV      r4,r1
000052  4616              MOV      r6,r2
;;;72       int Pos = pObj->MaxLen - pObj->CursorPos - 1;   /* Bit position */
000054  f9b4002a          LDRSH    r0,[r4,#0x2a]
000058  6c21              LDR      r1,[r4,#0x40]
00005a  1a40              SUBS     r0,r0,r1
00005c  1e47              SUBS     r7,r0,#1
;;;73       U32 AndMask = ~(1   << Pos);
00005e  2001              MOVS     r0,#1
000060  40b8              LSLS     r0,r0,r7
000062  ea6f0900          MVN      r9,r0
;;;74       U32 OrMask  =   Bit << Pos;
000066  fa05fa07          LSL      r10,r5,r7
;;;75       I32 Result  = pObj->CurrentValue & AndMask;
00006a  6be0              LDR      r0,[r4,#0x3c]
00006c  ea000809          AND      r8,r0,r9
;;;76       Result     |= OrMask;
000070  ea48080a          ORR      r8,r8,r10
;;;77       EDIT_SetValue(hObj, Result);
000074  4641              MOV      r1,r8
000076  4630              MOV      r0,r6
000078  f7fffffe          BL       EDIT_SetValue
;;;78     }
00007c  e8bd87f0          POP      {r4-r10,pc}
;;;79     
                          ENDP

                  _GetCurrentBit PROC
;;;83     */
;;;84     static U8 _GetCurrentBit(EDIT_Obj* pObj) {
000080  b530              PUSH     {r4,r5,lr}
000082  4601              MOV      r1,r0
;;;85       int Pos = pObj->MaxLen - pObj->CursorPos - 1;   /* Bit position */
000084  f9b1402a          LDRSH    r4,[r1,#0x2a]
000088  6c0d              LDR      r5,[r1,#0x40]
00008a  1b64              SUBS     r4,r4,r5
00008c  1e62              SUBS     r2,r4,#1
;;;86       U32 AndMask = 1 << Pos;
00008e  2401              MOVS     r4,#1
000090  fa04f302          LSL      r3,r4,r2
;;;87       U8 Bit = (pObj->CurrentValue & AndMask) >> Pos;
000094  6bcc              LDR      r4,[r1,#0x3c]
000096  401c              ANDS     r4,r4,r3
000098  40d4              LSRS     r4,r4,r2
00009a  b2e0              UXTB     r0,r4
;;;88       return Bit;
;;;89     }
00009c  bd30              POP      {r4,r5,pc}
;;;90     
                          ENDP

                  _AddKeyBin PROC
;;;100    */
;;;101    static void _AddKeyBin(EDIT_Handle hObj, int Key) {
00009e  e92d41f0          PUSH     {r4-r8,lr}
0000a2  4606              MOV      r6,r0
0000a4  460d              MOV      r5,r1
;;;102      EDIT_Obj * pObj;
;;;103      pObj = EDIT_H2P(hObj); /* The GUI needs not to be locked here. This function is called only from EDIT_AddKey which has already locked the GUI */
0000a6  4630              MOV      r0,r6
0000a8  f7fffffe          BL       GUI_ALLOC_h2p
0000ac  4604              MOV      r4,r0
;;;104      if (pObj) {
0000ae  b3ec              CBZ      r4,|L1.300|
;;;105        switch (Key) {
0000b0  2d10              CMP      r5,#0x10
0000b2  d026              BEQ      |L1.258|
0000b4  2d11              CMP      r5,#0x11
0000b6  d004              BEQ      |L1.194|
0000b8  2d12              CMP      r5,#0x12
0000ba  d01c              BEQ      |L1.246|
0000bc  2d13              CMP      r5,#0x13
0000be  d126              BNE      |L1.270|
0000c0  e00c              B        |L1.220|
                  |L1.194|
;;;106        case GUI_KEY_UP:
;;;107          {
;;;108            int Bit = _GetCurrentBit(pObj) + 1;
0000c2  4620              MOV      r0,r4
0000c4  f7fffffe          BL       _GetCurrentBit
0000c8  1c47              ADDS     r7,r0,#1
;;;109            if (Bit > 1) {
0000ca  2f01              CMP      r7,#1
0000cc  dd00              BLE      |L1.208|
;;;110              Bit = 0;
0000ce  2700              MOVS     r7,#0
                  |L1.208|
;;;111            }
;;;112            _EditBin(Bit, pObj, hObj);
0000d0  4632              MOV      r2,r6
0000d2  4621              MOV      r1,r4
0000d4  b2f8              UXTB     r0,r7
0000d6  f7fffffe          BL       _EditBin
;;;113          }
;;;114          break;
0000da  e02b              B        |L1.308|
                  |L1.220|
;;;115        case GUI_KEY_DOWN:
;;;116          {
;;;117            int Bit = _GetCurrentBit(pObj) - 1;
0000dc  4620              MOV      r0,r4
0000de  f7fffffe          BL       _GetCurrentBit
0000e2  1e47              SUBS     r7,r0,#1
;;;118            if (Bit < 0) {
0000e4  2f00              CMP      r7,#0
0000e6  da00              BGE      |L1.234|
;;;119              Bit = 1;
0000e8  2701              MOVS     r7,#1
                  |L1.234|
;;;120            }
;;;121            _EditBin(Bit, pObj, hObj);
0000ea  4632              MOV      r2,r6
0000ec  4621              MOV      r1,r4
0000ee  b2f8              UXTB     r0,r7
0000f0  f7fffffe          BL       _EditBin
;;;122          }
;;;123          break;
0000f4  e01e              B        |L1.308|
                  |L1.246|
;;;124        case GUI_KEY_RIGHT:
;;;125          EDIT__SetCursorPos(pObj, pObj->CursorPos + 1);
0000f6  6c20              LDR      r0,[r4,#0x40]
0000f8  1c41              ADDS     r1,r0,#1
0000fa  4620              MOV      r0,r4
0000fc  f7fffffe          BL       EDIT__SetCursorPos
;;;126          break;
000100  e018              B        |L1.308|
                  |L1.258|
;;;127        case GUI_KEY_LEFT:
;;;128          EDIT__SetCursorPos(pObj, pObj->CursorPos - 1);
000102  6c20              LDR      r0,[r4,#0x40]
000104  1e41              SUBS     r1,r0,#1
000106  4620              MOV      r0,r4
000108  f7fffffe          BL       EDIT__SetCursorPos
;;;129          break;
00010c  e012              B        |L1.308|
                  |L1.270|
;;;130        default:
;;;131          {
;;;132            int Bit = _BinChar2Int(Key);
00010e  4628              MOV      r0,r5
000110  f7fffffe          BL       _BinChar2Int
000114  4607              MOV      r7,r0
;;;133            if (Bit >= 0) {
000116  2f00              CMP      r7,#0
000118  db0b              BLT      |L1.306|
;;;134              _EditBin(Bit, pObj, hObj);
00011a  4632              MOV      r2,r6
00011c  4621              MOV      r1,r4
00011e  b2f8              UXTB     r0,r7
000120  f7fffffe          BL       _EditBin
;;;135              EDIT__SetCursorPos(pObj, pObj->CursorPos + 1);
000124  6c20              LDR      r0,[r4,#0x40]
000126  1c41              ADDS     r1,r0,#1
000128  4620              MOV      r0,r4
00012a  e000              B        |L1.302|
                  |L1.300|
00012c  e006              B        |L1.316|
                  |L1.302|
00012e  f7fffffe          BL       EDIT__SetCursorPos
                  |L1.306|
;;;136            }
;;;137          }
;;;138          break;
000132  bf00              NOP      
                  |L1.308|
000134  bf00              NOP                            ;114
;;;139        }
;;;140        _UpdateBuffer(hObj);
000136  4630              MOV      r0,r6
000138  f7fffffe          BL       _UpdateBuffer
                  |L1.316|
;;;141      }
;;;142    }
00013c  e8bd81f0          POP      {r4-r8,pc}
;;;143    
                          ENDP

                  EDIT_SetBinMode PROC
;;;153    */
;;;154    void EDIT_SetBinMode(EDIT_Handle hEdit, U32 Value, U32 Min, U32 Max) {
000140  e92d47f0          PUSH     {r4-r10,lr}
000144  4607              MOV      r7,r0
000146  4688              MOV      r8,r1
000148  4691              MOV      r9,r2
00014a  461e              MOV      r6,r3
;;;155      EDIT_Obj* pObj;
;;;156      int MaxLen;
;;;157      WM_LOCK();
00014c  f7fffffe          BL       GUI_Lock
;;;158      if (hEdit) {
000150  b357              CBZ      r7,|L1.424|
;;;159        pObj = EDIT_H2P(hEdit);
000152  4638              MOV      r0,r7
000154  f7fffffe          BL       GUI_ALLOC_h2p
000158  4604              MOV      r4,r0
;;;160        pObj->pfAddKeyEx    = _AddKeyBin;
00015a  4815              LDR      r0,|L1.432|
00015c  64e0              STR      r0,[r4,#0x4c]
;;;161        pObj->pfUpdateBuffer = _UpdateBuffer;
00015e  4815              LDR      r0,|L1.436|
000160  6520              STR      r0,[r4,#0x50]
;;;162        pObj->CurrentValue = Value;
000162  f8c4803c          STR      r8,[r4,#0x3c]
;;;163        pObj->CursorPos = 0;
000166  2000              MOVS     r0,#0
000168  6420              STR      r0,[r4,#0x40]
;;;164        MaxLen = pObj->MaxLen;
00016a  f9b4502a          LDRSH    r5,[r4,#0x2a]
;;;165        if (MaxLen <= 0 ) {
00016e  2d00              CMP      r5,#0
000170  dc03              BGT      |L1.378|
;;;166          MaxLen = _GetNumDigits(Max);
000172  4630              MOV      r0,r6
000174  f7fffffe          BL       _GetNumDigits
000178  4605              MOV      r5,r0
                  |L1.378|
;;;167        }
;;;168        if (MaxLen > 32) {
00017a  2d20              CMP      r5,#0x20
00017c  dd00              BLE      |L1.384|
;;;169          MaxLen = 32;
00017e  2520              MOVS     r5,#0x20
                  |L1.384|
;;;170        }
;;;171        if (MaxLen != pObj->MaxLen) {
000180  f9b4002a          LDRSH    r0,[r4,#0x2a]
000184  42a8              CMP      r0,r5
000186  d003              BEQ      |L1.400|
;;;172          EDIT_SetMaxLen(hEdit, MaxLen);
000188  4629              MOV      r1,r5
00018a  4638              MOV      r0,r7
00018c  f7fffffe          BL       EDIT_SetMaxLen
                  |L1.400|
;;;173        }
;;;174        pObj->Min = Min;
000190  f8c49030          STR      r9,[r4,#0x30]
;;;175        pObj->Max = Max;
000194  6366              STR      r6,[r4,#0x34]
;;;176        pObj->EditMode = GUI_EDIT_MODE_OVERWRITE;
000196  2001              MOVS     r0,#1
000198  f8840048          STRB     r0,[r4,#0x48]
;;;177        _UpdateBuffer(hEdit);
00019c  4638              MOV      r0,r7
00019e  f7fffffe          BL       _UpdateBuffer
;;;178        WM_Invalidate(hEdit);
0001a2  4638              MOV      r0,r7
0001a4  f7fffffe          BL       WM_InvalidateWindow
                  |L1.424|
;;;179      }
;;;180      WM_UNLOCK();
0001a8  f7fffffe          BL       GUI_Unlock
;;;181    }
0001ac  e8bd87f0          POP      {r4-r10,pc}
;;;182    
                          ENDP

                  |L1.432|
                          DCD      _AddKeyBin
                  |L1.436|
                          DCD      _UpdateBuffer
