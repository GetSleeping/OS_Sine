; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [--debug -c --asm --interleave -o.\Obj\gui_touch_driveranalog.o --depend=.\Obj\gui_touch_driveranalog.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\Libraries\CMSIS\CM3\CoreSupport -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x\startup\arm -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\User -I..\BaseDrive -I..\Ucosii -I..\Ucosii\Port -I..\Ucosii\Src -I..\Ucosii\Include -I..\Ucgui -I..\Ucgui\Config -I..\Ucgui\GUI_X -I..\Ucgui\GUI -I..\Ucgui\GUI\ConvertColor -I..\Ucgui\GUI\ConvertMono -I..\Ucgui\GUI\Core -I..\Ucgui\GUI\Core -I..\Ucgui\GUI\LCDDriver -I..\Ucgui\GUI\MultiLayer -I..\Ucgui\GUI\Widget -I..\Ucgui\GUI\WM -I..\ExternalDrive\Lcd -I..\ExternalDrive\Touch -I..\Panel -ID:\Keil\ARM\INC -ID:\Keil\ARM\INC\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=.\Obj\gui_touch_driveranalog.crf ..\Ucgui\GUI\Core\GUI_TOUCH_DriverAnalog.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  _AD2X PROC
;;;128    #ifndef WIN32
;;;129    static int _AD2X(int adx) {
000000  4601              MOV      r1,r0
;;;130      I32 r = adx - xyMinMax[GUI_COORD_X].Min;
000002  488a              LDR      r0,|L1.556|
000004  6800              LDR      r0,[r0,#0]  ; xyMinMax
000006  1a0a              SUBS     r2,r1,r0
;;;131      r *= GUI_TOUCH_XSIZE - 1;
000008  eb021002          ADD      r0,r2,r2,LSL #4
00000c  ebc02202          RSB      r2,r0,r2,LSL #8
;;;132      return r / (xyMinMax[GUI_COORD_X].Max - xyMinMax[GUI_COORD_X].Min);    
000010  4886              LDR      r0,|L1.556|
000012  6840              LDR      r0,[r0,#4]  ; xyMinMax
000014  4b85              LDR      r3,|L1.556|
000016  681b              LDR      r3,[r3,#0]  ; xyMinMax
000018  1ac0              SUBS     r0,r0,r3
00001a  fb92f0f0          SDIV     r0,r2,r0
;;;133    }
00001e  4770              BX       lr
;;;134    
                          ENDP

                  _AD2Y PROC
;;;141    */
;;;142    static int _AD2Y(int ady) {
000020  4601              MOV      r1,r0
;;;143      I32 r = ady - xyMinMax[GUI_COORD_Y].Min;
000022  4882              LDR      r0,|L1.556|
000024  6880              LDR      r0,[r0,#8]  ; xyMinMax
000026  1a0a              SUBS     r2,r1,r0
;;;144      r *= GUI_TOUCH_YSIZE - 1;
000028  ebc21082          RSB      r0,r2,r2,LSL #6
00002c  eb002202          ADD      r2,r0,r2,LSL #8
;;;145      return r/(xyMinMax[GUI_COORD_Y].Max - xyMinMax[GUI_COORD_Y].Min);    
000030  487e              LDR      r0,|L1.556|
000032  68c0              LDR      r0,[r0,#0xc]
000034  4b7d              LDR      r3,|L1.556|
000036  689b              LDR      r3,[r3,#8]  ; xyMinMax
000038  1ac0              SUBS     r0,r0,r3
00003a  fb92f0f0          SDIV     r0,r2,r0
;;;146    }
00003e  4770              BX       lr
;;;147    #endif
                          ENDP

                  _Log2Phys PROC
;;;152    */
;;;153    static int _Log2Phys(int l, I32 l0, I32 l1, I32 p0, I32 p1) {
000040  b570              PUSH     {r4-r6,lr}
000042  4604              MOV      r4,r0
000044  9d04              LDR      r5,[sp,#0x10]
;;;154      return p0+ ((p1 - p0) * (l - l0)) / (l1 - l0);
000046  1ae8              SUBS     r0,r5,r3
000048  1a66              SUBS     r6,r4,r1
00004a  4370              MULS     r0,r6,r0
00004c  1a56              SUBS     r6,r2,r1
00004e  fb90f0f6          SDIV     r0,r0,r6
000052  4418              ADD      r0,r0,r3
;;;155    }
000054  bd70              POP      {r4-r6,pc}
;;;156    
                          ENDP

                  _StoreUnstable PROC
;;;160    */
;;;161    static void _StoreUnstable(int x, int y) {
000056  e92d41f0          PUSH     {r4-r8,lr}
00005a  4607              MOV      r7,r0
00005c  460c              MOV      r4,r1
;;;162      static int _xLast = -1;
;;;163      static int _yLast = -1;
;;;164      int xOut, yOut;
;;;165    
;;;166      if ((x != -1) && (y != -1) && (_xLast != -1) && (_yLast != -1)) {
00005e  1c78              ADDS     r0,r7,#1
000060  d00e              BEQ      |L1.128|
000062  1c60              ADDS     r0,r4,#1
000064  d00c              BEQ      |L1.128|
000066  4872              LDR      r0,|L1.560|
000068  6800              LDR      r0,[r0,#0]  ; _xLast
00006a  1c40              ADDS     r0,r0,#1
00006c  d008              BEQ      |L1.128|
00006e  4871              LDR      r0,|L1.564|
000070  6800              LDR      r0,[r0,#0]  ; _yLast
000072  1c40              ADDS     r0,r0,#1
000074  d004              BEQ      |L1.128|
;;;167        xOut = _xLast;    
000076  486e              LDR      r0,|L1.560|
000078  6805              LDR      r5,[r0,#0]  ; _xLast
;;;168        yOut = _yLast;    
00007a  486e              LDR      r0,|L1.564|
00007c  6806              LDR      r6,[r0,#0]  ; _yLast
00007e  e002              B        |L1.134|
                  |L1.128|
;;;169      } else {
;;;170        xOut = -1;
000080  f04f35ff          MOV      r5,#0xffffffff
;;;171        yOut = -1;    
000084  462e              MOV      r6,r5
                  |L1.134|
;;;172      }
;;;173      _xLast = x;
000086  486a              LDR      r0,|L1.560|
000088  6007              STR      r7,[r0,#0]  ; _xLast
;;;174      _yLast = y;
00008a  486a              LDR      r0,|L1.564|
00008c  6004              STR      r4,[r0,#0]  ; _yLast
;;;175      GUI_TOUCH_StoreUnstable(xOut, yOut);
00008e  4631              MOV      r1,r6
000090  4628              MOV      r0,r5
000092  f7fffffe          BL       GUI_TOUCH_StoreUnstable
;;;176    }
000096  e8bd81f0          POP      {r4-r8,pc}
;;;177    /*********************************************************************
                          ENDP

                  GUI_TOUCH_GetxPhys PROC
;;;186    */
;;;187    int  GUI_TOUCH_GetxPhys(void) {
00009a  4867              LDR      r0,|L1.568|
;;;188      return xPhys;
00009c  6800              LDR      r0,[r0,#0]  ; xPhys
;;;189    }
00009e  4770              BX       lr
;;;190    
                          ENDP

                  GUI_TOUCH_GetyPhys PROC
;;;194    */
;;;195    int  GUI_TOUCH_GetyPhys(void) {
0000a0  4866              LDR      r0,|L1.572|
;;;196      return yPhys;
0000a2  6800              LDR      r0,[r0,#0]  ; yPhys
;;;197    }
0000a4  4770              BX       lr
;;;198    
                          ENDP

                  GUI_TOUCH_SetDefaultCalibration PROC
;;;202    */
;;;203    void GUI_TOUCH_SetDefaultCalibration(void) {
0000a6  2001              MOVS     r0,#1
;;;204      xyMinMax[0].Min = GUI_TOUCH_AD_LEFT;
0000a8  4960              LDR      r1,|L1.556|
0000aa  6008              STR      r0,[r1,#0]  ; xyMinMax
;;;205      xyMinMax[0].Max = GUI_TOUCH_AD_RIGHT;
0000ac  f64070fe          MOV      r0,#0xffe
0000b0  6048              STR      r0,[r1,#4]  ; xyMinMax
;;;206      xyMinMax[1].Min = GUI_TOUCH_AD_TOP;
0000b2  2001              MOVS     r0,#1
0000b4  6088              STR      r0,[r1,#8]  ; xyMinMax
;;;207      xyMinMax[1].Max = GUI_TOUCH_AD_BOTTOM;
0000b6  f64071fe          MOV      r1,#0xffe
0000ba  485c              LDR      r0,|L1.556|
0000bc  60c1              STR      r1,[r0,#0xc]
;;;208    }
0000be  4770              BX       lr
;;;209    
                          ENDP

                  GUI_TOUCH_Calibrate PROC
;;;213    */
;;;214    int GUI_TOUCH_Calibrate(int Coord, int Log0, int Log1, int Phys0, int Phys1) {
0000c0  e92d4ff8          PUSH     {r3-r11,lr}
0000c4  4604              MOV      r4,r0
0000c6  460d              MOV      r5,r1
0000c8  4616              MOV      r6,r2
0000ca  461f              MOV      r7,r3
0000cc  f8dd8028          LDR      r8,[sp,#0x28]
;;;215      int l0 = 0;
0000d0  f04f0900          MOV      r9,#0
;;;216      int l1 = (Coord == GUI_COORD_X) ? LCD_XSIZE - 1 : LCD_YSIZE - 1;
0000d4  b90c              CBNZ     r4,|L1.218|
0000d6  20ef              MOVS     r0,#0xef
0000d8  e001              B        |L1.222|
                  |L1.218|
0000da  f240103f          MOV      r0,#0x13f
                  |L1.222|
0000de  4682              MOV      r10,r0
;;;217      if (labs(Phys0 - Phys1) < 20) {
0000e0  ebb70008          SUBS     r0,r7,r8
0000e4  d401              BMI      |L1.234|
0000e6  4601              MOV      r1,r0
0000e8  e000              B        |L1.236|
                  |L1.234|
0000ea  4241              RSBS     r1,r0,#0
                  |L1.236|
0000ec  2914              CMP      r1,#0x14
0000ee  da02              BGE      |L1.246|
;;;218        return 1;
0000f0  2001              MOVS     r0,#1
                  |L1.242|
;;;219      }
;;;220      if (labs(Log0 - Log1) < 20) {
;;;221        return 1;
;;;222      }
;;;223      xyMinMax[Coord].Min = _Log2Phys(l0, Log0, Log1, Phys0, Phys1);  
;;;224      xyMinMax[Coord].Max = _Log2Phys(l1, Log0, Log1, Phys0, Phys1);
;;;225      return 0;
;;;226    }
0000f2  e8bd8ff8          POP      {r3-r11,pc}
                  |L1.246|
0000f6  1ba8              SUBS     r0,r5,r6              ;220
0000f8  d401              BMI      |L1.254|
0000fa  4601              MOV      r1,r0                 ;220
0000fc  e000              B        |L1.256|
                  |L1.254|
0000fe  4241              RSBS     r1,r0,#0              ;220
                  |L1.256|
000100  2914              CMP      r1,#0x14              ;220
000102  da01              BGE      |L1.264|
000104  2001              MOVS     r0,#1                 ;221
000106  e7f4              B        |L1.242|
                  |L1.264|
000108  463b              MOV      r3,r7                 ;223
00010a  4632              MOV      r2,r6                 ;223
00010c  4629              MOV      r1,r5                 ;223
00010e  4648              MOV      r0,r9                 ;223
000110  f8cd8000          STR      r8,[sp,#0]            ;223
000114  f7fffffe          BL       _Log2Phys
000118  4944              LDR      r1,|L1.556|
00011a  f8410034          STR      r0,[r1,r4,LSL #3]     ;223
00011e  463b              MOV      r3,r7                 ;224
000120  4632              MOV      r2,r6                 ;224
000122  4629              MOV      r1,r5                 ;224
000124  4650              MOV      r0,r10                ;224
000126  f8cd8000          STR      r8,[sp,#0]            ;224
00012a  f7fffffe          BL       _Log2Phys
00012e  493f              LDR      r1,|L1.556|
000130  eb0101c4          ADD      r1,r1,r4,LSL #3       ;224
000134  6048              STR      r0,[r1,#4]            ;224
000136  2000              MOVS     r0,#0                 ;225
000138  e7db              B        |L1.242|
;;;227    
                          ENDP

                  GUI_TOUCH_GetCalData PROC
;;;231    */
;;;232    void GUI_TOUCH_GetCalData(int Coord, int* pMin,int* pMax) {
00013a  4b3c              LDR      r3,|L1.556|
;;;233      *pMin = xyMinMax[Coord].Min;
00013c  f8533030          LDR      r3,[r3,r0,LSL #3]
000140  600b              STR      r3,[r1,#0]
;;;234      *pMax = xyMinMax[Coord].Max; 
000142  4b3a              LDR      r3,|L1.556|
000144  eb0303c0          ADD      r3,r3,r0,LSL #3
000148  685b              LDR      r3,[r3,#4]
00014a  6013              STR      r3,[r2,#0]
;;;235    }
00014c  4770              BX       lr
;;;236      
                          ENDP

                  GUI_TOUCH_Exec PROC
;;;240    */
;;;241    void GUI_TOUCH_Exec(void) {
00014e  b570              PUSH     {r4-r6,lr}
;;;242      #ifndef WIN32
;;;243      static U8 ReadState;
;;;244      int x,y;
;;;245      /* calculate Min / Max values */
;;;246      if (xyMinMax[GUI_COORD_X].Min < xyMinMax[GUI_COORD_X].Max) {
000150  4836              LDR      r0,|L1.556|
000152  6800              LDR      r0,[r0,#0]  ; xyMinMax
000154  4935              LDR      r1,|L1.556|
000156  6849              LDR      r1,[r1,#4]  ; xyMinMax
000158  4288              CMP      r0,r1
00015a  da08              BGE      |L1.366|
;;;247        xMin = xyMinMax[GUI_COORD_X].Min;
00015c  4833              LDR      r0,|L1.556|
00015e  6800              LDR      r0,[r0,#0]  ; xyMinMax
000160  4937              LDR      r1,|L1.576|
000162  6008              STR      r0,[r1,#0]  ; xMin
;;;248        xMax = xyMinMax[GUI_COORD_X].Max;
000164  4831              LDR      r0,|L1.556|
000166  6840              LDR      r0,[r0,#4]  ; xyMinMax
000168  4936              LDR      r1,|L1.580|
00016a  6008              STR      r0,[r1,#0]  ; xMax
00016c  e007              B        |L1.382|
                  |L1.366|
;;;249      } else {
;;;250        xMax = xyMinMax[GUI_COORD_X].Min;
00016e  482f              LDR      r0,|L1.556|
000170  6800              LDR      r0,[r0,#0]  ; xyMinMax
000172  4934              LDR      r1,|L1.580|
000174  6008              STR      r0,[r1,#0]  ; xMax
;;;251        xMin = xyMinMax[GUI_COORD_X].Max;
000176  482d              LDR      r0,|L1.556|
000178  6840              LDR      r0,[r0,#4]  ; xyMinMax
00017a  4931              LDR      r1,|L1.576|
00017c  6008              STR      r0,[r1,#0]  ; xMin
                  |L1.382|
;;;252      }
;;;253      if (xyMinMax[GUI_COORD_Y].Min < xyMinMax[GUI_COORD_Y].Max) {
00017e  482b              LDR      r0,|L1.556|
000180  6881              LDR      r1,[r0,#8]  ; xyMinMax
000182  68c0              LDR      r0,[r0,#0xc]
000184  4281              CMP      r1,r0
000186  da08              BGE      |L1.410|
;;;254        yMin = xyMinMax[GUI_COORD_Y].Min;
000188  4828              LDR      r0,|L1.556|
00018a  6880              LDR      r0,[r0,#8]  ; xyMinMax
00018c  492e              LDR      r1,|L1.584|
00018e  6008              STR      r0,[r1,#0]  ; yMin
;;;255        yMax = xyMinMax[GUI_COORD_Y].Max;
000190  4826              LDR      r0,|L1.556|
000192  68c0              LDR      r0,[r0,#0xc]
000194  492d              LDR      r1,|L1.588|
000196  6008              STR      r0,[r1,#0]  ; yMax
000198  e007              B        |L1.426|
                  |L1.410|
;;;256      } else {
;;;257        yMax = xyMinMax[GUI_COORD_Y].Min;
00019a  4824              LDR      r0,|L1.556|
00019c  6880              LDR      r0,[r0,#8]  ; xyMinMax
00019e  492b              LDR      r1,|L1.588|
0001a0  6008              STR      r0,[r1,#0]  ; yMax
;;;258        yMin = xyMinMax[GUI_COORD_Y].Max;
0001a2  4822              LDR      r0,|L1.556|
0001a4  68c0              LDR      r0,[r0,#0xc]
0001a6  4928              LDR      r1,|L1.584|
0001a8  6008              STR      r0,[r1,#0]  ; yMin
                  |L1.426|
;;;259      }
;;;260      /* Execute the state machine which reads the touch */
;;;261      switch (ReadState) {
0001aa  4829              LDR      r0,|L1.592|
0001ac  7800              LDRB     r0,[r0,#0]  ; ReadState
0001ae  b958              CBNZ     r0,|L1.456|
;;;262      case 0:
;;;263        yPhys = TOUCH_X_MeasureY();
0001b0  f7fffffe          BL       GUI_TOUCH_X_MeasureY
0001b4  4921              LDR      r1,|L1.572|
0001b6  6008              STR      r0,[r1,#0]  ; yPhys
;;;264        TOUCH_X_ActivateY();  /* Prepare X- measurement */
0001b8  f7fffffe          BL       GUI_TOUCH_X_ActivateY
;;;265        ReadState++;
0001bc  4824              LDR      r0,|L1.592|
0001be  7800              LDRB     r0,[r0,#0]  ; ReadState
0001c0  1c40              ADDS     r0,r0,#1
0001c2  4923              LDR      r1,|L1.592|
0001c4  7008              STRB     r0,[r1,#0]
;;;266        break;
0001c6  e02f              B        |L1.552|
                  |L1.456|
;;;267      default:
;;;268        xPhys = TOUCH_X_MeasureX();
0001c8  f7fffffe          BL       GUI_TOUCH_X_MeasureX
0001cc  491a              LDR      r1,|L1.568|
0001ce  6008              STR      r0,[r1,#0]  ; xPhys
;;;269        TOUCH_X_ActivateX();  /* Prepare Y- measurement */
0001d0  f7fffffe          BL       GUI_TOUCH_X_ActivateX
;;;270        /* Convert values into logical values */
;;;271        #if !GUI_TOUCH_SWAP_XY   /* Is X/Y swapped ? */
;;;272          x = xPhys;
0001d4  4818              LDR      r0,|L1.568|
0001d6  6805              LDR      r5,[r0,#0]  ; xPhys
;;;273          y = yPhys;
0001d8  4818              LDR      r0,|L1.572|
0001da  6804              LDR      r4,[r0,#0]  ; yPhys
;;;274        #else
;;;275          x = yPhys;
;;;276          y = xPhys;
;;;277        #endif
;;;278        if ((x < xMin) || (x > xMax)  || (y < yMin) || (y > yMax)) {
0001dc  4818              LDR      r0,|L1.576|
0001de  6800              LDR      r0,[r0,#0]  ; xMin
0001e0  4285              CMP      r5,r0
0001e2  db0b              BLT      |L1.508|
0001e4  4817              LDR      r0,|L1.580|
0001e6  6800              LDR      r0,[r0,#0]  ; xMax
0001e8  4285              CMP      r5,r0
0001ea  dc07              BGT      |L1.508|
0001ec  4816              LDR      r0,|L1.584|
0001ee  6800              LDR      r0,[r0,#0]  ; yMin
0001f0  4284              CMP      r4,r0
0001f2  db03              BLT      |L1.508|
0001f4  4815              LDR      r0,|L1.588|
0001f6  6800              LDR      r0,[r0,#0]  ; yMax
0001f8  4284              CMP      r4,r0
0001fa  dd05              BLE      |L1.520|
                  |L1.508|
;;;279          _StoreUnstable(-1, -1);
0001fc  f04f31ff          MOV      r1,#0xffffffff
000200  4608              MOV      r0,r1
000202  f7fffffe          BL       _StoreUnstable
000206  e00b              B        |L1.544|
                  |L1.520|
;;;280        } else {
;;;281          x = _AD2X(x);
000208  4628              MOV      r0,r5
00020a  f7fffffe          BL       _AD2X
00020e  4605              MOV      r5,r0
;;;282          y = _AD2Y(y);
000210  4620              MOV      r0,r4
000212  f7fffffe          BL       _AD2Y
000216  4604              MOV      r4,r0
;;;283          _StoreUnstable(x, y);
000218  4621              MOV      r1,r4
00021a  4628              MOV      r0,r5
00021c  f7fffffe          BL       _StoreUnstable
                  |L1.544|
;;;284        }
;;;285        /* Reset state machine */
;;;286        ReadState = 0;
000220  2000              MOVS     r0,#0
000222  490b              LDR      r1,|L1.592|
000224  7008              STRB     r0,[r1,#0]
;;;287        break;
000226  bf00              NOP      
                  |L1.552|
000228  bf00              NOP                            ;266
;;;288      }
;;;289      #endif /* WIN32 */
;;;290    }
00022a  bd70              POP      {r4-r6,pc}
;;;291    
                          ENDP

                  |L1.556|
                          DCD      xyMinMax
                  |L1.560|
                          DCD      _xLast
                  |L1.564|
                          DCD      _yLast
                  |L1.568|
                          DCD      xPhys
                  |L1.572|
                          DCD      yPhys
                  |L1.576|
                          DCD      xMin
                  |L1.580|
                          DCD      xMax
                  |L1.584|
                          DCD      yMin
                  |L1.588|
                          DCD      yMax
                  |L1.592|
                          DCD      ReadState

                          AREA ||.data||, DATA, ALIGN=2

                  xyMinMax
                          DCD      0x00000ffe
                          DCD      0x00000001
                          DCD      0x00000001
                          DCD      0x00000ffe
                  _xLast
                          DCD      0xffffffff
                  _yLast
                          DCD      0xffffffff
                  ReadState
000018  00000000          DCB      0x00,0x00,0x00,0x00
                  xPhys
                          DCD      0x00000000
                  yPhys
                          DCD      0x00000000
                  xMin
                          DCD      0x00000000
                  xMax
                          DCD      0x00000000
                  yMin
                          DCD      0x00000000
                  yMax
                          DCD      0x00000000
