; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [--debug -c --asm --interleave -o.\Obj\guicharm.o --depend=.\Obj\guicharm.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\Libraries\CMSIS\CM3\CoreSupport -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x\startup\arm -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\User -I..\BaseDrive -I..\Ucosii -I..\Ucosii\Port -I..\Ucosii\Src -I..\Ucosii\Include -I..\Ucgui -I..\Ucgui\Config -I..\Ucgui\GUI_X -I..\Ucgui\GUI -I..\Ucgui\GUI\ConvertColor -I..\Ucgui\GUI\ConvertMono -I..\Ucgui\GUI\Core -I..\Ucgui\GUI\Core -I..\Ucgui\GUI\LCDDriver -I..\Ucgui\GUI\MultiLayer -I..\Ucgui\GUI\Widget -I..\Ucgui\GUI\WM -I..\ExternalDrive\Lcd -I..\ExternalDrive\Touch -I..\Panel -ID:\Keil\ARM\INC -ID:\Keil\ARM\INC\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=.\Obj\guicharm.crf ..\Ucgui\GUI\Core\GUICharM.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  GUIMONO_DispChar PROC
;;;38     */
;;;39     void GUIMONO_DispChar(U16P c) {
000000  e92d4ff0          PUSH     {r4-r11,lr}
000004  b08b              SUB      sp,sp,#0x2c
000006  4605              MOV      r5,r0
;;;40       int c0, c1;
;;;41       const unsigned char GUI_UNI_PTR * pd;
;;;42       int x = GUI_Context.DispPosX;
000008  4872              LDR      r0,|L1.468|
00000a  f9b00022          LDRSH    r0,[r0,#0x22]  ; GUI_Context
00000e  900a              STR      r0,[sp,#0x28]
;;;43       int y = GUI_Context.DispPosY;
000010  4870              LDR      r0,|L1.468|
000012  f9b0a024          LDRSH    r10,[r0,#0x24]  ; GUI_Context
;;;44       /* do some checking if drawing is actually necessary ... */
;;;45       const GUI_FONT_MONO GUI_UNI_PTR * pMono = GUI_Context.pAFont->p.pMono;
000016  6980              LDR      r0,[r0,#0x18]  ; GUI_Context
000018  6984              LDR      r4,[r0,#0x18]
;;;46       unsigned int FirstChar = pMono->FirstChar;
00001a  f8b4800c          LDRH     r8,[r4,#0xc]
;;;47       /* translate character into 2 characters to display : c0,c1 */
;;;48       /* Check if regular character first. */
;;;49       if ((c >= (U16P)FirstChar) &&(c <= (U16P)pMono->LastChar)) {
00001e  4545              CMP      r5,r8
000020  db09              BLT      |L1.54|
000022  89e0              LDRH     r0,[r4,#0xe]
000024  42a8              CMP      r0,r5
000026  db06              BLT      |L1.54|
;;;50         pd = pMono->pData;
000028  f8d49000          LDR      r9,[r4,#0]
;;;51         c0 = ((int)c) - FirstChar;
00002c  eba50608          SUB      r6,r5,r8
;;;52         c1 = -1;
000030  f04f37ff          MOV      r7,#0xffffffff
000034  e01d              B        |L1.114|
                  |L1.54|
;;;53       } else {
;;;54         /* Check if character is in translation table */
;;;55         GUI_FONT_TRANSINFO const GUI_UNI_PTR * pti = pMono->pTrans;
000036  68a0              LDR      r0,[r4,#8]
;;;56         pd = pMono->pTransData;
000038  f8d49004          LDR      r9,[r4,#4]
;;;57         if (pti) {
00003c  b1a8              CBZ      r0,|L1.106|
;;;58           FirstChar = pti->FirstChar;
00003e  f8b08000          LDRH     r8,[r0,#0]
;;;59           if ((c >= (U16P)FirstChar) && (c <= (U16P)pti->LastChar)) {
000042  4545              CMP      r5,r8
000044  db0d              BLT      |L1.98|
000046  8841              LDRH     r1,[r0,#2]
000048  42a9              CMP      r1,r5
00004a  db0a              BLT      |L1.98|
;;;60             GUI_FONT_TRANSLIST const GUI_UNI_PTR * ptl;
;;;61             c -= pti->FirstChar;
00004c  8802              LDRH     r2,[r0,#0]
00004e  1aaa              SUBS     r2,r5,r2
000050  b295              UXTH     r5,r2
;;;62             ptl = pti->pList;
000052  6841              LDR      r1,[r0,#4]
;;;63             ptl += c;
000054  eb010185          ADD      r1,r1,r5,LSL #2
;;;64             c0  = ptl->c0;
000058  f9b16000          LDRSH    r6,[r1,#0]
;;;65             c1  = ptl->c1;
00005c  f9b17002          LDRSH    r7,[r1,#2]
;;;66           } else {
000060  e006              B        |L1.112|
                  |L1.98|
;;;67             c0 = c1 = -1;
000062  f04f36ff          MOV      r6,#0xffffffff
000066  4637              MOV      r7,r6
000068  e002              B        |L1.112|
                  |L1.106|
;;;68           }
;;;69         } else {
;;;70           c0 = c1 = -1;
00006a  f04f36ff          MOV      r6,#0xffffffff
00006e  4637              MOV      r7,r6
                  |L1.112|
;;;71         }
;;;72       }
000070  bf00              NOP      
                  |L1.114|
;;;73       /* Draw first character if it is valid */
;;;74       if (c0!=-1) {
000072  1c70              ADDS     r0,r6,#1
000074  d077              BEQ      |L1.358|
;;;75         int BytesPerChar = GUI_Context.pAFont->YSize*pMono->BytesPerLine;
000076  4857              LDR      r0,|L1.468|
000078  6980              LDR      r0,[r0,#0x18]  ; GUI_Context
00007a  7d00              LDRB     r0,[r0,#0x14]
00007c  7ca1              LDRB     r1,[r4,#0x12]
00007e  4348              MULS     r0,r1,r0
000080  9009              STR      r0,[sp,#0x24]
;;;76         GUI_DRAWMODE DrawMode;
;;;77         int XSize = pMono->XSize;
000082  7c20              LDRB     r0,[r4,#0x10]
000084  9008              STR      r0,[sp,#0x20]
;;;78         int YSize = GUI_Context.pAFont->YSize;
000086  4853              LDR      r0,|L1.468|
000088  6980              LDR      r0,[r0,#0x18]  ; GUI_Context
00008a  7d00              LDRB     r0,[r0,#0x14]
00008c  9007              STR      r0,[sp,#0x1c]
;;;79         /* Select the right drawing mode */
;;;80         DrawMode = GUI_Context.TextMode;
00008e  4851              LDR      r0,|L1.468|
000090  f9b0b02a          LDRSH    r11,[r0,#0x2a]  ; GUI_Context
;;;81         /* call drawing routine */
;;;82         {
;;;83           U8 OldMode = LCD_SetDrawMode(DrawMode);
000094  4658              MOV      r0,r11
000096  f7fffffe          BL       LCD_SetDrawMode
00009a  b2c0              UXTB     r0,r0
00009c  9006              STR      r0,[sp,#0x18]
;;;84           LCD_DrawBitmap( x, y,
00009e  4b4d              LDR      r3,|L1.468|
0000a0  9809              LDR      r0,[sp,#0x24]
0000a2  fb069200          MLA      r2,r6,r0,r9
0000a6  7ca1              LDRB     r1,[r4,#0x12]
0000a8  2001              MOVS     r0,#1
0000aa  e9cd2304          STRD     r2,r3,[sp,#0x10]
0000ae  e9cd0102          STRD     r0,r1,[sp,#8]
0000b2  4618              MOV      r0,r3
0000b4  6980              LDR      r0,[r0,#0x18]  ; GUI_Context
0000b6  7dc3              LDRB     r3,[r0,#0x17]
0000b8  4846              LDR      r0,|L1.468|
0000ba  6980              LDR      r0,[r0,#0x18]  ; GUI_Context
0000bc  7d82              LDRB     r2,[r0,#0x16]
0000be  e9cd2300          STRD     r2,r3,[sp,#0]
0000c2  4651              MOV      r1,r10
0000c4  e9dd3207          LDRD     r3,r2,[sp,#0x1c]
0000c8  980a              LDR      r0,[sp,#0x28]
0000ca  f7fffffe          BL       LCD_DrawBitmap
;;;85                              XSize, YSize,
;;;86                              GUI_Context.pAFont->XMag,  GUI_Context.pAFont->YMag,
;;;87                              1,     /* Bits per Pixel */
;;;88                              pMono->BytesPerLine,
;;;89                              pd + c0* BytesPerChar,
;;;90                              &LCD_BKCOLORINDEX
;;;91                              );
;;;92           if (c1 != -1) {
0000ce  1c78              ADDS     r0,r7,#1
0000d0  d01b              BEQ      |L1.266|
;;;93             LCD_SetDrawMode(DrawMode | LCD_DRAWMODE_TRANS);
0000d2  f04b0002          ORR      r0,r11,#2
0000d6  f7fffffe          BL       LCD_SetDrawMode
;;;94             LCD_DrawBitmap( x, y,
0000da  4b3e              LDR      r3,|L1.468|
0000dc  9809              LDR      r0,[sp,#0x24]
0000de  fb079200          MLA      r2,r7,r0,r9
0000e2  7ca1              LDRB     r1,[r4,#0x12]
0000e4  2001              MOVS     r0,#1
0000e6  e9cd2304          STRD     r2,r3,[sp,#0x10]
0000ea  e9cd0102          STRD     r0,r1,[sp,#8]
0000ee  4618              MOV      r0,r3
0000f0  6980              LDR      r0,[r0,#0x18]  ; GUI_Context
0000f2  7dc3              LDRB     r3,[r0,#0x17]
0000f4  4837              LDR      r0,|L1.468|
0000f6  6980              LDR      r0,[r0,#0x18]  ; GUI_Context
0000f8  7d82              LDRB     r2,[r0,#0x16]
0000fa  e9cd2300          STRD     r2,r3,[sp,#0]
0000fe  4651              MOV      r1,r10
000100  e9dd3207          LDRD     r3,r2,[sp,#0x1c]
000104  980a              LDR      r0,[sp,#0x28]
000106  f7fffffe          BL       LCD_DrawBitmap
                  |L1.266|
;;;95                                XSize, YSize,
;;;96                                GUI_Context.pAFont->XMag,  GUI_Context.pAFont->YMag,
;;;97                                1,     /* Bits per Pixel */
;;;98                                pMono->BytesPerLine,
;;;99                                pd + c1* BytesPerChar,
;;;100                               &LCD_BKCOLORINDEX
;;;101                               );
;;;102          }
;;;103          /* Fill empty pixel lines */
;;;104          if (GUI_Context.pAFont->YDist > GUI_Context.pAFont->YSize) {
00010a  4832              LDR      r0,|L1.468|
00010c  6980              LDR      r0,[r0,#0x18]  ; GUI_Context
00010e  7d40              LDRB     r0,[r0,#0x15]
000110  4930              LDR      r1,|L1.468|
000112  6989              LDR      r1,[r1,#0x18]  ; GUI_Context
000114  7d09              LDRB     r1,[r1,#0x14]
000116  4288              CMP      r0,r1
000118  dd21              BLE      |L1.350|
;;;105            if (DrawMode != LCD_DRAWMODE_TRANS) {
00011a  f1bb0f02          CMP      r11,#2
00011e  d01e              BEQ      |L1.350|
;;;106              LCD_SetDrawMode(DrawMode ^ LCD_DRAWMODE_REV);  /* Reverse so we can fill with BkColor */
000120  f08b0004          EOR      r0,r11,#4
000124  f7fffffe          BL       LCD_SetDrawMode
;;;107              LCD_FillRect(x, 
000128  482a              LDR      r0,|L1.468|
00012a  6980              LDR      r0,[r0,#0x18]  ; GUI_Context
00012c  7d00              LDRB     r0,[r0,#0x14]
00012e  f8dfc0a4          LDR      r12,|L1.468|
000132  f8dcc018          LDR      r12,[r12,#0x18]  ; GUI_Context
000136  f89cc015          LDRB     r12,[r12,#0x15]
00013a  fb00a10c          MLA      r1,r0,r12,r10
00013e  4825              LDR      r0,|L1.468|
000140  6980              LDR      r0,[r0,#0x18]  ; GUI_Context
000142  7d40              LDRB     r0,[r0,#0x15]
000144  eb00030a          ADD      r3,r0,r10
000148  4822              LDR      r0,|L1.468|
00014a  6980              LDR      r0,[r0,#0x18]  ; GUI_Context
00014c  f890e016          LDRB     lr,[r0,#0x16]
000150  f8ddc020          LDR      r12,[sp,#0x20]
000154  980a              LDR      r0,[sp,#0x28]
000156  fb0c020e          MLA      r2,r12,lr,r0
00015a  f7fffffe          BL       LCD_FillRect
                  |L1.350|
;;;108                           y + GUI_Context.pAFont->YSize * GUI_Context.pAFont->YDist, 
;;;109                           x + XSize * GUI_Context.pAFont->XMag, 
;;;110                           y + GUI_Context.pAFont->YDist);
;;;111            }
;;;112          }
;;;113          LCD_SetDrawMode(OldMode);
00015e  9806              LDR      r0,[sp,#0x18]
000160  f7fffffe          BL       LCD_SetDrawMode
;;;114        } 
;;;115      }
000164  bf00              NOP      
                  |L1.358|
;;;116    //houhh 20061119...
;;;117    //  GUI_Context.DispPosX+=pMono->XDist;
;;;118      GUI_Context.DispPosX+=pMono->XDist * GUI_Context.pAFont->XMag;
000166  481b              LDR      r0,|L1.468|
000168  f9b00022          LDRSH    r0,[r0,#0x22]  ; GUI_Context
00016c  7c61              LDRB     r1,[r4,#0x11]
00016e  4a19              LDR      r2,|L1.468|
000170  6992              LDR      r2,[r2,#0x18]  ; GUI_Context
000172  7d92              LDRB     r2,[r2,#0x16]
000174  fb010002          MLA      r0,r1,r2,r0
000178  b200              SXTH     r0,r0
00017a  4916              LDR      r1,|L1.468|
00017c  8448              STRH     r0,[r1,#0x22]
;;;119    
;;;120    }
00017e  b00b              ADD      sp,sp,#0x2c
000180  e8bd8ff0          POP      {r4-r11,pc}
;;;121    
                          ENDP

                  GUIMONO_GetCharDistX PROC
;;;125    */
;;;126    int GUIMONO_GetCharDistX(U16P c) {
000184  4601              MOV      r1,r0
;;;127      const GUI_FONT_MONO GUI_UNI_PTR * pMono = GUI_Context.pAFont->p.pMono;
000186  4813              LDR      r0,|L1.468|
000188  6980              LDR      r0,[r0,#0x18]  ; GUI_Context
00018a  6982              LDR      r2,[r0,#0x18]
;;;128      GUI_USE_PARA(c);
00018c  bf00              NOP      
;;;129    //  return pMono->XDist;
;;;130    //houhh 20061119...
;;;131      return pMono->XDist*GUI_Context.pAFont->XMag;
00018e  7c50              LDRB     r0,[r2,#0x11]
000190  4b10              LDR      r3,|L1.468|
000192  699b              LDR      r3,[r3,#0x18]  ; GUI_Context
000194  7d9b              LDRB     r3,[r3,#0x16]
000196  4358              MULS     r0,r3,r0
;;;132    
;;;133    }
000198  4770              BX       lr
;;;134    
                          ENDP

                  GUIMONO_GetFontInfo PROC
;;;138    */
;;;139    void GUIMONO_GetFontInfo(const GUI_FONT GUI_UNI_PTR * pFont, GUI_FONTINFO* pfi) {
00019a  bf00              NOP      
;;;140      GUI_USE_PARA(pFont);
;;;141      pfi->Flags = GUI_FONTINFO_FLAG_MONO;
00019c  2202              MOVS     r2,#2
00019e  800a              STRH     r2,[r1,#0]
;;;142    }
0001a0  4770              BX       lr
;;;143    
                          ENDP

                  GUIMONO_IsInFont PROC
;;;147    */
;;;148    char GUIMONO_IsInFont(const GUI_FONT GUI_UNI_PTR * pFont, U16 c) {
0001a2  b530              PUSH     {r4,r5,lr}
0001a4  4604              MOV      r4,r0
;;;149      const GUI_FONT_MONO GUI_UNI_PTR * pMono = pFont->p.pMono;
0001a6  69a2              LDR      r2,[r4,#0x18]
;;;150      unsigned int FirstChar = pMono->FirstChar;
0001a8  8995              LDRH     r5,[r2,#0xc]
;;;151      /* Check if regular character first. */
;;;152      if ((c >= (U16P)FirstChar) &&(c <= (U16P)pMono->LastChar)) {
0001aa  42a9              CMP      r1,r5
0001ac  db04              BLT      |L1.440|
0001ae  89d0              LDRH     r0,[r2,#0xe]
0001b0  4288              CMP      r0,r1
0001b2  db01              BLT      |L1.440|
;;;153        return 1;  /* Yes, we have it ! */
0001b4  2001              MOVS     r0,#1
                  |L1.438|
;;;154      } else {
;;;155       /* Check if character is in translation table */
;;;156        GUI_FONT_TRANSINFO const GUI_UNI_PTR * pti;
;;;157        pti = pMono->pTrans;
;;;158        if (pti) {
;;;159          if ((c >= pti->FirstChar) && (c <= pti->LastChar)) {
;;;160            return 1;  /* Yes, we have it ! */
;;;161          }
;;;162        }
;;;163      }
;;;164      return 0;  /* No, we can not display this character */
;;;165    }
0001b6  bd30              POP      {r4,r5,pc}
                  |L1.440|
0001b8  6893              LDR      r3,[r2,#8]            ;157
0001ba  b13b              CBZ      r3,|L1.460|
0001bc  8818              LDRH     r0,[r3,#0]            ;159
0001be  4288              CMP      r0,r1                 ;159
0001c0  dc04              BGT      |L1.460|
0001c2  8858              LDRH     r0,[r3,#2]            ;159
0001c4  4288              CMP      r0,r1                 ;159
0001c6  db01              BLT      |L1.460|
0001c8  2001              MOVS     r0,#1                 ;160
0001ca  e7f4              B        |L1.438|
                  |L1.460|
0001cc  bf00              NOP                            ;163
0001ce  2000              MOVS     r0,#0                 ;164
0001d0  e7f1              B        |L1.438|
;;;166    
                          ENDP

0001d2  0000              DCW      0x0000
                  |L1.468|
                          DCD      GUI_Context
