; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [--debug -c --asm --interleave -o.\Obj\progbar.o --depend=.\Obj\progbar.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\Libraries\CMSIS\CM3\CoreSupport -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x\startup\arm -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\User -I..\BaseDrive -I..\Ucosii -I..\Ucosii\Port -I..\Ucosii\Src -I..\Ucosii\Include -I..\Ucgui -I..\Ucgui\Config -I..\Ucgui\GUI_X -I..\Ucgui\GUI -I..\Ucgui\GUI\ConvertColor -I..\Ucgui\GUI\ConvertMono -I..\Ucgui\GUI\Core -I..\Ucgui\GUI\Core -I..\Ucgui\GUI\LCDDriver -I..\Ucgui\GUI\MultiLayer -I..\Ucgui\GUI\Widget -I..\Ucgui\GUI\WM -I..\ExternalDrive\Lcd -I..\ExternalDrive\Touch -I..\Panel -ID:\Keil\ARM\INC -ID:\Keil\ARM\INC\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=.\Obj\progbar.crf ..\Ucgui\GUI\Widget\PROGBAR.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  _FreeText PROC
;;;122    */
;;;123    static void _FreeText(PROGBAR_Handle hObj) {
000000  b570              PUSH     {r4-r6,lr}
000002  4604              MOV      r4,r0
;;;124      PROGBAR_Obj* pObj = PROGBAR_H2P(hObj);
000004  4620              MOV      r0,r4
000006  f7fffffe          BL       GUI_ALLOC_h2p
00000a  4605              MOV      r5,r0
;;;125      GUI_ALLOC_FreePtr(&pObj->hpText);
00000c  f1050040          ADD      r0,r5,#0x40
000010  f7fffffe          BL       GUI_ALLOC_FreePtr
;;;126    }
000014  bd70              POP      {r4-r6,pc}
;;;127    
                          ENDP

                  _Value2X PROC
;;;131    */
;;;132    static int _Value2X(const PROGBAR_Obj* pObj, int v) {
000016  b5f0              PUSH     {r4-r7,lr}
000018  4602              MOV      r2,r0
;;;133      int EffectSize = pObj->Widget.pEffect->EffectSize;
00001a  6a10              LDR      r0,[r2,#0x20]
00001c  6945              LDR      r5,[r0,#0x14]
;;;134      int xSize = pObj->Widget.Win.Rect.x1 - pObj->Widget.Win.Rect.x0 + 1;
00001e  f9b20004          LDRSH    r0,[r2,#4]
000022  f9b27000          LDRSH    r7,[r2,#0]
000026  1bc0              SUBS     r0,r0,r7
000028  1c46              ADDS     r6,r0,#1
;;;135      int Min   = pObj->Min;
00002a  6c93              LDR      r3,[r2,#0x48]
;;;136      int Max   = pObj->Max;
00002c  6cd4              LDR      r4,[r2,#0x4c]
;;;137      if (v < Min) {
00002e  4299              CMP      r1,r3
000030  da00              BGE      |L1.52|
;;;138    	  v = Min;
000032  4619              MOV      r1,r3
                  |L1.52|
;;;139      }
;;;140      if (v > Max) {
000034  42a1              CMP      r1,r4
000036  dd00              BLE      |L1.58|
;;;141    	  v = Max;
000038  4621              MOV      r1,r4
                  |L1.58|
;;;142      }
;;;143      return EffectSize + ((xSize - 2 * EffectSize) * (I32)(v - Min)) / (Max - Min);
00003a  2002              MOVS     r0,#2
00003c  fb006015          MLS      r0,r0,r5,r6
000040  1acf              SUBS     r7,r1,r3
000042  4378              MULS     r0,r7,r0
000044  1ae7              SUBS     r7,r4,r3
000046  fb90f0f7          SDIV     r0,r0,r7
00004a  4428              ADD      r0,r0,r5
;;;144    }
00004c  bdf0              POP      {r4-r7,pc}
;;;145    
                          ENDP

                  _DrawPart PROC
;;;149    */
;;;150    static void _DrawPart(const PROGBAR_Obj* pObj, int Index,
00004e  e92d41f0          PUSH     {r4-r8,lr}
;;;151    										  int xText, int yText, const char* pText) {
000052  4604              MOV      r4,r0
000054  460d              MOV      r5,r1
000056  4616              MOV      r6,r2
000058  461f              MOV      r7,r3
00005a  f8dd8018          LDR      r8,[sp,#0x18]
;;;152      LCD_SetBkColor(pObj->BarColor[Index]);
00005e  f1040130          ADD      r1,r4,#0x30
000062  f8510025          LDR      r0,[r1,r5,LSL #2]
000066  f7fffffe          BL       LCD_SetBkColor
;;;153      LCD_SetColor(pObj->TextColor[Index]);
00006a  f1040138          ADD      r1,r4,#0x38
00006e  f8510025          LDR      r0,[r1,r5,LSL #2]
000072  f7fffffe          BL       LCD_SetColor
;;;154      GUI_Clear();
000076  f7fffffe          BL       GUI_Clear
;;;155      GUI_GotoXY(xText, yText);
00007a  4639              MOV      r1,r7
00007c  4630              MOV      r0,r6
00007e  f7fffffe          BL       GUI_GotoXY
;;;156      GUI_DispString(pText);
000082  4640              MOV      r0,r8
000084  f7fffffe          BL       GUI_DispString
;;;157    }
000088  e8bd81f0          POP      {r4-r8,pc}
;;;158    
                          ENDP

                  _GetText PROC
;;;162    */
;;;163    static const char* _GetText(const PROGBAR_Obj* pObj, char* pBuffer) {
00008c  b573              PUSH     {r0,r1,r4-r6,lr}
00008e  4604              MOV      r4,r0
;;;164      char* pText;
;;;165      if (pObj->hpText) {
000090  f8b40040          LDRH     r0,[r4,#0x40]
000094  b128              CBZ      r0,|L1.162|
;;;166        pText = (char*) GUI_ALLOC_h2p(pObj->hpText);
000096  f9b40040          LDRSH    r0,[r4,#0x40]
00009a  f7fffffe          BL       GUI_ALLOC_h2p
00009e  4605              MOV      r5,r0
0000a0  e017              B        |L1.210|
                  |L1.162|
;;;167      } else {
;;;168        pText = pBuffer;
0000a2  9d01              LDR      r5,[sp,#4]
;;;169        GUI_AddDecMin((100 * (I32)(pObj->v - pObj->Min)) / (pObj->Max - pObj->Min), &pBuffer);
0000a4  6ca1              LDR      r1,[r4,#0x48]
0000a6  6aa0              LDR      r0,[r4,#0x28]
0000a8  1a40              SUBS     r0,r0,r1
0000aa  2164              MOVS     r1,#0x64
0000ac  4348              MULS     r0,r1,r0
0000ae  e9d42112          LDRD     r2,r1,[r4,#0x48]
0000b2  1a89              SUBS     r1,r1,r2
0000b4  fb90f6f1          SDIV     r6,r0,r1
0000b8  a901              ADD      r1,sp,#4
0000ba  4630              MOV      r0,r6
0000bc  f7fffffe          BL       GUI_AddDecMin
;;;170        *pBuffer++ = '%';
0000c0  2025              MOVS     r0,#0x25
0000c2  9901              LDR      r1,[sp,#4]
0000c4  7008              STRB     r0,[r1,#0]
0000c6  9801              LDR      r0,[sp,#4]
0000c8  1c40              ADDS     r0,r0,#1
0000ca  9001              STR      r0,[sp,#4]
;;;171    		*pBuffer   = 0;
0000cc  2000              MOVS     r0,#0
0000ce  9901              LDR      r1,[sp,#4]
0000d0  7008              STRB     r0,[r1,#0]
                  |L1.210|
;;;172    	}
;;;173      return (const char*)pText;
0000d2  4628              MOV      r0,r5
;;;174    }
0000d4  bd7c              POP      {r2-r6,pc}
;;;175    
                          ENDP

                  _GetTextRect PROC
;;;179    */
;;;180    static void _GetTextRect(const PROGBAR_Obj* pObj, GUI_RECT* pRect, const char* pText) {
0000d6  e92d5ff0          PUSH     {r4-r12,lr}
0000da  4605              MOV      r5,r0
0000dc  460c              MOV      r4,r1
0000de  4617              MOV      r7,r2
;;;181      int xSize      = pObj->Widget.Win.Rect.x1 - pObj->Widget.Win.Rect.x0 + 1;
0000e0  f9b50004          LDRSH    r0,[r5,#4]
0000e4  f9b51000          LDRSH    r1,[r5,#0]
0000e8  1a40              SUBS     r0,r0,r1
0000ea  f1000801          ADD      r8,r0,#1
;;;182      int ySize      = pObj->Widget.Win.Rect.y1 - pObj->Widget.Win.Rect.y0 + 1;
0000ee  f9b50006          LDRSH    r0,[r5,#6]
0000f2  f9b51002          LDRSH    r1,[r5,#2]
0000f6  1a40              SUBS     r0,r0,r1
0000f8  f1000b01          ADD      r11,r0,#1
;;;183      int TextWidth  = GUI_GetStringDistX(pText);
0000fc  4638              MOV      r0,r7
0000fe  f7fffffe          BL       GUI_GetStringDistX
000102  4606              MOV      r6,r0
;;;184      int TextHeight = GUI_GetFontSizeY();
000104  f7fffffe          BL       GUI_GetFontSizeY
000108  4681              MOV      r9,r0
;;;185      int EffectSize = pObj->Widget.pEffect->EffectSize;
00010a  6a28              LDR      r0,[r5,#0x20]
00010c  f8d0a014          LDR      r10,[r0,#0x14]
;;;186      switch (pObj->TextAlign & GUI_TA_HORIZONTAL) {
000110  f8b50046          LDRH     r0,[r5,#0x46]
000114  f0000003          AND      r0,r0,#3
000118  2801              CMP      r0,#1
00011a  d009              BEQ      |L1.304|
00011c  2802              CMP      r0,#2
00011e  d10f              BNE      |L1.320|
;;;187      case GUI_TA_CENTER:
;;;188        pRect->x0 = (xSize - TextWidth) / 2;
000120  eba80006          SUB      r0,r8,r6
000124  eb0071d0          ADD      r1,r0,r0,LSR #31
000128  1049              ASRS     r1,r1,#1
00012a  b209              SXTH     r1,r1
00012c  8021              STRH     r1,[r4,#0]
;;;189    		break;
00012e  e00b              B        |L1.328|
                  |L1.304|
;;;190      case GUI_TA_RIGHT:
;;;191        pRect->x0 = xSize - TextWidth - 1 - EffectSize;
000130  eba80006          SUB      r0,r8,r6
000134  1e40              SUBS     r0,r0,#1
000136  eba0000a          SUB      r0,r0,r10
00013a  b200              SXTH     r0,r0
00013c  8020              STRH     r0,[r4,#0]
;;;192    		break;
00013e  e003              B        |L1.328|
                  |L1.320|
;;;193      default:
;;;194        pRect->x0 = EffectSize;
000140  fa0ff08a          SXTH     r0,r10
000144  8020              STRH     r0,[r4,#0]
000146  bf00              NOP                            ;186
                  |L1.328|
000148  bf00              NOP                            ;189
;;;195    	}
;;;196      pRect->y0  = (ySize - TextHeight) / 2;
00014a  ebab0009          SUB      r0,r11,r9
00014e  eb0071d0          ADD      r1,r0,r0,LSR #31
000152  1049              ASRS     r1,r1,#1
000154  b209              SXTH     r1,r1
000156  8061              STRH     r1,[r4,#2]
;;;197      pRect->x0 += pObj->XOff;
000158  8820              LDRH     r0,[r4,#0]
00015a  f8b51042          LDRH     r1,[r5,#0x42]
00015e  4408              ADD      r0,r0,r1
000160  b200              SXTH     r0,r0
000162  8020              STRH     r0,[r4,#0]
;;;198      pRect->y0 += pObj->YOff;
000164  8860              LDRH     r0,[r4,#2]
000166  f8b51044          LDRH     r1,[r5,#0x44]
00016a  4408              ADD      r0,r0,r1
00016c  b200              SXTH     r0,r0
00016e  8060              STRH     r0,[r4,#2]
;;;199      pRect->x1  = pRect->x0 + TextWidth  - 1;
000170  8820              LDRH     r0,[r4,#0]
000172  4430              ADD      r0,r0,r6
000174  1e40              SUBS     r0,r0,#1
000176  b200              SXTH     r0,r0
000178  80a0              STRH     r0,[r4,#4]
;;;200      pRect->y1  = pRect->y0 + TextHeight - 1;
00017a  8860              LDRH     r0,[r4,#2]
00017c  4448              ADD      r0,r0,r9
00017e  1e40              SUBS     r0,r0,#1
000180  b200              SXTH     r0,r0
000182  80e0              STRH     r0,[r4,#6]
;;;201    }
000184  e8bd9ff0          POP      {r4-r12,pc}
;;;202    
                          ENDP

                  _Paint PROC
;;;206    */
;;;207    static void _Paint(PROGBAR_Handle hObj) {
000188  e92d41f0          PUSH     {r4-r8,lr}
00018c  b08c              SUB      sp,sp,#0x30
00018e  4606              MOV      r6,r0
;;;208      PROGBAR_Obj* pObj;
;;;209      GUI_RECT r, rInside, rClient, rText;
;;;210      const char* pText;
;;;211      char ac[5];
;;;212      int tm, xPos;
;;;213      pObj = PROGBAR_H2P(hObj);
000190  4630              MOV      r0,r6
000192  f7fffffe          BL       GUI_ALLOC_h2p
000196  4604              MOV      r4,r0
;;;214      WM_GetClientRect(&rClient);
000198  a806              ADD      r0,sp,#0x18
00019a  f7fffffe          BL       WM_GetClientRect
;;;215      GUI__ReduceRect(&rInside, &rClient, pObj->Widget.pEffect->EffectSize);
00019e  6a20              LDR      r0,[r4,#0x20]
0001a0  a906              ADD      r1,sp,#0x18
0001a2  6942              LDR      r2,[r0,#0x14]
0001a4  a808              ADD      r0,sp,#0x20
0001a6  f7fffffe          BL       GUI__ReduceRect
;;;216      xPos  = _Value2X(pObj, pObj->v);
0001aa  4620              MOV      r0,r4
0001ac  6aa1              LDR      r1,[r4,#0x28]
0001ae  f7fffffe          BL       _Value2X
0001b2  4605              MOV      r5,r0
;;;217      pText = _GetText(pObj, ac);
0001b4  a902              ADD      r1,sp,#8
0001b6  4620              MOV      r0,r4
0001b8  f7fffffe          BL       _GetText
0001bc  4607              MOV      r7,r0
;;;218      GUI_SetFont(pObj->pFont);
0001be  6ae0              LDR      r0,[r4,#0x2c]
0001c0  f7fffffe          BL       GUI_SetFont
;;;219      _GetTextRect(pObj, &rText, pText);
0001c4  463a              MOV      r2,r7
0001c6  a904              ADD      r1,sp,#0x10
0001c8  4620              MOV      r0,r4
0001ca  f7fffffe          BL       _GetTextRect
;;;220      tm = GUI_SetTextMode(GUI_TM_TRANS);
0001ce  2002              MOVS     r0,#2
0001d0  f7fffffe          BL       GUI_SetTextMode
0001d4  4680              MOV      r8,r0
;;;221      /* Draw left bar */
;;;222      r    = rInside;
0001d6  e9dd0108          LDRD     r0,r1,[sp,#0x20]
0001da  e9cd010a          STRD     r0,r1,[sp,#0x28]
;;;223      r.x1 = xPos - 1;
0001de  1e68              SUBS     r0,r5,#1
0001e0  b200              SXTH     r0,r0
0001e2  f8ad002c          STRH     r0,[sp,#0x2c]
;;;224      WM_SetUserClipArea(&r);
0001e6  a80a              ADD      r0,sp,#0x28
0001e8  f7fffffe          BL       WM_SetUserClipRect
;;;225      _DrawPart(pObj, 0, rText.x0, rText.y0, pText);
0001ec  9700              STR      r7,[sp,#0]
0001ee  f9bd3012          LDRSH    r3,[sp,#0x12]
0001f2  f9bd2010          LDRSH    r2,[sp,#0x10]
0001f6  2100              MOVS     r1,#0
0001f8  4620              MOV      r0,r4
0001fa  f7fffffe          BL       _DrawPart
;;;226      /* Draw right bar */
;;;227      r    = rInside;
0001fe  e9dd0108          LDRD     r0,r1,[sp,#0x20]
000202  e9cd010a          STRD     r0,r1,[sp,#0x28]
;;;228      r.x0 = xPos;
000206  b228              SXTH     r0,r5
000208  f8ad0028          STRH     r0,[sp,#0x28]
;;;229      WM_SetUserClipArea(&r);
00020c  a80a              ADD      r0,sp,#0x28
00020e  f7fffffe          BL       WM_SetUserClipRect
;;;230      _DrawPart(pObj, 1, rText.x0, rText.y0, pText);
000212  9700              STR      r7,[sp,#0]
000214  f9bd3012          LDRSH    r3,[sp,#0x12]
000218  f9bd2010          LDRSH    r2,[sp,#0x10]
00021c  2101              MOVS     r1,#1
00021e  4620              MOV      r0,r4
000220  f7fffffe          BL       _DrawPart
;;;231      WM_SetUserClipArea(NULL);
000224  2000              MOVS     r0,#0
000226  f7fffffe          BL       WM_SetUserClipRect
;;;232      GUI_SetTextMode(tm);
00022a  4640              MOV      r0,r8
00022c  f7fffffe          BL       GUI_SetTextMode
;;;233      WIDGET__EFFECT_DrawDownRect(&pObj->Widget, &rClient);
000230  a906              ADD      r1,sp,#0x18
000232  4620              MOV      r0,r4
000234  f7fffffe          BL       WIDGET__EFFECT_DrawDownRect
;;;234    }
000238  b00c              ADD      sp,sp,#0x30
00023a  e8bd81f0          POP      {r4-r8,pc}
;;;235    
                          ENDP

                  _Delete PROC
;;;239    */
;;;240    static void _Delete(PROGBAR_Handle hObj) {
00023e  b510              PUSH     {r4,lr}
000240  4604              MOV      r4,r0
;;;241      _FreeText(hObj);
000242  4620              MOV      r0,r4
000244  f7fffffe          BL       _FreeText
;;;242      DEINIT_ID(PROGBAR_H2P(hObj));
;;;243    }
000248  bd10              POP      {r4,pc}
;;;244    
                          ENDP

                  _PROGBAR_Callback PROC
;;;248    */
;;;249    static void _PROGBAR_Callback(WM_MESSAGE*pMsg) {
00024a  b570              PUSH     {r4-r6,lr}
00024c  4604              MOV      r4,r0
;;;250      PROGBAR_Handle hObj = (PROGBAR_Handle)pMsg->hWin;
00024e  f9b45004          LDRSH    r5,[r4,#4]
;;;251      /* Let widget handle the standard messages */
;;;252      if (WIDGET_HandleActive(hObj, pMsg) == 0) {
000252  4621              MOV      r1,r4
000254  4628              MOV      r0,r5
000256  f7fffffe          BL       WIDGET_HandleActive
00025a  b900              CBNZ     r0,|L1.606|
                  |L1.604|
;;;253        return;
;;;254      }
;;;255      switch (pMsg->MsgId) {
;;;256      case WM_PAINT:
;;;257        _Paint(hObj);
;;;258        return;
;;;259      case WM_DELETE:
;;;260        _Delete(hObj);
;;;261        break;
;;;262      }
;;;263      WM_DefaultProc(pMsg);
;;;264    }
00025c  bd70              POP      {r4-r6,pc}
                  |L1.606|
00025e  6820              LDR      r0,[r4,#0]            ;255
000260  280b              CMP      r0,#0xb               ;255
000262  d005              BEQ      |L1.624|
000264  280f              CMP      r0,#0xf               ;255
000266  d107              BNE      |L1.632|
000268  4628              MOV      r0,r5                 ;257
00026a  f7fffffe          BL       _Paint
00026e  e7f5              B        |L1.604|
                  |L1.624|
000270  4628              MOV      r0,r5                 ;260
000272  f7fffffe          BL       _Delete
000276  bf00              NOP                            ;261
                  |L1.632|
000278  bf00              NOP                            ;261
00027a  4620              MOV      r0,r4                 ;263
00027c  f7fffffe          BL       WM_DefaultProc
000280  bf00              NOP      
000282  e7eb              B        |L1.604|
;;;265    
                          ENDP

                  PROGBAR_CreateEx PROC
;;;275    */
;;;276    PROGBAR_Handle PROGBAR_CreateEx(int x0, int y0, int xsize, int ysize, WM_HWIN hParent,
000284  e92d4fff          PUSH     {r0-r11,lr}
;;;277                                    int WinFlags, int ExFlags, int Id)
;;;278    {
000288  b085              SUB      sp,sp,#0x14
00028a  4606              MOV      r6,r0
00028c  460f              MOV      r7,r1
00028e  4690              MOV      r8,r2
000290  4699              MOV      r9,r3
000292  e9ddab13          LDRD     r10,r11,[sp,#0x4c]
;;;279      PROGBAR_Handle hObj;
;;;280      GUI_USE_PARA(ExFlags);
000296  bf00              NOP      
;;;281      hObj = WM_CreateWindowAsChild(x0, y0, xsize, ysize, hParent, WinFlags, _PROGBAR_Callback,
000298  2330              MOVS     r3,#0x30
00029a  4aba              LDR      r2,|L1.1412|
00029c  fa1ff18a          UXTH     r1,r10
0002a0  9812              LDR      r0,[sp,#0x48]
0002a2  e88d000f          STM      sp,{r0-r3}
0002a6  464b              MOV      r3,r9
0002a8  4642              MOV      r2,r8
0002aa  4639              MOV      r1,r7
0002ac  4630              MOV      r0,r6
0002ae  f7fffffe          BL       WM_CreateWindowAsChild
0002b2  4605              MOV      r5,r0
;;;282                                    sizeof(PROGBAR_Obj) - sizeof(WM_Obj));
;;;283      if (hObj) {
0002b4  b31d              CBZ      r5,|L1.766|
;;;284        PROGBAR_Obj* pObj;
;;;285        WM_LOCK();
0002b6  f7fffffe          BL       GUI_Lock
;;;286        pObj = (PROGBAR_Obj*) GUI_ALLOC_h2p(hObj);
0002ba  4628              MOV      r0,r5
0002bc  f7fffffe          BL       GUI_ALLOC_h2p
0002c0  4604              MOV      r4,r0
;;;287        /* init widget specific variables */
;;;288        WIDGET__Init(&pObj->Widget, Id, 0);
0002c2  2200              MOVS     r2,#0
0002c4  4620              MOV      r0,r4
0002c6  9915              LDR      r1,[sp,#0x54]
0002c8  f7fffffe          BL       WIDGET__Init
;;;289        WIDGET_SetEffect(hObj, &WIDGET_Effect_None); /* Standard effect for progbar: None */
0002cc  49ae              LDR      r1,|L1.1416|
0002ce  4628              MOV      r0,r5
0002d0  f7fffffe          BL       WIDGET_SetEffect
;;;290        INIT_ID(pObj);
;;;291        /* init member variables */
;;;292        pObj->pFont        = GUI_DEFAULT_FONT;
0002d4  48ad              LDR      r0,|L1.1420|
0002d6  62e0              STR      r0,[r4,#0x2c]
;;;293        pObj->BarColor[0]  = PROGBAR_DEFAULT_BARCOLOR0;
0002d8  48ad              LDR      r0,|L1.1424|
0002da  6320              STR      r0,[r4,#0x30]
;;;294        pObj->BarColor[1]  = PROGBAR_DEFAULT_BARCOLOR1;
0002dc  0041              LSLS     r1,r0,#1
0002de  6361              STR      r1,[r4,#0x34]
;;;295        pObj->TextColor[0] = PROGBAR_DEFAULT_TEXTCOLOR0;
0002e0  f06f407f          MVN      r0,#0xff000000
0002e4  63a0              STR      r0,[r4,#0x38]
;;;296        pObj->TextColor[1] = PROGBAR_DEFAULT_TEXTCOLOR1;
0002e6  2100              MOVS     r1,#0
0002e8  63e1              STR      r1,[r4,#0x3c]
;;;297        pObj->TextAlign    = GUI_TA_CENTER;
0002ea  2002              MOVS     r0,#2
0002ec  f8a40046          STRH     r0,[r4,#0x46]
;;;298        pObj->Max          = 100;
0002f0  2064              MOVS     r0,#0x64
0002f2  64e0              STR      r0,[r4,#0x4c]
;;;299        pObj->Min          = 0;
0002f4  2000              MOVS     r0,#0
0002f6  64a0              STR      r0,[r4,#0x48]
;;;300        WM_UNLOCK();
0002f8  f7fffffe          BL       GUI_Unlock
;;;301      }
0002fc  bf00              NOP      
                  |L1.766|
;;;302      return hObj;
0002fe  4628              MOV      r0,r5
;;;303    }
000300  b009              ADD      sp,sp,#0x24
000302  e8bd8ff0          POP      {r4-r11,pc}
;;;304    
                          ENDP

                  PROGBAR_SetValue PROC
;;;314    */
;;;315    void PROGBAR_SetValue(PROGBAR_Handle hObj, int v) {
000306  e92d41f0          PUSH     {r4-r8,lr}
00030a  b086              SUB      sp,sp,#0x18
00030c  4606              MOV      r6,r0
00030e  460d              MOV      r5,r1
;;;316      if (hObj) {
000310  b3f6              CBZ      r6,|L1.912|
;;;317        PROGBAR_Obj* pObj;
;;;318        WM_LOCK();
000312  f7fffffe          BL       GUI_Lock
;;;319        pObj= PROGBAR_H2P(hObj);
000316  4630              MOV      r0,r6
000318  f7fffffe          BL       GUI_ALLOC_h2p
00031c  4604              MOV      r4,r0
;;;320        /* Put v into legal range */
;;;321        if (v < pObj->Min) {
00031e  6ca0              LDR      r0,[r4,#0x48]
000320  42a8              CMP      r0,r5
000322  dd00              BLE      |L1.806|
;;;322    	    v = pObj->Min;
000324  6ca5              LDR      r5,[r4,#0x48]
                  |L1.806|
;;;323        }
;;;324        if (v > pObj->Max) {
000326  6ce0              LDR      r0,[r4,#0x4c]
000328  42a8              CMP      r0,r5
00032a  da00              BGE      |L1.814|
;;;325    	    v = pObj->Max;
00032c  6ce5              LDR      r5,[r4,#0x4c]
                  |L1.814|
;;;326        }
;;;327        if (pObj->v != v) {
00032e  6aa0              LDR      r0,[r4,#0x28]
000330  42a8              CMP      r0,r5
000332  d058              BEQ      |L1.998|
;;;328          GUI_RECT r;
;;;329          /* Get x values */
;;;330          if (v < pObj->v) {
000334  6aa0              LDR      r0,[r4,#0x28]
000336  42a8              CMP      r0,r5
000338  dd0e              BLE      |L1.856|
;;;331            r.x0 = _Value2X(pObj, v);
00033a  4629              MOV      r1,r5
00033c  4620              MOV      r0,r4
00033e  f7fffffe          BL       _Value2X
000342  b200              SXTH     r0,r0
000344  f8ad0010          STRH     r0,[sp,#0x10]
;;;332            r.x1 = _Value2X(pObj, pObj->v);
000348  4620              MOV      r0,r4
00034a  6aa1              LDR      r1,[r4,#0x28]
00034c  f7fffffe          BL       _Value2X
000350  b200              SXTH     r0,r0
000352  f8ad0014          STRH     r0,[sp,#0x14]
000356  e00d              B        |L1.884|
                  |L1.856|
;;;333          } else {
;;;334            r.x0 = _Value2X(pObj, pObj->v);
000358  4620              MOV      r0,r4
00035a  6aa1              LDR      r1,[r4,#0x28]
00035c  f7fffffe          BL       _Value2X
000360  b200              SXTH     r0,r0
000362  f8ad0010          STRH     r0,[sp,#0x10]
;;;335            r.x1 = _Value2X(pObj, v);
000366  4629              MOV      r1,r5
000368  4620              MOV      r0,r4
00036a  f7fffffe          BL       _Value2X
00036e  b200              SXTH     r0,r0
000370  f8ad0014          STRH     r0,[sp,#0x14]
                  |L1.884|
;;;336          }
;;;337    		  r.y0    = 0;
000374  2000              MOVS     r0,#0
000376  f8ad0012          STRH     r0,[sp,#0x12]
;;;338    		  r.y1    = 4095;
00037a  f64070ff          MOV      r0,#0xfff
00037e  f8ad0016          STRH     r0,[sp,#0x16]
;;;339          if (pObj->hpText == 0) {
000382  f8b40040          LDRH     r0,[r4,#0x40]
000386  bb40              CBNZ     r0,|L1.986|
;;;340            const GUI_FONT GUI_UNI_PTR * pOldFont;
;;;341            char acBuffer[5];
;;;342            GUI_RECT rText;
;;;343            pOldFont = GUI_SetFont(pObj->pFont);
000388  6ae0              LDR      r0,[r4,#0x2c]
00038a  f7fffffe          BL       GUI_SetFont
00038e  e000              B        |L1.914|
                  |L1.912|
000390  e02c              B        |L1.1004|
                  |L1.914|
000392  4607              MOV      r7,r0
;;;344            _GetTextRect(pObj, &rText, _GetText(pObj, acBuffer));
000394  a902              ADD      r1,sp,#8
000396  4620              MOV      r0,r4
000398  f7fffffe          BL       _GetText
00039c  4680              MOV      r8,r0
00039e  4602              MOV      r2,r0
0003a0  4669              MOV      r1,sp
0003a2  4620              MOV      r0,r4
0003a4  f7fffffe          BL       _GetTextRect
;;;345            GUI_MergeRect(&r, &r, &rText);
0003a8  466a              MOV      r2,sp
0003aa  a904              ADD      r1,sp,#0x10
0003ac  a804              ADD      r0,sp,#0x10
0003ae  f7fffffe          BL       GUI_MergeRect
;;;346            pObj->v = v;
0003b2  62a5              STR      r5,[r4,#0x28]
;;;347            _GetTextRect(pObj, &rText, _GetText(pObj, acBuffer));
0003b4  a902              ADD      r1,sp,#8
0003b6  4620              MOV      r0,r4
0003b8  f7fffffe          BL       _GetText
0003bc  4680              MOV      r8,r0
0003be  4602              MOV      r2,r0
0003c0  4669              MOV      r1,sp
0003c2  4620              MOV      r0,r4
0003c4  f7fffffe          BL       _GetTextRect
;;;348            GUI_MergeRect(&r, &r, &rText);
0003c8  466a              MOV      r2,sp
0003ca  a904              ADD      r1,sp,#0x10
0003cc  a804              ADD      r0,sp,#0x10
0003ce  f7fffffe          BL       GUI_MergeRect
;;;349            GUI_SetFont(pOldFont);
0003d2  4638              MOV      r0,r7
0003d4  f7fffffe          BL       GUI_SetFont
;;;350          } else {
0003d8  e000              B        |L1.988|
                  |L1.986|
;;;351            pObj->v = v;
0003da  62a5              STR      r5,[r4,#0x28]
                  |L1.988|
;;;352          }
;;;353          WM_InvalidateRect(hObj, &r);
0003dc  a904              ADD      r1,sp,#0x10
0003de  4630              MOV      r0,r6
0003e0  f7fffffe          BL       WM_InvalidateRect
;;;354        }
0003e4  bf00              NOP      
                  |L1.998|
;;;355        WM_UNLOCK();
0003e6  f7fffffe          BL       GUI_Unlock
;;;356      }
0003ea  bf00              NOP      
                  |L1.1004|
;;;357    }
0003ec  b006              ADD      sp,sp,#0x18
0003ee  e8bd81f0          POP      {r4-r8,pc}
;;;358    
                          ENDP

                  PROGBAR_SetFont PROC
;;;362    */
;;;363    void PROGBAR_SetFont(PROGBAR_Handle hObj, const GUI_FONT GUI_UNI_PTR * pfont) {
0003f2  b570              PUSH     {r4-r6,lr}
0003f4  4604              MOV      r4,r0
0003f6  460d              MOV      r5,r1
;;;364      PROGBAR_Obj* pObj;
;;;365      if (hObj) {
0003f8  b15c              CBZ      r4,|L1.1042|
;;;366        WM_LOCK();
0003fa  f7fffffe          BL       GUI_Lock
;;;367        pObj = PROGBAR_H2P(hObj);
0003fe  4620              MOV      r0,r4
000400  f7fffffe          BL       GUI_ALLOC_h2p
000404  4606              MOV      r6,r0
;;;368        pObj->pFont = pfont;
000406  62f5              STR      r5,[r6,#0x2c]
;;;369        WM_InvalidateWindow(hObj);
000408  4620              MOV      r0,r4
00040a  f7fffffe          BL       WM_InvalidateWindow
;;;370        WM_UNLOCK();
00040e  f7fffffe          BL       GUI_Unlock
                  |L1.1042|
;;;371      }
;;;372    }
000412  bd70              POP      {r4-r6,pc}
;;;373    
                          ENDP

                  PROGBAR_SetBarColor PROC
;;;377    */
;;;378    void PROGBAR_SetBarColor(PROGBAR_Handle hObj, unsigned int Index, GUI_COLOR color) {
000414  e92d41f0          PUSH     {r4-r8,lr}
000418  4606              MOV      r6,r0
00041a  460c              MOV      r4,r1
00041c  4617              MOV      r7,r2
;;;379      PROGBAR_Obj* pObj;
;;;380      if (hObj) {
00041e  b186              CBZ      r6,|L1.1090|
;;;381        WM_LOCK();
000420  f7fffffe          BL       GUI_Lock
;;;382        pObj = PROGBAR_H2P(hObj);
000424  4630              MOV      r0,r6
000426  f7fffffe          BL       GUI_ALLOC_h2p
00042a  4605              MOV      r5,r0
;;;383        if (Index < GUI_COUNTOF(pObj->BarColor)) {
00042c  2c02              CMP      r4,#2
00042e  d206              BCS      |L1.1086|
;;;384          pObj->BarColor[Index] = color;
000430  f1050030          ADD      r0,r5,#0x30
000434  f8407024          STR      r7,[r0,r4,LSL #2]
;;;385          WM_InvalidateWindow(hObj);
000438  4630              MOV      r0,r6
00043a  f7fffffe          BL       WM_InvalidateWindow
                  |L1.1086|
;;;386        }
;;;387        WM_UNLOCK();
00043e  f7fffffe          BL       GUI_Unlock
                  |L1.1090|
;;;388      }
;;;389    }
000442  e8bd81f0          POP      {r4-r8,pc}
;;;390    
                          ENDP

                  PROGBAR_SetTextColor PROC
;;;394    */
;;;395    void PROGBAR_SetTextColor(PROGBAR_Handle hObj, unsigned int Index, GUI_COLOR color) {
000446  e92d41f0          PUSH     {r4-r8,lr}
00044a  4606              MOV      r6,r0
00044c  460c              MOV      r4,r1
00044e  4617              MOV      r7,r2
;;;396      PROGBAR_Obj* pObj;
;;;397      if (hObj) {
000450  b186              CBZ      r6,|L1.1140|
;;;398        WM_LOCK();
000452  f7fffffe          BL       GUI_Lock
;;;399        pObj = PROGBAR_H2P(hObj);
000456  4630              MOV      r0,r6
000458  f7fffffe          BL       GUI_ALLOC_h2p
00045c  4605              MOV      r5,r0
;;;400        if (Index < GUI_COUNTOF(pObj->TextColor)) {
00045e  2c02              CMP      r4,#2
000460  d206              BCS      |L1.1136|
;;;401          pObj->TextColor[Index] = color;
000462  f1050038          ADD      r0,r5,#0x38
000466  f8407024          STR      r7,[r0,r4,LSL #2]
;;;402          WM_InvalidateWindow(hObj);
00046a  4630              MOV      r0,r6
00046c  f7fffffe          BL       WM_InvalidateWindow
                  |L1.1136|
;;;403        }
;;;404        WM_UNLOCK();
000470  f7fffffe          BL       GUI_Unlock
                  |L1.1140|
;;;405      }
;;;406    }
000474  e8bd81f0          POP      {r4-r8,pc}
;;;407    
                          ENDP

                  PROGBAR_SetText PROC
;;;411    */
;;;412    void PROGBAR_SetText(PROGBAR_Handle hObj, const char* s) {
000478  e92d41f0          PUSH     {r4-r8,lr}
00047c  b086              SUB      sp,sp,#0x18
00047e  4605              MOV      r5,r0
000480  460e              MOV      r6,r1
;;;413      if (hObj) {
000482  b39d              CBZ      r5,|L1.1260|
;;;414        PROGBAR_Obj* pObj;
;;;415        const GUI_FONT GUI_UNI_PTR * pOldFont;
;;;416        GUI_RECT r1;
;;;417        char acBuffer[5];
;;;418        WM_LOCK();
000484  f7fffffe          BL       GUI_Lock
;;;419        pObj = PROGBAR_H2P(hObj);
000488  4628              MOV      r0,r5
00048a  f7fffffe          BL       GUI_ALLOC_h2p
00048e  4604              MOV      r4,r0
;;;420        pOldFont = GUI_SetFont(pObj->pFont);
000490  6ae0              LDR      r0,[r4,#0x2c]
000492  f7fffffe          BL       GUI_SetFont
000496  4607              MOV      r7,r0
;;;421        _GetTextRect(pObj, &r1, _GetText(pObj, acBuffer));
000498  a902              ADD      r1,sp,#8
00049a  4620              MOV      r0,r4
00049c  f7fffffe          BL       _GetText
0004a0  4680              MOV      r8,r0
0004a2  4602              MOV      r2,r0
0004a4  a904              ADD      r1,sp,#0x10
0004a6  4620              MOV      r0,r4
0004a8  f7fffffe          BL       _GetTextRect
;;;422        if (GUI__SetText(&pObj->hpText, s)) {
0004ac  4631              MOV      r1,r6
0004ae  f1040040          ADD      r0,r4,#0x40
0004b2  f7fffffe          BL       GUI__SetText
0004b6  b198              CBZ      r0,|L1.1248|
;;;423          GUI_RECT r2;
;;;424          _GetTextRect(pObj, &r2, _GetText(pObj, acBuffer));
0004b8  a902              ADD      r1,sp,#8
0004ba  4620              MOV      r0,r4
0004bc  f7fffffe          BL       _GetText
0004c0  4680              MOV      r8,r0
0004c2  4602              MOV      r2,r0
0004c4  4669              MOV      r1,sp
0004c6  4620              MOV      r0,r4
0004c8  f7fffffe          BL       _GetTextRect
;;;425          GUI_MergeRect(&r1, &r1, &r2);
0004cc  466a              MOV      r2,sp
0004ce  a904              ADD      r1,sp,#0x10
0004d0  a804              ADD      r0,sp,#0x10
0004d2  f7fffffe          BL       GUI_MergeRect
;;;426          WM_InvalidateRect(hObj, &r1);
0004d6  a904              ADD      r1,sp,#0x10
0004d8  4628              MOV      r0,r5
0004da  f7fffffe          BL       WM_InvalidateRect
;;;427        }
0004de  bf00              NOP      
                  |L1.1248|
;;;428        GUI_SetFont(pOldFont);
0004e0  4638              MOV      r0,r7
0004e2  f7fffffe          BL       GUI_SetFont
;;;429        WM_UNLOCK();
0004e6  f7fffffe          BL       GUI_Unlock
;;;430      }
0004ea  bf00              NOP      
                  |L1.1260|
;;;431    }
0004ec  b006              ADD      sp,sp,#0x18
0004ee  e8bd81f0          POP      {r4-r8,pc}
;;;432    
                          ENDP

                  PROGBAR_SetTextAlign PROC
;;;436    */
;;;437    void PROGBAR_SetTextAlign(PROGBAR_Handle hObj, int Align) {
0004f2  b570              PUSH     {r4-r6,lr}
0004f4  4604              MOV      r4,r0
0004f6  460d              MOV      r5,r1
;;;438      PROGBAR_Obj* pObj;
;;;439      if (hObj) {
0004f8  b16c              CBZ      r4,|L1.1302|
;;;440        WM_LOCK();
0004fa  f7fffffe          BL       GUI_Lock
;;;441        pObj = PROGBAR_H2P(hObj);
0004fe  4620              MOV      r0,r4
000500  f7fffffe          BL       GUI_ALLOC_h2p
000504  4606              MOV      r6,r0
;;;442        pObj->TextAlign = Align;
000506  b228              SXTH     r0,r5
000508  f8a60046          STRH     r0,[r6,#0x46]
;;;443        WM_InvalidateWindow(hObj);
00050c  4620              MOV      r0,r4
00050e  f7fffffe          BL       WM_InvalidateWindow
;;;444        WM_UNLOCK();
000512  f7fffffe          BL       GUI_Unlock
                  |L1.1302|
;;;445      }
;;;446    }
000516  bd70              POP      {r4-r6,pc}
;;;447    
                          ENDP

                  PROGBAR_SetTextPos PROC
;;;451    */
;;;452    void PROGBAR_SetTextPos(PROGBAR_Handle hObj, int XOff, int YOff) {
000518  e92d41f0          PUSH     {r4-r8,lr}
00051c  4605              MOV      r5,r0
00051e  460e              MOV      r6,r1
000520  4617              MOV      r7,r2
;;;453      PROGBAR_Obj* pObj;
;;;454      if (hObj) {
000522  b185              CBZ      r5,|L1.1350|
;;;455        WM_LOCK();
000524  f7fffffe          BL       GUI_Lock
;;;456        pObj = PROGBAR_H2P(hObj);
000528  4628              MOV      r0,r5
00052a  f7fffffe          BL       GUI_ALLOC_h2p
00052e  4604              MOV      r4,r0
;;;457        pObj->XOff = XOff;
000530  b230              SXTH     r0,r6
000532  f8a40042          STRH     r0,[r4,#0x42]
;;;458        pObj->YOff = YOff;
000536  b238              SXTH     r0,r7
000538  f8a40044          STRH     r0,[r4,#0x44]
;;;459        WM_InvalidateWindow(hObj);
00053c  4628              MOV      r0,r5
00053e  f7fffffe          BL       WM_InvalidateWindow
;;;460        WM_UNLOCK();
000542  f7fffffe          BL       GUI_Unlock
                  |L1.1350|
;;;461      }
;;;462    }
000546  e8bd81f0          POP      {r4-r8,pc}
;;;463    
                          ENDP

                  PROGBAR_SetMinMax PROC
;;;467    */
;;;468    void PROGBAR_SetMinMax(PROGBAR_Handle hObj, int Min, int Max) {
00054a  e92d41f0          PUSH     {r4-r8,lr}
00054e  4607              MOV      r7,r0
000550  460d              MOV      r5,r1
000552  4616              MOV      r6,r2
;;;469      PROGBAR_Obj* pObj;
;;;470      if (hObj) {
000554  b1a7              CBZ      r7,|L1.1408|
;;;471        WM_LOCK();
000556  f7fffffe          BL       GUI_Lock
;;;472        pObj = PROGBAR_H2P(hObj);
00055a  4638              MOV      r0,r7
00055c  f7fffffe          BL       GUI_ALLOC_h2p
000560  4604              MOV      r4,r0
;;;473        if (Max > Min) {
000562  42ae              CMP      r6,r5
000564  dd0a              BLE      |L1.1404|
;;;474          if ((Max != pObj->Max) || (Min != pObj->Min)) {
000566  6ce0              LDR      r0,[r4,#0x4c]
000568  42b0              CMP      r0,r6
00056a  d102              BNE      |L1.1394|
00056c  6ca0              LDR      r0,[r4,#0x48]
00056e  42a8              CMP      r0,r5
000570  d004              BEQ      |L1.1404|
                  |L1.1394|
;;;475            pObj->Min = Min;
000572  64a5              STR      r5,[r4,#0x48]
;;;476            pObj->Max = Max;
000574  64e6              STR      r6,[r4,#0x4c]
;;;477            WM_InvalidateWindow(hObj);
000576  4638              MOV      r0,r7
000578  f7fffffe          BL       WM_InvalidateWindow
                  |L1.1404|
;;;478          }
;;;479        }
;;;480        WM_UNLOCK();
00057c  f7fffffe          BL       GUI_Unlock
                  |L1.1408|
;;;481      }
;;;482    }
000580  e8bd81f0          POP      {r4-r8,pc}
;;;483    
                          ENDP

                  |L1.1412|
                          DCD      _PROGBAR_Callback
                  |L1.1416|
                          DCD      WIDGET_Effect_None
                  |L1.1420|
                          DCD      GUI_Font6x8
                  |L1.1424|
                          DCD      0x00555555
