; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [--debug -c --asm --interleave -o.\Obj\lcdpm332.o --depend=.\Obj\lcdpm332.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\Libraries\CMSIS\CM3\CoreSupport -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x\startup\arm -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\User -I..\BaseDrive -I..\Ucosii -I..\Ucosii\Port -I..\Ucosii\Src -I..\Ucosii\Include -I..\Ucgui -I..\Ucgui\Config -I..\Ucgui\GUI_X -I..\Ucgui\GUI -I..\Ucgui\GUI\ConvertColor -I..\Ucgui\GUI\ConvertMono -I..\Ucgui\GUI\Core -I..\Ucgui\GUI\Core -I..\Ucgui\GUI\LCDDriver -I..\Ucgui\GUI\MultiLayer -I..\Ucgui\GUI\Widget -I..\Ucgui\GUI\WM -I..\ExternalDrive\Lcd -I..\ExternalDrive\Touch -I..\Panel -ID:\Keil\ARM\INC -ID:\Keil\ARM\INC\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=.\Obj\lcdpm332.crf ..\Ucgui\GUI\ConvertColor\LCDPM332.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=1

                  LCD_Color2Index_M332 PROC
;;;33     */
;;;34     unsigned LCD_Color2Index_M332(LCD_COLOR Color) {
000000  b530              PUSH     {r4,r5,lr}
000002  4601              MOV      r1,r0
;;;35       unsigned r, g, b;
;;;36       r = Color & 255;
000004  b2ca              UXTB     r2,r1
;;;37       g = (Color >> 8 ) & 255;
000006  f3c12307          UBFX     r3,r1,#8,#8
;;;38       b = Color >> 16;
00000a  0c0c              LSRS     r4,r1,#16
;;;39       r = (r * 7 + 127) / 255;
00000c  ebc200c2          RSB      r0,r2,r2,LSL #3
000010  307f              ADDS     r0,r0,#0x7f
000012  25ff              MOVS     r5,#0xff
000014  fbb0f2f5          UDIV     r2,r0,r5
;;;40       g = (g * 7 + 127) / 255;
000018  ebc300c3          RSB      r0,r3,r3,LSL #3
00001c  307f              ADDS     r0,r0,#0x7f
00001e  fbb0f3f5          UDIV     r3,r0,r5
;;;41       b = (b + 42) / 85;
000022  f104002a          ADD      r0,r4,#0x2a
000026  2555              MOVS     r5,#0x55
000028  fbb0f4f5          UDIV     r4,r0,r5
;;;42       return b + (g << 2) + (r << 5);
00002c  eb040083          ADD      r0,r4,r3,LSL #2
000030  eb001042          ADD      r0,r0,r2,LSL #5
;;;43     }
000034  bd30              POP      {r4,r5,pc}
;;;44     
                          ENDP

                  LCD_Index2Color_M332 PROC
;;;48     */
;;;49     LCD_COLOR LCD_Index2Color_M332(int Index) {
000036  b530              PUSH     {r4,r5,lr}
000038  4601              MOV      r1,r0
;;;50       unsigned r, g, b;
;;;51       b = (Index & 3) * 85;
00003a  f0010003          AND      r0,r1,#3
00003e  eb001000          ADD      r0,r0,r0,LSL #4
000042  eb000480          ADD      r4,r0,r0,LSL #2
;;;52       g = ((Index >> 2) & 7) * 255 / 7;
000046  f3c10082          UBFX     r0,r1,#2,#3
00004a  ebc02000          RSB      r0,r0,r0,LSL #8
00004e  2507              MOVS     r5,#7
000050  fb90f3f5          SDIV     r3,r0,r5
;;;53       r = ((Index >> 5) & 7) * 255 / 7;
000054  f3c11042          UBFX     r0,r1,#5,#3
000058  ebc02000          RSB      r0,r0,r0,LSL #8
00005c  fb90f2f5          SDIV     r2,r0,r5
;;;54       return r + (g << 8) + (((U32)b) << 16);
000060  eb022003          ADD      r0,r2,r3,LSL #8
000064  eb004004          ADD      r0,r0,r4,LSL #16
;;;55     }
000068  bd30              POP      {r4,r5,pc}
;;;56     
                          ENDP

                  LCD_GetIndexMask_M332 PROC
;;;60     */
;;;61     unsigned LCD_GetIndexMask_M332(void) {
00006a  20ff              MOVS     r0,#0xff
;;;62       return 0xff;
;;;63     }
00006c  4770              BX       lr
;;;64     
                          ENDP

