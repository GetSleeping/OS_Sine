; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [--debug -c --asm --interleave -o.\Obj\gui_x_ucos.o --depend=.\Obj\gui_x_ucos.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\Libraries\CMSIS\CM3\CoreSupport -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x\startup\arm -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\User -I..\BaseDrive -I..\Ucosii -I..\Ucosii\Port -I..\Ucosii\Src -I..\Ucosii\Include -I..\Ucgui -I..\Ucgui\Config -I..\Ucgui\GUI_X -I..\Ucgui\GUI -I..\Ucgui\GUI\ConvertColor -I..\Ucgui\GUI\ConvertMono -I..\Ucgui\GUI\Core -I..\Ucgui\GUI\Core -I..\Ucgui\GUI\LCDDriver -I..\Ucgui\GUI\MultiLayer -I..\Ucgui\GUI\Widget -I..\Ucgui\GUI\WM -I..\ExternalDrive\Lcd -I..\ExternalDrive\Touch -I..\Panel -ID:\Keil\ARM\INC -ID:\Keil\ARM\INC\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=.\Obj\gui_x_ucos.crf ..\Ucgui\GUI_X\GUI_X_uCOS.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  GUI_X_GetTime PROC
;;;56     
;;;57     int  GUI_X_GetTime (void) 
000000  b510              PUSH     {r4,lr}
;;;58     {
;;;59         return ((int)OSTimeGet());
000002  f7fffffe          BL       OSTimeGet
;;;60     }
000006  bd10              POP      {r4,pc}
;;;61     
                          ENDP

                  GUI_X_Delay PROC
;;;62     
;;;63     void  GUI_X_Delay (int period) 
000008  b570              PUSH     {r4-r6,lr}
;;;64     {
00000a  4604              MOV      r4,r0
;;;65         INT32U  ticks;
;;;66     
;;;67     
;;;68         ticks = (period * 1000) / OS_TICKS_PER_SEC;
00000c  f44f707a          MOV      r0,#0x3e8
000010  4360              MULS     r0,r4,r0
000012  f44f717a          MOV      r1,#0x3e8
000016  fb90f5f1          SDIV     r5,r0,r1
;;;69         OSTimeDly((INT16U)ticks);
00001a  b2a8              UXTH     r0,r5
00001c  f7fffffe          BL       OSTimeDly
;;;70     }
000020  bd70              POP      {r4-r6,pc}
;;;71     
                          ENDP

                  GUI_X_ExecIdle PROC
;;;77     */
;;;78     void GUI_X_ExecIdle (void) 
000022  b510              PUSH     {r4,lr}
;;;79     {
;;;80         //OS_X_Delay(1);
;;;81          OSTimeDly(50);
000024  2032              MOVS     r0,#0x32
000026  f7fffffe          BL       OSTimeDly
;;;82     }
00002a  bd10              POP      {r4,pc}
;;;83     
                          ENDP

                  GUI_X_InitOS PROC
;;;94     
;;;95     void  GUI_X_InitOS (void)
00002c  b510              PUSH     {r4,lr}
;;;96     { 
;;;97         DispSem   = OSSemCreate(1);
00002e  2001              MOVS     r0,#1
000030  f7fffffe          BL       OSSemCreate
000034  4930              LDR      r1,|L1.248|
000036  6008              STR      r0,[r1,#0]  ; DispSem
;;;98         EventMbox = OSMboxCreate((void *)0);
000038  2000              MOVS     r0,#0
00003a  f7fffffe          BL       OSMboxCreate
00003e  492f              LDR      r1,|L1.252|
000040  6008              STR      r0,[r1,#0]  ; EventMbox
;;;99     }
000042  bd10              POP      {r4,pc}
;;;100    
                          ENDP

                  GUI_X_Lock PROC
;;;101    
;;;102    void  GUI_X_Lock (void)
000044  b508              PUSH     {r3,lr}
;;;103    { 
;;;104        INT8U  err;
;;;105        
;;;106        
;;;107        OSSemPend(DispSem, 0, &err);
000046  466a              MOV      r2,sp
000048  2100              MOVS     r1,#0
00004a  482b              LDR      r0,|L1.248|
00004c  6800              LDR      r0,[r0,#0]  ; DispSem
00004e  f7fffffe          BL       OSSemPend
;;;108    }
000052  bd08              POP      {r3,pc}
;;;109    
                          ENDP

                  GUI_X_Unlock PROC
;;;110    
;;;111    void  GUI_X_Unlock (void)
000054  b510              PUSH     {r4,lr}
;;;112    { 
;;;113        OSSemPost(DispSem);
000056  4828              LDR      r0,|L1.248|
000058  6800              LDR      r0,[r0,#0]  ; DispSem
00005a  f7fffffe          BL       OSSemPost
;;;114    }
00005e  bd10              POP      {r4,pc}
;;;115    
                          ENDP

                  GUI_X_GetTaskId PROC
;;;116    
;;;117    U32  GUI_X_GetTaskId (void) 
000060  4827              LDR      r0,|L1.256|
;;;118    { 
;;;119        return ((U32)(OSTCBCur->OSTCBPrio));
000062  6800              LDR      r0,[r0,#0]  ; OSTCBCur
000064  f8900028          LDRB     r0,[r0,#0x28]
;;;120    }
000068  4770              BX       lr
;;;121    
                          ENDP

                  GUI_X_WaitEvent PROC
;;;129    
;;;130    void GUI_X_WaitEvent (void) 
00006a  b508              PUSH     {r3,lr}
;;;131    {
;;;132        INT8U  err;
;;;133    
;;;134    
;;;135        (void)OSMboxPend(EventMbox, 0, &err);
00006c  466a              MOV      r2,sp
00006e  2100              MOVS     r1,#0
000070  4822              LDR      r0,|L1.252|
000072  6800              LDR      r0,[r0,#0]  ; EventMbox
000074  f7fffffe          BL       OSMboxPend
;;;136    }
000078  bd08              POP      {r3,pc}
;;;137    
                          ENDP

                  GUI_X_SignalEvent PROC
;;;138    
;;;139    void GUI_X_SignalEvent (void) 
00007a  b510              PUSH     {r4,lr}
;;;140    {
;;;141        (void)OSMboxPost(EventMbox, (void *)1);
00007c  2101              MOVS     r1,#1
00007e  481f              LDR      r0,|L1.252|
000080  6800              LDR      r0,[r0,#0]  ; EventMbox
000082  f7fffffe          BL       OSMboxPost
;;;142    }
000086  bd10              POP      {r4,pc}
;;;143    
                          ENDP

                  GUI_X_Init PROC
;;;165    
;;;166    void GUI_X_Init (void) 
000088  b510              PUSH     {r4,lr}
;;;167    {
;;;168        KeySem = OSSemCreate(0);
00008a  2000              MOVS     r0,#0
00008c  f7fffffe          BL       OSSemCreate
000090  491c              LDR      r1,|L1.260|
000092  6008              STR      r0,[r1,#0]  ; KeySem
;;;169    }
000094  bd10              POP      {r4,pc}
;;;170    
                          ENDP

                  CheckInit PROC
;;;156    
;;;157    static  void  CheckInit (void) 
000096  b510              PUSH     {r4,lr}
;;;158    {
;;;159        if (KeyIsInited == 0) {
000098  481b              LDR      r0,|L1.264|
00009a  7800              LDRB     r0,[r0,#0]  ; KeyIsInited
00009c  b920              CBNZ     r0,|L1.168|
;;;160            KeyIsInited = 1;
00009e  2001              MOVS     r0,#1
0000a0  4919              LDR      r1,|L1.264|
0000a2  7008              STRB     r0,[r1,#0]
;;;161            GUI_X_Init();
0000a4  f7fffffe          BL       GUI_X_Init
                  |L1.168|
;;;162        }
;;;163    }
0000a8  bd10              POP      {r4,pc}
;;;164    
                          ENDP

                  GUI_X_GetKey PROC
;;;171    
;;;172    int  GUI_X_GetKey (void) 
0000aa  b510              PUSH     {r4,lr}
;;;173    {
;;;174        int r;
;;;175    
;;;176    
;;;177        r          = KeyPressed;
0000ac  4817              LDR      r0,|L1.268|
0000ae  6804              LDR      r4,[r0,#0]  ; KeyPressed
;;;178        CheckInit();
0000b0  f7fffffe          BL       CheckInit
;;;179        KeyPressed = 0;
0000b4  2000              MOVS     r0,#0
0000b6  4915              LDR      r1,|L1.268|
0000b8  6008              STR      r0,[r1,#0]  ; KeyPressed
;;;180        return (r);
0000ba  4620              MOV      r0,r4
;;;181    }
0000bc  bd10              POP      {r4,pc}
;;;182    
                          ENDP

                  GUI_X_WaitKey PROC
;;;183    
;;;184    int  GUI_X_WaitKey (void) 
0000be  b538              PUSH     {r3-r5,lr}
;;;185    {
;;;186        int    r;
;;;187        INT8U  err;
;;;188    
;;;189    
;;;190        CheckInit();
0000c0  f7fffffe          BL       CheckInit
;;;191        if (KeyPressed == 0) {
0000c4  4811              LDR      r0,|L1.268|
0000c6  6800              LDR      r0,[r0,#0]  ; KeyPressed
0000c8  b928              CBNZ     r0,|L1.214|
;;;192            OSSemPend(KeySem, 0, &err);
0000ca  466a              MOV      r2,sp
0000cc  2100              MOVS     r1,#0
0000ce  480d              LDR      r0,|L1.260|
0000d0  6800              LDR      r0,[r0,#0]  ; KeySem
0000d2  f7fffffe          BL       OSSemPend
                  |L1.214|
;;;193        }
;;;194        r          = KeyPressed;
0000d6  480d              LDR      r0,|L1.268|
0000d8  6804              LDR      r4,[r0,#0]  ; KeyPressed
;;;195        KeyPressed = 0;
0000da  2000              MOVS     r0,#0
0000dc  490b              LDR      r1,|L1.268|
0000de  6008              STR      r0,[r1,#0]  ; KeyPressed
;;;196        return (r);
0000e0  4620              MOV      r0,r4
;;;197    }
0000e2  bd38              POP      {r3-r5,pc}
;;;198    
                          ENDP

                  GUI_X_StoreKey PROC
;;;199    
;;;200    void  GUI_X_StoreKey (int k) 
0000e4  b510              PUSH     {r4,lr}
;;;201    {
0000e6  4604              MOV      r4,r0
;;;202        KeyPressed = k;
0000e8  4808              LDR      r0,|L1.268|
0000ea  6004              STR      r4,[r0,#0]  ; KeyPressed
;;;203        OSSemPost(KeySem);
0000ec  4805              LDR      r0,|L1.260|
0000ee  6800              LDR      r0,[r0,#0]  ; KeySem
0000f0  f7fffffe          BL       OSSemPost
;;;204    }
0000f4  bd10              POP      {r4,pc}
                          ENDP

0000f6  0000              DCW      0x0000
                  |L1.248|
                          DCD      DispSem
                  |L1.252|
                          DCD      EventMbox
                  |L1.256|
                          DCD      OSTCBCur
                  |L1.260|
                          DCD      KeySem
                  |L1.264|
                          DCD      KeyIsInited
                  |L1.268|
                          DCD      KeyPressed

                          AREA ||.data||, DATA, ALIGN=2

                  DispSem
                          DCD      0x00000000
                  EventMbox
                          DCD      0x00000000
                  KeySem
                          DCD      0x00000000
                  KeyPressed
                          DCD      0x00000000
                  KeyIsInited
000010  00                DCB      0x00
