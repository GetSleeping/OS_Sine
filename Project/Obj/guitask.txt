; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [--debug -c --asm --interleave -o.\Obj\guitask.o --depend=.\Obj\guitask.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\Libraries\CMSIS\CM3\CoreSupport -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x\startup\arm -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\User -I..\BaseDrive -I..\Ucosii -I..\Ucosii\Port -I..\Ucosii\Src -I..\Ucosii\Include -I..\Ucgui -I..\Ucgui\Config -I..\Ucgui\GUI_X -I..\Ucgui\GUI -I..\Ucgui\GUI\ConvertColor -I..\Ucgui\GUI\ConvertMono -I..\Ucgui\GUI\Core -I..\Ucgui\GUI\Core -I..\Ucgui\GUI\LCDDriver -I..\Ucgui\GUI\MultiLayer -I..\Ucgui\GUI\Widget -I..\Ucgui\GUI\WM -I..\ExternalDrive\Lcd -I..\ExternalDrive\Touch -I..\Panel -ID:\Keil\ARM\INC -ID:\Keil\ARM\INC\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=.\Obj\guitask.crf ..\Ucgui\GUI\Core\GUITask.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  _GetTaskNo PROC
;;;94     */
;;;95     static int _GetTaskNo(void) {
000000  b570              PUSH     {r4-r6,lr}
;;;96       int i;
;;;97       for (i=0; i< GUI_MAXTASK; i++) {
000002  2400              MOVS     r4,#0
000004  e01e              B        |L1.68|
                  |L1.6|
;;;98         U32 TaskId = GUI_X_GetTaskId();
000006  f7fffffe          BL       GUI_X_GetTaskId
00000a  4605              MOV      r5,r0
;;;99         if (_Save[i].TaskID == TaskId)
00000c  eb040044          ADD      r0,r4,r4,LSL #1
000010  eb001004          ADD      r0,r0,r4,LSL #4
000014  4947              LDR      r1,|L1.308|
000016  f8510020          LDR      r0,[r1,r0,LSL #2]
00001a  42a8              CMP      r0,r5
00001c  d101              BNE      |L1.34|
;;;100          return i;
00001e  4620              MOV      r0,r4
                  |L1.32|
;;;101        if (_Save[i].TaskID == 0) {
;;;102          _Save[i].TaskID = TaskId;
;;;103          return i;
;;;104        }
;;;105      }
;;;106      GUI_DEBUG_ERROROUT("No Context available for task ... (increase GUI_MAXTASK)");
;;;107      return 0;
;;;108    }
000020  bd70              POP      {r4-r6,pc}
                  |L1.34|
000022  eb040044          ADD      r0,r4,r4,LSL #1       ;101
000026  eb001004          ADD      r0,r0,r4,LSL #4       ;101
00002a  4942              LDR      r1,|L1.308|
00002c  f8510020          LDR      r0,[r1,r0,LSL #2]     ;101
000030  b938              CBNZ     r0,|L1.66|
000032  eb040044          ADD      r0,r4,r4,LSL #1       ;102
000036  eb001004          ADD      r0,r0,r4,LSL #4       ;102
00003a  f8415020          STR      r5,[r1,r0,LSL #2]     ;102
00003e  4620              MOV      r0,r4                 ;103
000040  e7ee              B        |L1.32|
                  |L1.66|
000042  1c64              ADDS     r4,r4,#1              ;97
                  |L1.68|
000044  2c04              CMP      r4,#4                 ;97
000046  dbde              BLT      |L1.6|
000048  2000              MOVS     r0,#0                 ;107
00004a  e7e9              B        |L1.32|
;;;109    
                          ENDP

                  GUI_Unlock PROC
;;;119    */
;;;120    void GUI_Unlock(void) {
00004c  b510              PUSH     {r4,lr}
;;;121      if (--_EntranceCnt == 0) {
00004e  483a              LDR      r0,|L1.312|
000050  6800              LDR      r0,[r0,#0]  ; _EntranceCnt
000052  1e40              SUBS     r0,r0,#1
000054  4938              LDR      r1,|L1.312|
000056  6008              STR      r0,[r1,#0]  ; _EntranceCnt
000058  d101              BNE      |L1.94|
;;;122        GUI_X_Unlock();
00005a  f7fffffe          BL       GUI_X_Unlock
                  |L1.94|
;;;123      }
;;;124      /* Test if _EntranceCnt is in reasonable range ... Not required in release builds */
;;;125      GUI_DEBUG_ERROROUT_IF((_EntranceCnt < 0), "GUITASK.c: GUI_Unlock() _EntranceCnt underflow ");
;;;126    }
00005e  bd10              POP      {r4,pc}
;;;127    
                          ENDP

                  GUI_Lock PROC
;;;131    */
;;;132    void GUI_Lock(void) {
000060  b510              PUSH     {r4,lr}
;;;133      if (_EntranceCnt == 0) {
000062  4835              LDR      r0,|L1.312|
000064  6800              LDR      r0,[r0,#0]  ; _EntranceCnt
000066  b930              CBNZ     r0,|L1.118|
;;;134        GUI_X_Lock();
000068  f7fffffe          BL       GUI_X_Lock
;;;135        _TaskIDLock = GUI_X_GetTaskId();         /* Save task ID */
00006c  f7fffffe          BL       GUI_X_GetTaskId
000070  4932              LDR      r1,|L1.316|
000072  6008              STR      r0,[r1,#0]  ; _TaskIDLock
000074  e00b              B        |L1.142|
                  |L1.118|
;;;136      } else {
;;;137        if (_TaskIDLock != GUI_X_GetTaskId()) {
000076  f7fffffe          BL       GUI_X_GetTaskId
00007a  4930              LDR      r1,|L1.316|
00007c  6809              LDR      r1,[r1,#0]  ; _TaskIDLock
00007e  4288              CMP      r0,r1
000080  d005              BEQ      |L1.142|
;;;138          GUI_X_Lock();
000082  f7fffffe          BL       GUI_X_Lock
;;;139          _TaskIDLock = GUI_X_GetTaskId();         /* Save task ID */
000086  f7fffffe          BL       GUI_X_GetTaskId
00008a  492c              LDR      r1,|L1.316|
00008c  6008              STR      r0,[r1,#0]  ; _TaskIDLock
                  |L1.142|
;;;140        }
;;;141      }
;;;142      if (++_EntranceCnt == 1) {
00008e  482a              LDR      r0,|L1.312|
000090  6800              LDR      r0,[r0,#0]  ; _EntranceCnt
000092  1c40              ADDS     r0,r0,#1
000094  4928              LDR      r1,|L1.312|
000096  6008              STR      r0,[r1,#0]  ; _EntranceCnt
000098  2801              CMP      r0,#1
00009a  d127              BNE      |L1.236|
;;;143        int TaskNo = _GetTaskNo();
00009c  f7fffffe          BL       _GetTaskNo
0000a0  4604              MOV      r4,r0
;;;144        if (TaskNo != _CurrentTaskNo) {
0000a2  4827              LDR      r0,|L1.320|
0000a4  6800              LDR      r0,[r0,#0]  ; _CurrentTaskNo
0000a6  4284              CMP      r4,r0
0000a8  d01f              BEQ      |L1.234|
;;;145          /* Save data of current task */
;;;146          if (_CurrentTaskNo>=0) {  /* Make sure _CurrentTaskNo is valid */
0000aa  4825              LDR      r0,|L1.320|
0000ac  6800              LDR      r0,[r0,#0]  ; _CurrentTaskNo
0000ae  2800              CMP      r0,#0
0000b0  db19              BLT      |L1.230|
;;;147            _Save[_CurrentTaskNo].Context = GUI_Context;
0000b2  4923              LDR      r1,|L1.320|
0000b4  6809              LDR      r1,[r1,#0]  ; _CurrentTaskNo
0000b6  eb010241          ADD      r2,r1,r1,LSL #1
0000ba  eb021101          ADD      r1,r2,r1,LSL #4
0000be  4a1d              LDR      r2,|L1.308|
0000c0  eb020181          ADD      r1,r2,r1,LSL #2
0000c4  1d08              ADDS     r0,r1,#4
0000c6  2248              MOVS     r2,#0x48
0000c8  491e              LDR      r1,|L1.324|
0000ca  f7fffffe          BL       __aeabi_memcpy4
;;;148            /* Load data of this task */
;;;149            GUI_Context = _Save[TaskNo].Context;
0000ce  eb040044          ADD      r0,r4,r4,LSL #1
0000d2  eb001004          ADD      r0,r0,r4,LSL #4
0000d6  4a17              LDR      r2,|L1.308|
0000d8  eb020080          ADD      r0,r2,r0,LSL #2
0000dc  1d01              ADDS     r1,r0,#4
0000de  2248              MOVS     r2,#0x48
0000e0  4818              LDR      r0,|L1.324|
0000e2  f7fffffe          BL       __aeabi_memcpy4
                  |L1.230|
;;;150          }
;;;151          _CurrentTaskNo = TaskNo;
0000e6  4816              LDR      r0,|L1.320|
0000e8  6004              STR      r4,[r0,#0]  ; _CurrentTaskNo
                  |L1.234|
;;;152        }
;;;153      }
0000ea  bf00              NOP      
                  |L1.236|
;;;154      /* Test if _EntranceCnt is in reasonable range ... Not required in release builds */
;;;155      GUI_DEBUG_ERROROUT_IF((_EntranceCnt > GUI_MAX_LOCK_NESTING), "GUITASK.c: GUI_Lock() _EntranceCnt overflow ");
;;;156    }
0000ec  bd10              POP      {r4,pc}
;;;157    
                          ENDP

                  GUITASK_Init PROC
;;;161    */
;;;162    void GUITASK_Init(void) {
0000ee  b510              PUSH     {r4,lr}
;;;163      _CurrentTaskNo =-1;   /* Invalidate */
0000f0  f04f30ff          MOV      r0,#0xffffffff
0000f4  4912              LDR      r1,|L1.320|
0000f6  6008              STR      r0,[r1,#0]  ; _CurrentTaskNo
;;;164      GUI_X_InitOS();
0000f8  f7fffffe          BL       GUI_X_InitOS
;;;165    }
0000fc  bd10              POP      {r4,pc}
;;;166    
                          ENDP

                  GUITASK_CopyContext PROC
;;;171    */
;;;172    void GUITASK_CopyContext(void) {
0000fe  b510              PUSH     {r4,lr}
;;;173      int i;
;;;174      for (i = 0; i < GUI_MAXTASK; i++) {
000100  2400              MOVS     r4,#0
000102  e014              B        |L1.302|
                  |L1.260|
;;;175        _Save[i].Context = GUI_Context;
000104  eb040144          ADD      r1,r4,r4,LSL #1
000108  eb011104          ADD      r1,r1,r4,LSL #4
00010c  4a09              LDR      r2,|L1.308|
00010e  eb020181          ADD      r1,r2,r1,LSL #2
000112  1d08              ADDS     r0,r1,#4
000114  2248              MOVS     r2,#0x48
000116  490b              LDR      r1,|L1.324|
000118  f7fffffe          BL       __aeabi_memcpy4
;;;176        _Save[i].TaskID  = 0;
00011c  2000              MOVS     r0,#0
00011e  eb040144          ADD      r1,r4,r4,LSL #1
000122  eb011104          ADD      r1,r1,r4,LSL #4
000126  4a03              LDR      r2,|L1.308|
000128  f8420021          STR      r0,[r2,r1,LSL #2]
00012c  1c64              ADDS     r4,r4,#1              ;174
                  |L1.302|
00012e  2c04              CMP      r4,#4                 ;174
000130  dbe8              BLT      |L1.260|
;;;177      }
;;;178    }
000132  bd10              POP      {r4,pc}
;;;179    
                          ENDP

                  |L1.308|
                          DCD      _Save
                  |L1.312|
                          DCD      _EntranceCnt
                  |L1.316|
                          DCD      _TaskIDLock
                  |L1.320|
                          DCD      _CurrentTaskNo
                  |L1.324|
                          DCD      GUI_Context

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  _Save
                          %        304

                          AREA ||.data||, DATA, ALIGN=2

                  _CurrentTaskNo
                          DCD      0xffffffff
                  _EntranceCnt
                          DCD      0x00000000
                  _TaskIDLock
                          DCD      0x00000000
