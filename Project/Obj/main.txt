; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [--debug -c --asm --interleave -o.\Obj\main.o --depend=.\Obj\main.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\Libraries\CMSIS\CM3\CoreSupport -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x\startup\arm -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\User -I..\BaseDrive -I..\Ucosii -I..\Ucosii\Port -I..\Ucosii\Src -I..\Ucosii\Include -I..\Ucgui -I..\Ucgui\Config -I..\Ucgui\GUI_X -I..\Ucgui\GUI -I..\Ucgui\GUI\ConvertColor -I..\Ucgui\GUI\ConvertMono -I..\Ucgui\GUI\Core -I..\Ucgui\GUI\Core -I..\Ucgui\GUI\LCDDriver -I..\Ucgui\GUI\MultiLayer -I..\Ucgui\GUI\Widget -I..\Ucgui\GUI\WM -I..\ExternalDrive\Lcd -I..\ExternalDrive\Touch -I..\Panel -ID:\Keil\ARM\INC -ID:\Keil\ARM\INC\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=.\Obj\main.crf ..\User\main.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  TouchTask PROC
;;;99     *******************************************************************************************/
;;;100    static void TouchTask(void *p_arg)
000000  f7fffffe          BL       GUI_CURSOR_Show
;;;101    {
;;;102    	GUI_CURSOR_Show();      //打开“鼠标显示”
;;;103    
;;;104        for(;;)
000004  bf00              NOP      
                  |L1.6|
;;;105        {
;;;106    		GUI_TOUCH_Exec();   //触摸检测
000006  f7fffffe          BL       GUI_TOUCH_Exec
;;;107    		OSTimeDly(15);      //延时
00000a  200f              MOVS     r0,#0xf
00000c  f7fffffe          BL       OSTimeDly
;;;108    	    GUI_Exec();         //界面绘制检测
000010  f7fffffe          BL       GUI_Exec
000014  e7f7              B        |L1.6|
;;;109    		//GUI_DrawCircle(100,100,50);
;;;110        }
;;;111    }
;;;112    
                          ENDP

                  PanelTask PROC
;;;71     *******************************************************************************************/
;;;72     static void PanelTask(void *p_arg)
000016  b510              PUSH     {r4,lr}
;;;73     {
000018  4604              MOV      r4,r0
;;;74         GUI_Init();			 
00001a  f7fffffe          BL       GUI_Init
;;;75     	GUI_SetBkColor(GUI_BLACK);   //设置背景颜色
00001e  2000              MOVS     r0,#0
000020  f7fffffe          BL       GUI_SetBkColor
;;;76     	GUI_SetColor(GUI_RED);      //设置前景颜色，及字体和绘图的颜色
000024  20ff              MOVS     r0,#0xff
000026  f7fffffe          BL       GUI_SetColor
;;;77     	GUI_Clear();                 //按指定颜色清屏
00002a  f7fffffe          BL       GUI_Clear
;;;78     
;;;79     	GUI_DispStringAt("UCGUI OK!",10,10);        //显示字符
00002e  220a              MOVS     r2,#0xa
000030  4611              MOV      r1,r2
000032  a020              ADR      r0,|L1.180|
000034  f7fffffe          BL       GUI_DispStringAt
;;;80         GUI_SetFont(&GUI_Font4x6);
000038  4821              LDR      r0,|L1.192|
00003a  f7fffffe          BL       GUI_SetFont
;;;81         GUI_DispStringAt("www.openmcu.com",10,100); //显示字符
00003e  2264              MOVS     r2,#0x64
000040  210a              MOVS     r1,#0xa
000042  a020              ADR      r0,|L1.196|
000044  f7fffffe          BL       GUI_DispStringAt
;;;82         GUI_SetFont(&GUI_Font6x8);
000048  4822              LDR      r0,|L1.212|
00004a  f7fffffe          BL       GUI_SetFont
;;;83         GUI_DispStringAt("www.openmcu.com",10,130); //显示字符
00004e  2282              MOVS     r2,#0x82
000050  210a              MOVS     r1,#0xa
000052  a01c              ADR      r0,|L1.196|
000054  f7fffffe          BL       GUI_DispStringAt
;;;84         GUI_SetFont(&GUI_Font8x16);
000058  481f              LDR      r0,|L1.216|
00005a  f7fffffe          BL       GUI_SetFont
;;;85         GUI_DispStringAt("www.openmcu.com",10,160); //显示字符
00005e  22a0              MOVS     r2,#0xa0
000060  210a              MOVS     r1,#0xa
000062  a018              ADR      r0,|L1.196|
000064  f7fffffe          BL       GUI_DispStringAt
;;;86     
;;;87     	//GUI_DrawCircle(100,100,50);
;;;88     
;;;89         Panel();                             //显示面板
000068  f7fffffe          BL       Panel
;;;90     }
00006c  bd10              POP      {r4,pc}
;;;91     /********************************************************************************************
                          ENDP

                  startup_task PROC
;;;33     *******************************************************************************************/
;;;34     static void startup_task(void *p_arg)
00006e  b510              PUSH     {r4,lr}
;;;35     {
000070  4604              MOV      r4,r0
;;;36         systick_init();               //心跳时钟初始化
000072  f7fffffe          BL       systick_init
;;;37     #if(OS_TASK_STAT_EN > 0)          //统计CPU使用率
;;;38         OSStatInit();
;;;39     #endif
;;;40         
;;;41         OSTaskCreate(PanelTask,(void*)0,&paneltask_stk[PANEL_TASK_STK_SIZE - 1],PANEL_TASK_PRIO);
000076  2305              MOVS     r3,#5
000078  4a18              LDR      r2,|L1.220|
00007a  2100              MOVS     r1,#0
00007c  4818              LDR      r0,|L1.224|
00007e  f7fffffe          BL       OSTaskCreate
;;;42         OSTaskCreate(TouchTask,(void*)0,&touchtask_stk[TOUCHTASK_STK_SIZE - 1],TOUCHTASK_PRIO);
000082  2314              MOVS     r3,#0x14
000084  4a17              LDR      r2,|L1.228|
000086  2100              MOVS     r1,#0
000088  4817              LDR      r0,|L1.232|
00008a  f7fffffe          BL       OSTaskCreate
;;;43     
;;;44         OSTaskDel(OS_PRIO_SELF);       //自我任务删除
00008e  20ff              MOVS     r0,#0xff
000090  f7fffffe          BL       OSTaskDel
;;;45     }
000094  bd10              POP      {r4,pc}
;;;46     /********************************************************************************************
                          ENDP

                  main PROC
;;;54     *******************************************************************************************/
;;;55     int main(void)
000096  b510              PUSH     {r4,lr}
;;;56     {
;;;57     	DAC_Mode_Init();
000098  f7fffffe          BL       DAC_Mode_Init
;;;58         OSInit();
00009c  f7fffffe          BL       OSInit
;;;59         OSTaskCreate(startup_task,(void*)0,&starup_task_stk[STARTUP_TASK_STK_SIZE - 1],STARTUP_TASK_PRIO);
0000a0  2301              MOVS     r3,#1
0000a2  4a12              LDR      r2,|L1.236|
0000a4  2100              MOVS     r1,#0
0000a6  4812              LDR      r0,|L1.240|
0000a8  f7fffffe          BL       OSTaskCreate
;;;60         OSStart();
0000ac  f7fffffe          BL       OSStart
;;;61         return 0;
0000b0  2000              MOVS     r0,#0
;;;62     }
0000b2  bd10              POP      {r4,pc}
;;;63     /********************************************************************************************
                          ENDP

                  |L1.180|
0000b4  55434755          DCB      "UCGUI OK!",0
0000b8  49204f4b
0000bc  2100    
0000be  00                DCB      0
0000bf  00                DCB      0
                  |L1.192|
                          DCD      GUI_Font4x6
                  |L1.196|
0000c4  7777772e          DCB      "www.openmcu.com",0
0000c8  6f70656e
0000cc  6d63752e
0000d0  636f6d00
                  |L1.212|
                          DCD      GUI_Font6x8
                  |L1.216|
                          DCD      GUI_Font8x16
                  |L1.220|
                          DCD      paneltask_stk+0x4e1c
                  |L1.224|
                          DCD      PanelTask
                  |L1.228|
                          DCD      touchtask_stk+0xf9c
                  |L1.232|
                          DCD      TouchTask
                  |L1.236|
                          DCD      starup_task_stk+0x13c
                  |L1.240|
                          DCD      startup_task

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  starup_task_stk
                          %        320
                  paneltask_stk
                          %        20000
                  touchtask_stk
                          %        4000

                  __ARM_use_no_argv EQU 0
