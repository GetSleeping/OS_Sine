; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [--debug -c --asm --interleave -o.\Obj\gui_drawbitmapmag.o --depend=.\Obj\gui_drawbitmapmag.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\Libraries\CMSIS\CM3\CoreSupport -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x\startup\arm -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\User -I..\BaseDrive -I..\Ucosii -I..\Ucosii\Port -I..\Ucosii\Src -I..\Ucosii\Include -I..\Ucgui -I..\Ucgui\Config -I..\Ucgui\GUI_X -I..\Ucgui\GUI -I..\Ucgui\GUI\ConvertColor -I..\Ucgui\GUI\ConvertMono -I..\Ucgui\GUI\Core -I..\Ucgui\GUI\Core -I..\Ucgui\GUI\LCDDriver -I..\Ucgui\GUI\MultiLayer -I..\Ucgui\GUI\Widget -I..\Ucgui\GUI\WM -I..\ExternalDrive\Lcd -I..\ExternalDrive\Touch -I..\Panel -ID:\Keil\ARM\INC -ID:\Keil\ARM\INC\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=.\Obj\gui_drawbitmapmag.crf ..\Ucgui\GUI\Core\GUI_DrawBitmapMag.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  GUI_DrawBitmapMag PROC
;;;32     */
;;;33     void GUI_DrawBitmapMag(const GUI_BITMAP GUI_UNI_PTR *pBitmap, int x0, int y0, int xMul, int yMul) {
000000  e92d4ff0          PUSH     {r4-r11,lr}
000004  b08b              SUB      sp,sp,#0x2c
000006  4604              MOV      r4,r0
000008  460d              MOV      r5,r1
00000a  4616              MOV      r6,r2
00000c  461f              MOV      r7,r3
00000e  f8dd9050          LDR      r9,[sp,#0x50]
;;;34       GUI_DRAWMODE PrevDraw;
;;;35       int xSize, ySize;
;;;36       const GUI_LOGPALETTE GUI_UNI_PTR * pPal;
;;;37       const LCD_PIXELINDEX* pTrans;
;;;38       GUI_LOCK();
000012  f7fffffe          BL       GUI_Lock
;;;39       pPal = pBitmap->pPal;
000016  f8d4800c          LDR      r8,[r4,#0xc]
;;;40       xSize = pBitmap->XSize;
00001a  f8b4a000          LDRH     r10,[r4,#0]
;;;41       ySize = pBitmap->YSize;
00001e  f8b4b002          LDRH     r11,[r4,#2]
;;;42       pTrans = LCD_GetpPalConvTable(pPal);
000022  4640              MOV      r0,r8
000024  f7fffffe          BL       LCD_GetpPalConvTable
000028  9009              STR      r0,[sp,#0x24]
;;;43       if (!pTrans) {
00002a  9809              LDR      r0,[sp,#0x24]
00002c  b930              CBNZ     r0,|L1.60|
;;;44         pTrans = (pBitmap->BitsPerPixel != 1) ? NULL : &LCD_BKCOLORINDEX;
00002e  88e0              LDRH     r0,[r4,#6]
000030  2801              CMP      r0,#1
000032  d001              BEQ      |L1.56|
000034  2000              MOVS     r0,#0
000036  e000              B        |L1.58|
                  |L1.56|
000038  482b              LDR      r0,|L1.232|
                  |L1.58|
00003a  9009              STR      r0,[sp,#0x24]
                  |L1.60|
;;;45       }
;;;46       PrevDraw = GUI_SetDrawMode((pPal && pPal->HasTrans) ? GUI_DRAWMODE_TRANS : 0);
00003c  f1b80f00          CMP      r8,#0
000040  d004              BEQ      |L1.76|
000042  f8981004          LDRB     r1,[r8,#4]
000046  b109              CBZ      r1,|L1.76|
000048  2102              MOVS     r1,#2
00004a  e000              B        |L1.78|
                  |L1.76|
00004c  2100              MOVS     r1,#0
                  |L1.78|
00004e  4608              MOV      r0,r1
000050  f7fffffe          BL       GUI_SetDrawMode
000054  900a              STR      r0,[sp,#0x28]
;;;47       #if (GUI_WINSUPPORT)
;;;48         WM_ADDORG(x0,y0);
000056  4824              LDR      r0,|L1.232|
000058  6c00              LDR      r0,[r0,#0x40]  ; GUI_Context
00005a  4405              ADD      r5,r5,r0
00005c  4822              LDR      r0,|L1.232|
00005e  6c40              LDR      r0,[r0,#0x44]  ; GUI_Context
000060  4406              ADD      r6,r6,r0
;;;49         {
;;;50           GUI_RECT r;
;;;51           r.x0 = x0;
000062  b228              SXTH     r0,r5
000064  f8ad001c          STRH     r0,[sp,#0x1c]
;;;52           r.x1 = x0 + xSize * xMul -1;
000068  fb0a5007          MLA      r0,r10,r7,r5
00006c  1e40              SUBS     r0,r0,#1
00006e  b200              SXTH     r0,r0
000070  f8ad0020          STRH     r0,[sp,#0x20]
;;;53           r.y0 = y0;
000074  b230              SXTH     r0,r6
000076  f8ad001e          STRH     r0,[sp,#0x1e]
;;;54           r.y1 = y0 + ySize * yMul -1;
00007a  fb0b6009          MLA      r0,r11,r9,r6
00007e  1e40              SUBS     r0,r0,#1
000080  b200              SXTH     r0,r0
000082  f8ad0022          STRH     r0,[sp,#0x22]
;;;55           WM_ITERATE_START(&r);
000086  a807              ADD      r0,sp,#0x1c
000088  f7fffffe          BL       WM__InitIVRSearch
00008c  b318              CBZ      r0,|L1.214|
00008e  bf00              NOP      
                  |L1.144|
;;;56       #endif
;;;57       if (pBitmap->pMethods) {
000090  6920              LDR      r0,[r4,#0x10]
000092  b160              CBZ      r0,|L1.174|
;;;58         #if GUI_COMPILER_SUPPORTS_FP      /* Do not support this on VERY simple chips and compilers */
;;;59           pBitmap->pMethods->pfDraw(x0, y0, pBitmap->XSize ,pBitmap->YSize, (U8 const *)pBitmap->pData, pBitmap->pPal, xMul, yMul);
000094  e9d40102          LDRD     r0,r1,[r4,#8]
000098  e88d0283          STM      sp,{r0,r1,r7,r9}
00009c  8863              LDRH     r3,[r4,#2]
00009e  8822              LDRH     r2,[r4,#0]
0000a0  6920              LDR      r0,[r4,#0x10]
0000a2  4631              MOV      r1,r6
0000a4  f8d0c000          LDR      r12,[r0,#0]
0000a8  4628              MOV      r0,r5
0000aa  47e0              BLX      r12
0000ac  e00f              B        |L1.206|
                  |L1.174|
;;;60         #endif
;;;61       } else {
;;;62         LCD_DrawBitmap(x0, y0, xSize, ySize, xMul, yMul
0000ae  9b09              LDR      r3,[sp,#0x24]
0000b0  88a1              LDRH     r1,[r4,#4]
0000b2  88e0              LDRH     r0,[r4,#6]
0000b4  68a2              LDR      r2,[r4,#8]
0000b6  e9cd7900          STRD     r7,r9,[sp,#0]
0000ba  e9cd2304          STRD     r2,r3,[sp,#0x10]
0000be  e9cd0102          STRD     r0,r1,[sp,#8]
0000c2  465b              MOV      r3,r11
0000c4  4652              MOV      r2,r10
0000c6  4631              MOV      r1,r6
0000c8  4628              MOV      r0,r5
0000ca  f7fffffe          BL       LCD_DrawBitmap
                  |L1.206|
;;;63                         ,pBitmap->BitsPerPixel, pBitmap->BytesPerLine
;;;64                         ,pBitmap->pData, pTrans);
;;;65       }
;;;66       #if (GUI_WINSUPPORT)
;;;67           WM_ITERATE_END();
0000ce  f7fffffe          BL       WM__GetNextIVR
0000d2  2800              CMP      r0,#0
0000d4  d1dc              BNE      |L1.144|
                  |L1.214|
;;;68         }
;;;69       #endif
;;;70       GUI_SetDrawMode(PrevDraw);
0000d6  980a              LDR      r0,[sp,#0x28]
0000d8  f7fffffe          BL       GUI_SetDrawMode
;;;71       GUI_UNLOCK();
0000dc  f7fffffe          BL       GUI_Unlock
;;;72     }
0000e0  b00b              ADD      sp,sp,#0x2c
0000e2  e8bd8ff0          POP      {r4-r11,pc}
;;;73     
                          ENDP

0000e6  0000              DCW      0x0000
                  |L1.232|
                          DCD      GUI_Context
