; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [--debug -c --asm --interleave -o.\Obj\widget.o --depend=.\Obj\widget.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\Libraries\CMSIS\CM3\CoreSupport -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x\startup\arm -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\User -I..\BaseDrive -I..\Ucosii -I..\Ucosii\Port -I..\Ucosii\Src -I..\Ucosii\Include -I..\Ucgui -I..\Ucgui\Config -I..\Ucgui\GUI_X -I..\Ucgui\GUI -I..\Ucgui\GUI\ConvertColor -I..\Ucgui\GUI\ConvertMono -I..\Ucgui\GUI\Core -I..\Ucgui\GUI\Core -I..\Ucgui\GUI\LCDDriver -I..\Ucgui\GUI\MultiLayer -I..\Ucgui\GUI\Widget -I..\Ucgui\GUI\WM -I..\ExternalDrive\Lcd -I..\ExternalDrive\Touch -I..\Panel -ID:\Keil\ARM\INC -ID:\Keil\ARM\INC\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=.\Obj\widget.crf ..\Ucgui\GUI\Widget\WIDGET.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  _UpdateChildPostions PROC
;;;49     */
;;;50     static void _UpdateChildPostions(WM_HWIN hObj, int Diff) {
000000  b5f8              PUSH     {r3-r7,lr}
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;51       WM_Obj* pObj;
;;;52       WM_LOCK();
000006  f7fffffe          BL       GUI_Lock
;;;53       pObj = (WM_Obj*)WM_H2P(hObj);
00000a  4628              MOV      r0,r5
00000c  f7fffffe          BL       GUI_ALLOC_h2p
000010  4606              MOV      r6,r0
;;;54       WM__UpdateChildPositions(pObj, -Diff, -Diff, Diff, Diff);
000012  4623              MOV      r3,r4
000014  4262              RSBS     r2,r4,#0
000016  4261              RSBS     r1,r4,#0
000018  4630              MOV      r0,r6
00001a  9400              STR      r4,[sp,#0]
00001c  f7fffffe          BL       WM__UpdateChildPositions
;;;55       WM_UNLOCK();
000020  f7fffffe          BL       GUI_Unlock
;;;56     }
000024  bdf8              POP      {r3-r7,pc}
;;;57     
                          ENDP

                  _EffectRequiresRedraw PROC
;;;67     */
;;;68     static int _EffectRequiresRedraw(const WIDGET* pWidget, const GUI_RECT * pRect) {
000026  b57c              PUSH     {r2-r6,lr}
000028  4606              MOV      r6,r0
00002a  460c              MOV      r4,r1
;;;69       int EffectSize = pWidget->pEffect->EffectSize;
00002c  6a30              LDR      r0,[r6,#0x20]
00002e  6945              LDR      r5,[r0,#0x14]
;;;70       GUI_RECT InvalidRect;
;;;71       InvalidRect = pWidget->Win.InvalidRect;
000030  68b0              LDR      r0,[r6,#8]
000032  9000              STR      r0,[sp,#0]
000034  68f0              LDR      r0,[r6,#0xc]
000036  9001              STR      r0,[sp,#4]
;;;72       WM__Client2Screen(&pWidget->Win, &InvalidRect);
000038  4669              MOV      r1,sp
00003a  4630              MOV      r0,r6
00003c  f7fffffe          BL       WM__Client2Screen
;;;73       /* Check if there a part of the effect is inside the invalid rectangle */
;;;74       if ((pRect->x0 + EffectSize) > InvalidRect.x0) {
000040  f9b40000          LDRSH    r0,[r4,#0]
000044  4428              ADD      r0,r0,r5
000046  f9bd1000          LDRSH    r1,[sp,#0]
00004a  4288              CMP      r0,r1
00004c  dd01              BLE      |L1.82|
;;;75         return 1;               /* Overlap ... Drawing required */
00004e  2001              MOVS     r0,#1
                  |L1.80|
;;;76       }
;;;77       if ((pRect->x1 - EffectSize) < InvalidRect.x1) {
;;;78         return 1;               /* Overlap ... Drawing required */
;;;79       }
;;;80       if ((pRect->y0 + EffectSize) > InvalidRect.y0) {
;;;81         return 1;               /* Overlap ... Drawing required */
;;;82       }
;;;83       if ((pRect->y1 - EffectSize) < InvalidRect.y1) {
;;;84         return 1;               /* Overlap ... Drawing required */
;;;85       }
;;;86       return 0;                 /* No overlap ! */
;;;87     }
000050  bd7c              POP      {r2-r6,pc}
                  |L1.82|
000052  f9b40004          LDRSH    r0,[r4,#4]            ;77
000056  1b40              SUBS     r0,r0,r5              ;77
000058  f9bd1004          LDRSH    r1,[sp,#4]            ;77
00005c  4288              CMP      r0,r1                 ;77
00005e  da01              BGE      |L1.100|
000060  2001              MOVS     r0,#1                 ;78
000062  e7f5              B        |L1.80|
                  |L1.100|
000064  f9b40002          LDRSH    r0,[r4,#2]            ;80
000068  4428              ADD      r0,r0,r5              ;80
00006a  f9bd1002          LDRSH    r1,[sp,#2]            ;80
00006e  4288              CMP      r0,r1                 ;80
000070  dd01              BLE      |L1.118|
000072  2001              MOVS     r0,#1                 ;81
000074  e7ec              B        |L1.80|
                  |L1.118|
000076  f9b40006          LDRSH    r0,[r4,#6]            ;83
00007a  1b40              SUBS     r0,r0,r5              ;83
00007c  f9bd1006          LDRSH    r1,[sp,#6]            ;83
000080  4288              CMP      r0,r1                 ;83
000082  da01              BGE      |L1.136|
000084  2001              MOVS     r0,#1                 ;84
000086  e7e3              B        |L1.80|
                  |L1.136|
000088  2000              MOVS     r0,#0                 ;86
00008a  e7e1              B        |L1.80|
;;;88     
                          ENDP

                  WIDGET__RotateRect90 PROC
;;;99     */
;;;100    void WIDGET__RotateRect90(WIDGET* pWidget, GUI_RECT* pDest, const GUI_RECT* pRect) {
00008c  b5f0              PUSH     {r4-r7,lr}
;;;101      int x0, x1, XSize;
;;;102      x0 = pRect->x0;
00008e  f9b25000          LDRSH    r5,[r2,#0]
;;;103      x1 = pRect->x1;
000092  f9b23004          LDRSH    r3,[r2,#4]
;;;104      XSize = pWidget->Win.Rect.x1 - pWidget->Win.Rect.x0;
000096  f9b06004          LDRSH    r6,[r0,#4]
00009a  f9b07000          LDRSH    r7,[r0,#0]
00009e  1bf4              SUBS     r4,r6,r7
;;;105      pDest->x0 = XSize - pRect->y1;
0000a0  88d6              LDRH     r6,[r2,#6]
0000a2  1ba6              SUBS     r6,r4,r6
0000a4  b236              SXTH     r6,r6
0000a6  800e              STRH     r6,[r1,#0]
;;;106      pDest->x1 = XSize - pRect->y0;
0000a8  8856              LDRH     r6,[r2,#2]
0000aa  1ba6              SUBS     r6,r4,r6
0000ac  b236              SXTH     r6,r6
0000ae  808e              STRH     r6,[r1,#4]
;;;107      pDest->y0 = x0;
0000b0  804d              STRH     r5,[r1,#2]
;;;108      pDest->y1 = x1;
0000b2  80cb              STRH     r3,[r1,#6]
;;;109    
;;;110    }
0000b4  bdf0              POP      {r4-r7,pc}
;;;111    
                          ENDP

                  WIDGET__GetClientRect PROC
;;;119    */
;;;120    void WIDGET__GetClientRect(WIDGET* pWidget, GUI_RECT* pRect) {
0000b6  b57c              PUSH     {r2-r6,lr}
0000b8  4605              MOV      r5,r0
0000ba  460c              MOV      r4,r1
;;;121      if (pWidget->State & WIDGET_STATE_VERTICAL) {
0000bc  8ce8              LDRH     r0,[r5,#0x26]
0000be  f0100f08          TST      r0,#8
0000c2  d00f              BEQ      |L1.228|
;;;122        GUI_RECT Rect;
;;;123        WM_GetClientRect(&Rect);
0000c4  4668              MOV      r0,sp
0000c6  f7fffffe          BL       WM_GetClientRect
;;;124        pRect->x0 = Rect.y0;
0000ca  f8bd0002          LDRH     r0,[sp,#2]
0000ce  8020              STRH     r0,[r4,#0]
;;;125        pRect->x1 = Rect.y1;
0000d0  f8bd0006          LDRH     r0,[sp,#6]
0000d4  80a0              STRH     r0,[r4,#4]
;;;126        pRect->y0 = Rect.x0;
0000d6  f8bd0000          LDRH     r0,[sp,#0]
0000da  8060              STRH     r0,[r4,#2]
;;;127        pRect->y1 = Rect.x1;
0000dc  f8bd0004          LDRH     r0,[sp,#4]
0000e0  80e0              STRH     r0,[r4,#6]
;;;128      } else {
0000e2  e002              B        |L1.234|
                  |L1.228|
;;;129        WM_GetClientRect(pRect);
0000e4  4620              MOV      r0,r4
0000e6  f7fffffe          BL       WM_GetClientRect
                  |L1.234|
;;;130      }
;;;131    }
0000ea  bd7c              POP      {r2-r6,pc}
;;;132    
                          ENDP

                  WIDGET__GetBkColor PROC
;;;136    */
;;;137    GUI_COLOR WIDGET__GetBkColor(WM_HWIN hObj) {
0000ec  b570              PUSH     {r4-r6,lr}
0000ee  4605              MOV      r5,r0
;;;138      GUI_COLOR BkColor = WM_GetBkColor(WM_GetParent(hObj));
0000f0  4628              MOV      r0,r5
0000f2  f7fffffe          BL       WM_GetParent
0000f6  4606              MOV      r6,r0
0000f8  f7fffffe          BL       WM_GetBkColor
0000fc  4604              MOV      r4,r0
;;;139      if (BkColor == GUI_INVALID_COLOR) {
0000fe  f06f4070          MVN      r0,#0xf0000000
000102  4284              CMP      r4,r0
000104  d102              BNE      |L1.268|
;;;140        BkColor = DIALOG_GetBkColor();
000106  f7fffffe          BL       DIALOG_GetBkColor
00010a  4604              MOV      r4,r0
                  |L1.268|
;;;141      }
;;;142      return BkColor;
00010c  4620              MOV      r0,r4
;;;143    }
00010e  bd70              POP      {r4-r6,pc}
;;;144    
                          ENDP

                  WIDGET__GetInsideRect PROC
;;;148    */
;;;149    void WIDGET__GetInsideRect(WIDGET* pWidget, GUI_RECT* pRect) {
000110  b570              PUSH     {r4-r6,lr}
000112  4604              MOV      r4,r0
000114  460d              MOV      r5,r1
;;;150      WM__GetClientRectWin(&pWidget->Win, pRect);
000116  4629              MOV      r1,r5
000118  4620              MOV      r0,r4
00011a  f7fffffe          BL       WM__GetClientRectWin
;;;151      GUI__ReduceRect(pRect, pRect, pWidget->pEffect->EffectSize);
00011e  6a20              LDR      r0,[r4,#0x20]
000120  4629              MOV      r1,r5
000122  6942              LDR      r2,[r0,#0x14]
000124  4628              MOV      r0,r5
000126  f7fffffe          BL       GUI__ReduceRect
;;;152    }
00012a  bd70              POP      {r4-r6,pc}
;;;153    
                          ENDP

                  WIDGET__GetXSize PROC
;;;157    */
;;;158    int WIDGET__GetXSize(const WIDGET* pWidget) {
00012c  4601              MOV      r1,r0
;;;159      int r;
;;;160      if (pWidget->State & WIDGET_STATE_VERTICAL) {
00012e  8cc8              LDRH     r0,[r1,#0x26]
000130  f0100f08          TST      r0,#8
000134  d005              BEQ      |L1.322|
;;;161        r = pWidget->Win.Rect.y1 - pWidget->Win.Rect.y0;
000136  f9b10006          LDRSH    r0,[r1,#6]
00013a  f9b13002          LDRSH    r3,[r1,#2]
00013e  1ac2              SUBS     r2,r0,r3
000140  e004              B        |L1.332|
                  |L1.322|
;;;162      } else {
;;;163        r = pWidget->Win.Rect.x1 - pWidget->Win.Rect.x0;
000142  f9b10004          LDRSH    r0,[r1,#4]
000146  f9b13000          LDRSH    r3,[r1,#0]
00014a  1ac2              SUBS     r2,r0,r3
                  |L1.332|
;;;164      }
;;;165      return r + 1;
00014c  1c50              ADDS     r0,r2,#1
;;;166    }
00014e  4770              BX       lr
;;;167    
                          ENDP

                  WIDGET__GetYSize PROC
;;;171    */
;;;172    int WIDGET__GetYSize(const WIDGET* pWidget) {
000150  4601              MOV      r1,r0
;;;173      int r;
;;;174      if (pWidget->State & WIDGET_STATE_VERTICAL) {
000152  8cc8              LDRH     r0,[r1,#0x26]
000154  f0100f08          TST      r0,#8
000158  d005              BEQ      |L1.358|
;;;175        r = pWidget->Win.Rect.x1 - pWidget->Win.Rect.x0;
00015a  f9b10004          LDRSH    r0,[r1,#4]
00015e  f9b13000          LDRSH    r3,[r1,#0]
000162  1ac2              SUBS     r2,r0,r3
000164  e004              B        |L1.368|
                  |L1.358|
;;;176      } else {
;;;177        r = pWidget->Win.Rect.y1 - pWidget->Win.Rect.y0;
000166  f9b10006          LDRSH    r0,[r1,#6]
00016a  f9b13002          LDRSH    r3,[r1,#2]
00016e  1ac2              SUBS     r2,r0,r3
                  |L1.368|
;;;178      }
;;;179      return r + 1;
000170  1c50              ADDS     r0,r2,#1
;;;180    }
000172  4770              BX       lr
;;;181    
                          ENDP

                  WIDGET__GetWindowSizeX PROC
;;;187    */
;;;188    int WIDGET__GetWindowSizeX(WM_HWIN hWin) {
000174  b570              PUSH     {r4-r6,lr}
000176  4604              MOV      r4,r0
;;;189      WIDGET* pWidget = WIDGET_H2P(hWin);
000178  4620              MOV      r0,r4
00017a  f7fffffe          BL       GUI_ALLOC_h2p
00017e  4605              MOV      r5,r0
;;;190      if (pWidget->State & WIDGET_STATE_VERTICAL) {
000180  8ce8              LDRH     r0,[r5,#0x26]
000182  f0100f08          TST      r0,#8
000186  d003              BEQ      |L1.400|
;;;191        return WM_GetWindowSizeY(hWin);
000188  4620              MOV      r0,r4
00018a  f7fffffe          BL       WM_GetWindowSizeY
                  |L1.398|
;;;192      } else {
;;;193        return WM_GetWindowSizeX(hWin);
;;;194      }
;;;195    }
00018e  bd70              POP      {r4-r6,pc}
                  |L1.400|
000190  4620              MOV      r0,r4                 ;193
000192  f7fffffe          BL       WM_GetWindowSizeX
000196  e7fa              B        |L1.398|
;;;196    
                          ENDP

                  WIDGET_SetState PROC
;;;200    */
;;;201    void WIDGET_SetState(WM_HWIN hObj, int State) {
000198  b570              PUSH     {r4-r6,lr}
00019a  4606              MOV      r6,r0
00019c  460c              MOV      r4,r1
;;;202      WIDGET* pWidget;
;;;203      WM_LOCK();
00019e  f7fffffe          BL       GUI_Lock
;;;204      pWidget = WIDGET_H2P(hObj);
0001a2  4630              MOV      r0,r6
0001a4  f7fffffe          BL       GUI_ALLOC_h2p
0001a8  4605              MOV      r5,r0
;;;205      if (State != pWidget->State) {
0001aa  8ce8              LDRH     r0,[r5,#0x26]
0001ac  42a0              CMP      r0,r4
0001ae  d003              BEQ      |L1.440|
;;;206        pWidget->State = State;
0001b0  84ec              STRH     r4,[r5,#0x26]
;;;207        WM_Invalidate(hObj);
0001b2  4630              MOV      r0,r6
0001b4  f7fffffe          BL       WM_InvalidateWindow
                  |L1.440|
;;;208      }
;;;209      WM_UNLOCK();
0001b8  f7fffffe          BL       GUI_Unlock
;;;210    }
0001bc  bd70              POP      {r4-r6,pc}
;;;211    
                          ENDP

                  WIDGET_GetState PROC
;;;215    */
;;;216    int WIDGET_GetState(WM_HWIN hObj) {
0001be  b570              PUSH     {r4-r6,lr}
0001c0  4604              MOV      r4,r0
;;;217      int Ret = 0;
0001c2  2600              MOVS     r6,#0
;;;218      WIDGET * pWidget;
;;;219      if (hObj) {
0001c4  b144              CBZ      r4,|L1.472|
;;;220        WM_LOCK();
0001c6  f7fffffe          BL       GUI_Lock
;;;221        pWidget = WIDGET_H2P(hObj);
0001ca  4620              MOV      r0,r4
0001cc  f7fffffe          BL       GUI_ALLOC_h2p
0001d0  4605              MOV      r5,r0
;;;222        Ret = pWidget->State;
0001d2  8cee              LDRH     r6,[r5,#0x26]
;;;223        WM_UNLOCK();
0001d4  f7fffffe          BL       GUI_Unlock
                  |L1.472|
;;;224      }
;;;225      return Ret;
0001d8  4630              MOV      r0,r6
;;;226    }
0001da  bd70              POP      {r4-r6,pc}
;;;227    
                          ENDP

                  WIDGET_OrState PROC
;;;231    */
;;;232    void WIDGET_OrState(WM_HWIN hObj, int State) {
0001dc  b570              PUSH     {r4-r6,lr}
0001de  4606              MOV      r6,r0
0001e0  460c              MOV      r4,r1
;;;233      if (hObj) {
0001e2  b196              CBZ      r6,|L1.522|
;;;234        WIDGET* pWidget;
;;;235        WM_LOCK();
0001e4  f7fffffe          BL       GUI_Lock
;;;236        pWidget = WIDGET_H2P(hObj);
0001e8  4630              MOV      r0,r6
0001ea  f7fffffe          BL       GUI_ALLOC_h2p
0001ee  4605              MOV      r5,r0
;;;237        if (State != (pWidget->State & State)) {
0001f0  8ce8              LDRH     r0,[r5,#0x26]
0001f2  4020              ANDS     r0,r0,r4
0001f4  42a0              CMP      r0,r4
0001f6  d005              BEQ      |L1.516|
;;;238          pWidget->State |= State;
0001f8  8ce8              LDRH     r0,[r5,#0x26]
0001fa  4320              ORRS     r0,r0,r4
0001fc  84e8              STRH     r0,[r5,#0x26]
;;;239          WM_Invalidate(hObj);
0001fe  4630              MOV      r0,r6
000200  f7fffffe          BL       WM_InvalidateWindow
                  |L1.516|
;;;240        }
;;;241        WM_UNLOCK();
000204  f7fffffe          BL       GUI_Unlock
;;;242      }
000208  bf00              NOP      
                  |L1.522|
;;;243    }
00020a  bd70              POP      {r4-r6,pc}
;;;244    
                          ENDP

                  WIDGET_AndState PROC
;;;255    */
;;;256    void WIDGET_AndState(WM_HWIN hObj, int Mask) {
00020c  e92d41f0          PUSH     {r4-r8,lr}
000210  4606              MOV      r6,r0
000212  460f              MOV      r7,r1
;;;257      U16 StateNew;
;;;258      if (hObj) {
000214  b196              CBZ      r6,|L1.572|
;;;259        WIDGET* pWidget;
;;;260        WM_LOCK();
000216  f7fffffe          BL       GUI_Lock
;;;261        pWidget = WIDGET_H2P(hObj);
00021a  4630              MOV      r0,r6
00021c  f7fffffe          BL       GUI_ALLOC_h2p
000220  4605              MOV      r5,r0
;;;262        StateNew = pWidget->State & (~Mask);
000222  8ce8              LDRH     r0,[r5,#0x26]
000224  ea200407          BIC      r4,r0,r7
;;;263        if (pWidget->State != StateNew) {
000228  8ce8              LDRH     r0,[r5,#0x26]
00022a  42a0              CMP      r0,r4
00022c  d003              BEQ      |L1.566|
;;;264          pWidget->State = StateNew;
00022e  84ec              STRH     r4,[r5,#0x26]
;;;265          WM_Invalidate(hObj);
000230  4630              MOV      r0,r6
000232  f7fffffe          BL       WM_InvalidateWindow
                  |L1.566|
;;;266        }
;;;267        WM_UNLOCK();
000236  f7fffffe          BL       GUI_Unlock
;;;268      }
00023a  bf00              NOP      
                  |L1.572|
;;;269    }
00023c  e8bd81f0          POP      {r4-r8,pc}
;;;270    
                          ENDP

                  WIDGET__Init PROC
;;;274    */
;;;275    void WIDGET__Init(WIDGET* pWidget, int Id, U16 State) {
000240  4b97              LDR      r3,|L1.1184|
;;;276      pWidget->pEffect       = _pEffectDefault;
000242  681b              LDR      r3,[r3,#0]  ; _pEffectDefault
000244  6203              STR      r3,[r0,#0x20]
;;;277      pWidget->State         = State;
000246  84c2              STRH     r2,[r0,#0x26]
;;;278      pWidget->Id            = Id;
000248  b20b              SXTH     r3,r1
00024a  8483              STRH     r3,[r0,#0x24]
;;;279    }
00024c  4770              BX       lr
;;;280    
                          ENDP

                  WIDGET_HandleActive PROC
;;;285    */
;;;286    int WIDGET_HandleActive(WM_HWIN hObj, WM_MESSAGE* pMsg) {
00024e  e92d47f0          PUSH     {r4-r10,lr}
000252  4681              MOV      r9,r0
000254  460c              MOV      r4,r1
;;;287      int Diff, Notification;
;;;288      WIDGET* pWidget = WIDGET_H2P(hObj);
000256  4648              MOV      r0,r9
000258  f7fffffe          BL       GUI_ALLOC_h2p
00025c  4605              MOV      r5,r0
;;;289      switch (pMsg->MsgId) {
00025e  6820              LDR      r0,[r4,#0]
000260  2816              CMP      r0,#0x16
000262  d044              BEQ      |L1.750|
000264  dc08              BGT      |L1.632|
000266  280d              CMP      r0,#0xd
000268  d031              BEQ      |L1.718|
00026a  2811              CMP      r0,#0x11
00026c  d021              BEQ      |L1.690|
00026e  2814              CMP      r0,#0x14
000270  d061              BEQ      |L1.822|
000272  2815              CMP      r0,#0x15
000274  d165              BNE      |L1.834|
000276  e017              B        |L1.680|
                  |L1.632|
000278  281f              CMP      r0,#0x1f
00027a  d03d              BEQ      |L1.760|
00027c  2820              CMP      r0,#0x20
00027e  d054              BEQ      |L1.810|
000280  f5b07f40          CMP      r0,#0x300
000284  d15d              BNE      |L1.834|
;;;290      case WM_WIDGET_SET_EFFECT:
;;;291        Diff = pWidget->pEffect->EffectSize;
000286  6a28              LDR      r0,[r5,#0x20]
000288  6947              LDR      r7,[r0,#0x14]
;;;292        pWidget->pEffect = (const WIDGET_EFFECT*)pMsg->Data.p;
00028a  68a0              LDR      r0,[r4,#8]
00028c  6228              STR      r0,[r5,#0x20]
;;;293        Diff -= pWidget->pEffect->EffectSize;
00028e  6a28              LDR      r0,[r5,#0x20]
000290  6940              LDR      r0,[r0,#0x14]
000292  1a3f              SUBS     r7,r7,r0
;;;294        _UpdateChildPostions(hObj, Diff);
000294  4639              MOV      r1,r7
000296  4648              MOV      r0,r9
000298  f7fffffe          BL       _UpdateChildPostions
;;;295        WM_InvalidateWindow(hObj);
00029c  4648              MOV      r0,r9
00029e  f7fffffe          BL       WM_InvalidateWindow
;;;296        return 0;                        /* Message handled -> Return */
0002a2  2000              MOVS     r0,#0
                  |L1.676|
;;;297      case WM_GET_ID:
;;;298        pMsg->Data.v = pWidget->Id;
;;;299        return 0;                        /* Message handled -> Return */
;;;300      case WM_PID_STATE_CHANGED:
;;;301        if (pWidget->State & WIDGET_STATE_FOCUSSABLE) {
;;;302          const WM_PID_STATE_CHANGED_INFO * pInfo = (const WM_PID_STATE_CHANGED_INFO*)pMsg->Data.p;
;;;303          if (pInfo->State) {
;;;304            WM_SetFocus(hObj);
;;;305          }
;;;306        }
;;;307        break;
;;;308      case WM_TOUCH_CHILD:
;;;309        /* A descendent (child) has been touched or released.
;;;310           If it has been touched, we need to get to top.
;;;311         */
;;;312        {
;;;313          const WM_MESSAGE * pMsgOrg;
;;;314          const GUI_PID_STATE * pState;
;;;315          pMsgOrg = (const WM_MESSAGE*)pMsg->Data.p;      /* The original touch message */
;;;316          pState = (const GUI_PID_STATE*)pMsgOrg->Data.p;
;;;317          if (pState) {          /* Message may not have a valid pointer (moved out) ! */
;;;318            if (pState->Pressed) {
;;;319              WM_BringToTop(hObj);
;;;320              return 0;                    /* Message handled -> Return */
;;;321            }
;;;322          }
;;;323        }
;;;324        break;
;;;325      case WM_SET_ID:
;;;326        pWidget->Id = pMsg->Data.v;
;;;327        return 0;                        /* Message handled -> Return */
;;;328      case WM_SET_FOCUS:
;;;329        if (pMsg->Data.v == 1) {
;;;330          WIDGET_SetState(hObj, pWidget->State |  WIDGET_STATE_FOCUS);
;;;331          Notification = WM_NOTIFICATION_GOT_FOCUS;
;;;332        } else {
;;;333          WIDGET_SetState(hObj, pWidget->State & ~WIDGET_STATE_FOCUS);
;;;334          Notification = WM_NOTIFICATION_LOST_FOCUS;
;;;335        }
;;;336        WM_NotifyParent(hObj, Notification);
;;;337        pMsg->Data.v = 0;   /* Focus change accepted */
;;;338        return 0;
;;;339      case WM_GET_ACCEPT_FOCUS:
;;;340        pMsg->Data.v = (pWidget->State & WIDGET_STATE_FOCUSSABLE) ? 1 : 0;               /* Can handle focus */
;;;341        return 0;                         /* Message handled */
;;;342      case WM_GET_INSIDE_RECT:
;;;343        WIDGET__GetInsideRect(pWidget, (GUI_RECT*)pMsg->Data.p);
;;;344        return 0;                         /* Message handled */
;;;345      }
;;;346      return 1;                           /* Message NOT handled */
;;;347    }
0002a4  e8bd87f0          POP      {r4-r10,pc}
                  |L1.680|
0002a8  f9b50024          LDRSH    r0,[r5,#0x24]         ;298
0002ac  60a0              STR      r0,[r4,#8]            ;298
0002ae  2000              MOVS     r0,#0                 ;299
0002b0  e7f8              B        |L1.676|
                  |L1.690|
0002b2  8ce8              LDRH     r0,[r5,#0x26]         ;301
0002b4  f0100f10          TST      r0,#0x10              ;301
0002b8  d008              BEQ      |L1.716|
0002ba  f8d48008          LDR      r8,[r4,#8]            ;302
0002be  f8980008          LDRB     r0,[r8,#8]            ;303
0002c2  b110              CBZ      r0,|L1.714|
0002c4  4648              MOV      r0,r9                 ;304
0002c6  f7fffffe          BL       WM_SetFocus
                  |L1.714|
0002ca  bf00              NOP                            ;306
                  |L1.716|
0002cc  e039              B        |L1.834|
                  |L1.718|
0002ce  f8d4a008          LDR      r10,[r4,#8]           ;315
0002d2  f8da8008          LDR      r8,[r10,#8]           ;316
0002d6  f1b80f00          CMP      r8,#0                 ;317
0002da  d007              BEQ      |L1.748|
0002dc  f8980008          LDRB     r0,[r8,#8]            ;318
0002e0  b120              CBZ      r0,|L1.748|
0002e2  4648              MOV      r0,r9                 ;319
0002e4  f7fffffe          BL       WM_BringToTop
0002e8  2000              MOVS     r0,#0                 ;320
0002ea  e7db              B        |L1.676|
                  |L1.748|
0002ec  e029              B        |L1.834|
                  |L1.750|
0002ee  68a0              LDR      r0,[r4,#8]            ;326
0002f0  b200              SXTH     r0,r0                 ;326
0002f2  84a8              STRH     r0,[r5,#0x24]         ;326
0002f4  2000              MOVS     r0,#0                 ;327
0002f6  e7d5              B        |L1.676|
                  |L1.760|
0002f8  68a0              LDR      r0,[r4,#8]            ;329
0002fa  2801              CMP      r0,#1                 ;329
0002fc  d107              BNE      |L1.782|
0002fe  8ce8              LDRH     r0,[r5,#0x26]         ;330
000300  f0400101          ORR      r1,r0,#1              ;330
000304  4648              MOV      r0,r9                 ;330
000306  f7fffffe          BL       WIDGET_SetState
00030a  2608              MOVS     r6,#8                 ;331
00030c  e006              B        |L1.796|
                  |L1.782|
00030e  8ce8              LDRH     r0,[r5,#0x26]         ;333
000310  f0200101          BIC      r1,r0,#1              ;333
000314  4648              MOV      r0,r9                 ;333
000316  f7fffffe          BL       WIDGET_SetState
00031a  2609              MOVS     r6,#9                 ;334
                  |L1.796|
00031c  4631              MOV      r1,r6                 ;336
00031e  4648              MOV      r0,r9                 ;336
000320  f7fffffe          BL       WM_NotifyParent
000324  2000              MOVS     r0,#0                 ;337
000326  60a0              STR      r0,[r4,#8]            ;337
000328  e7bc              B        |L1.676|
                  |L1.810|
00032a  8ce8              LDRH     r0,[r5,#0x26]         ;340
00032c  f3c01000          UBFX     r0,r0,#4,#1           ;340
000330  60a0              STR      r0,[r4,#8]            ;340
000332  2000              MOVS     r0,#0                 ;341
000334  e7b6              B        |L1.676|
                  |L1.822|
000336  4628              MOV      r0,r5                 ;343
000338  68a1              LDR      r1,[r4,#8]            ;343
00033a  f7fffffe          BL       WIDGET__GetInsideRect
00033e  2000              MOVS     r0,#0                 ;344
000340  e7b0              B        |L1.676|
                  |L1.834|
000342  bf00              NOP                            ;307
000344  2001              MOVS     r0,#1                 ;346
000346  e7ad              B        |L1.676|
;;;348    
                          ENDP

                  WIDGET__SetScrollState PROC
;;;352    */
;;;353    void WIDGET__SetScrollState(WM_HWIN hWin, const WM_SCROLL_STATE* pVState, const WM_SCROLL_STATE* pHState) {
000348  e92d41f0          PUSH     {r4-r8,lr}
00034c  4605              MOV      r5,r0
00034e  460e              MOV      r6,r1
000350  4614              MOV      r4,r2
;;;354      WM_HWIN hScroll;
;;;355      /* vertical scrollbar */
;;;356      hScroll = WM_GetDialogItem(hWin, GUI_ID_VSCROLL);
000352  21fe              MOVS     r1,#0xfe
000354  4628              MOV      r0,r5
000356  f7fffffe          BL       WM_GetDialogItem
00035a  4607              MOV      r7,r0
;;;357      WM_SetScrollState(hScroll, pVState);
00035c  4631              MOV      r1,r6
00035e  4638              MOV      r0,r7
000360  f7fffffe          BL       WM_SetScrollState
;;;358      /* horizontal scrollbar */
;;;359      hScroll = WM_GetDialogItem(hWin, GUI_ID_HSCROLL);
000364  21ff              MOVS     r1,#0xff
000366  4628              MOV      r0,r5
000368  f7fffffe          BL       WM_GetDialogItem
00036c  4607              MOV      r7,r0
;;;360      WM_SetScrollState(hScroll, pHState);
00036e  4621              MOV      r1,r4
000370  4638              MOV      r0,r7
000372  f7fffffe          BL       WM_SetScrollState
;;;361    }
000376  e8bd81f0          POP      {r4-r8,pc}
;;;362    
                          ENDP

                  WIDGET__DrawFocusRect PROC
;;;366    */
;;;367    void WIDGET__DrawFocusRect(WIDGET* pWidget, const GUI_RECT* pRect, int Dist) {
00037a  b57c              PUSH     {r2-r6,lr}
00037c  4606              MOV      r6,r0
00037e  460c              MOV      r4,r1
000380  4615              MOV      r5,r2
;;;368      GUI_RECT Rect;
;;;369      if (pWidget->State & WIDGET_STATE_VERTICAL) {
000382  8cf0              LDRH     r0,[r6,#0x26]
000384  f0100f08          TST      r0,#8
000388  d005              BEQ      |L1.918|
;;;370        WIDGET__RotateRect90(pWidget, &Rect, pRect);
00038a  4622              MOV      r2,r4
00038c  4669              MOV      r1,sp
00038e  4630              MOV      r0,r6
000390  f7fffffe          BL       WIDGET__RotateRect90
;;;371        pRect = &Rect;
000394  466c              MOV      r4,sp
                  |L1.918|
;;;372      }
;;;373      GUI_DrawFocusRect(pRect, Dist);
000396  4629              MOV      r1,r5
000398  4620              MOV      r0,r4
00039a  f7fffffe          BL       GUI_DrawFocusRect
;;;374    }
00039e  bd7c              POP      {r2-r6,pc}
;;;375    
                          ENDP

                  WIDGET__DrawVLine PROC
;;;379    */
;;;380    void WIDGET__DrawVLine(WIDGET* pWidget, int x, int y0, int y1) {
0003a0  e92d41ff          PUSH     {r0-r8,lr}
0003a4  4607              MOV      r7,r0
0003a6  460c              MOV      r4,r1
0003a8  4615              MOV      r5,r2
0003aa  461e              MOV      r6,r3
;;;381      if (pWidget->State & WIDGET_STATE_VERTICAL) {
0003ac  8cf8              LDRH     r0,[r7,#0x26]
0003ae  f0100f08          TST      r0,#8
0003b2  d019              BEQ      |L1.1000|
;;;382        GUI_RECT r0, r1;
;;;383        r0.x0 = x;
0003b4  b220              SXTH     r0,r4
0003b6  f8ad0008          STRH     r0,[sp,#8]
;;;384        r0.x1 = x;
0003ba  b220              SXTH     r0,r4
0003bc  f8ad000c          STRH     r0,[sp,#0xc]
;;;385        r0.y0 = y0;
0003c0  b228              SXTH     r0,r5
0003c2  f8ad000a          STRH     r0,[sp,#0xa]
;;;386        r0.y1 = y1;
0003c6  b230              SXTH     r0,r6
0003c8  f8ad000e          STRH     r0,[sp,#0xe]
;;;387        WIDGET__RotateRect90(pWidget, &r1, &r0);
0003cc  aa02              ADD      r2,sp,#8
0003ce  4669              MOV      r1,sp
0003d0  4638              MOV      r0,r7
0003d2  f7fffffe          BL       WIDGET__RotateRect90
;;;388        GUI_DrawHLine(r1.y0, r1.x0, r1.x1);
0003d6  f9bd2004          LDRSH    r2,[sp,#4]
0003da  f9bd1000          LDRSH    r1,[sp,#0]
0003de  f9bd0002          LDRSH    r0,[sp,#2]
0003e2  f7fffffe          BL       GUI_DrawHLine
;;;389      } else {
0003e6  e004              B        |L1.1010|
                  |L1.1000|
;;;390        GUI_DrawVLine(x, y0, y1);
0003e8  4632              MOV      r2,r6
0003ea  4629              MOV      r1,r5
0003ec  4620              MOV      r0,r4
0003ee  f7fffffe          BL       GUI_DrawVLine
                  |L1.1010|
;;;391      }
;;;392    }
0003f2  e8bd81ff          POP      {r0-r8,pc}
;;;393    
                          ENDP

                  WIDGET__FillRectEx PROC
;;;397    */
;;;398    void WIDGET__FillRectEx(WIDGET* pWidget, const GUI_RECT* pRect) {
0003f6  b57c              PUSH     {r2-r6,lr}
0003f8  4605              MOV      r5,r0
0003fa  460c              MOV      r4,r1
;;;399      if (pWidget->State & WIDGET_STATE_VERTICAL) {
0003fc  8ce8              LDRH     r0,[r5,#0x26]
0003fe  f0100f08          TST      r0,#8
000402  d006              BEQ      |L1.1042|
;;;400        GUI_RECT r;
;;;401        WIDGET__RotateRect90(pWidget, &r, pRect);
000404  4622              MOV      r2,r4
000406  4669              MOV      r1,sp
000408  4628              MOV      r0,r5
00040a  f7fffffe          BL       WIDGET__RotateRect90
;;;402        pRect = &r;
00040e  466c              MOV      r4,sp
;;;403      }
000410  bf00              NOP      
                  |L1.1042|
;;;404      GUI_FillRectEx(pRect);
000412  4620              MOV      r0,r4
000414  f7fffffe          BL       GUI_FillRectEx
;;;405    }
000418  bd7c              POP      {r2-r6,pc}
;;;406    
                          ENDP

                  WIDGET__EFFECT_DrawDownRect PROC
;;;410    */
;;;411    void WIDGET__EFFECT_DrawDownRect(WIDGET* pWidget, GUI_RECT* pRect) {
00041a  b57c              PUSH     {r2-r6,lr}
00041c  4605              MOV      r5,r0
00041e  460c              MOV      r4,r1
;;;412      GUI_RECT Rect;
;;;413      if (pRect == NULL) {
000420  b91c              CBNZ     r4,|L1.1066|
;;;414        WM_GetClientRect(&Rect);
000422  4668              MOV      r0,sp
000424  f7fffffe          BL       WM_GetClientRect
;;;415        pRect = &Rect;
000428  466c              MOV      r4,sp
                  |L1.1066|
;;;416      }
;;;417      if (pWidget->State & WIDGET_STATE_VERTICAL) {
00042a  8ce8              LDRH     r0,[r5,#0x26]
00042c  f0100f08          TST      r0,#8
000430  d005              BEQ      |L1.1086|
;;;418        WIDGET__RotateRect90(pWidget, &Rect, pRect);
000432  4622              MOV      r2,r4
000434  4669              MOV      r1,sp
000436  4628              MOV      r0,r5
000438  f7fffffe          BL       WIDGET__RotateRect90
;;;419        pRect = &Rect;
00043c  466c              MOV      r4,sp
                  |L1.1086|
;;;420      }
;;;421      if (_EffectRequiresRedraw(pWidget, pRect)) {
00043e  4621              MOV      r1,r4
000440  4628              MOV      r0,r5
000442  f7fffffe          BL       _EffectRequiresRedraw
000446  b118              CBZ      r0,|L1.1104|
;;;422        pWidget->pEffect->pfDrawDownRect(pRect);
000448  6a28              LDR      r0,[r5,#0x20]
00044a  68c1              LDR      r1,[r0,#0xc]
00044c  4620              MOV      r0,r4
00044e  4788              BLX      r1
                  |L1.1104|
;;;423      }
;;;424    }
000450  bd7c              POP      {r2-r6,pc}
;;;425    
                          ENDP

                  WIDGET__EFFECT_DrawDown PROC
;;;429    */
;;;430    void WIDGET__EFFECT_DrawDown(WIDGET* pWidget) {
000452  b510              PUSH     {r4,lr}
000454  4604              MOV      r4,r0
;;;431      WIDGET__EFFECT_DrawDownRect(pWidget, NULL);
000456  2100              MOVS     r1,#0
000458  4620              MOV      r0,r4
00045a  f7fffffe          BL       WIDGET__EFFECT_DrawDownRect
;;;432    }
00045e  bd10              POP      {r4,pc}
;;;433    
                          ENDP

                  WIDGET__EFFECT_DrawUpRect PROC
;;;437    */
;;;438    void WIDGET__EFFECT_DrawUpRect(WIDGET* pWidget, GUI_RECT* pRect) {
000460  b57c              PUSH     {r2-r6,lr}
000462  4604              MOV      r4,r0
000464  460d              MOV      r5,r1
;;;439      GUI_RECT Rect;
;;;440      if (pWidget->State & WIDGET_STATE_VERTICAL) {
000466  8ce0              LDRH     r0,[r4,#0x26]
000468  f0100f08          TST      r0,#8
00046c  d005              BEQ      |L1.1146|
;;;441        WIDGET__RotateRect90(pWidget, &Rect, pRect);
00046e  462a              MOV      r2,r5
000470  4669              MOV      r1,sp
000472  4620              MOV      r0,r4
000474  f7fffffe          BL       WIDGET__RotateRect90
;;;442        pRect = &Rect;
000478  466d              MOV      r5,sp
                  |L1.1146|
;;;443      }
;;;444      if (_EffectRequiresRedraw(pWidget, pRect)) {
00047a  4629              MOV      r1,r5
00047c  4620              MOV      r0,r4
00047e  f7fffffe          BL       _EffectRequiresRedraw
000482  b118              CBZ      r0,|L1.1164|
;;;445        pWidget->pEffect->pfDrawUpRect(pRect);
000484  6a20              LDR      r0,[r4,#0x20]
000486  6881              LDR      r1,[r0,#8]
000488  4628              MOV      r0,r5
00048a  4788              BLX      r1
                  |L1.1164|
;;;446      }
;;;447    }
00048c  bd7c              POP      {r2-r6,pc}
;;;448    
                          ENDP

                  WIDGET_SetDefaultEffect PROC
;;;452    */
;;;453    const WIDGET_EFFECT* WIDGET_SetDefaultEffect(const WIDGET_EFFECT* pEffect) {
00048e  4601              MOV      r1,r0
;;;454      const WIDGET_EFFECT* r;
;;;455      r = _pEffectDefault;
000490  4a03              LDR      r2,|L1.1184|
000492  6810              LDR      r0,[r2,#0]  ; _pEffectDefault
;;;456      _pEffectDefault = pEffect;
000494  6011              STR      r1,[r2,#0]  ; _pEffectDefault
;;;457      return r;
;;;458    }
000496  4770              BX       lr
;;;459    
                          ENDP

                  WIDGET_GetDefaultEffect PROC
;;;463    */
;;;464    const WIDGET_EFFECT*  WIDGET_GetDefaultEffect(void) {
000498  4801              LDR      r0,|L1.1184|
;;;465      return _pEffectDefault;
00049a  6800              LDR      r0,[r0,#0]  ; _pEffectDefault
;;;466    }
00049c  4770              BX       lr
;;;467    
                          ENDP

00049e  0000              DCW      0x0000
                  |L1.1184|
                          DCD      _pEffectDefault

                          AREA ||.data||, DATA, ALIGN=2

                  _pEffectDefault
                          DCD      WIDGET_Effect_3D
