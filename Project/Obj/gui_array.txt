; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [--debug -c --asm --interleave -o.\Obj\gui_array.o --depend=.\Obj\gui_array.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\Libraries\CMSIS\CM3\CoreSupport -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x\startup\arm -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\User -I..\BaseDrive -I..\Ucosii -I..\Ucosii\Port -I..\Ucosii\Src -I..\Ucosii\Include -I..\Ucgui -I..\Ucgui\Config -I..\Ucgui\GUI_X -I..\Ucgui\GUI -I..\Ucgui\GUI\ConvertColor -I..\Ucgui\GUI\ConvertMono -I..\Ucgui\GUI\Core -I..\Ucgui\GUI\Core -I..\Ucgui\GUI\LCDDriver -I..\Ucgui\GUI\MultiLayer -I..\Ucgui\GUI\Widget -I..\Ucgui\GUI\WM -I..\ExternalDrive\Lcd -I..\ExternalDrive\Touch -I..\Panel -ID:\Keil\ARM\INC -ID:\Keil\ARM\INC\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=.\Obj\gui_array.crf ..\Ucgui\GUI\Widget\GUI_ARRAY.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=1

                  GUI_ARRAY_GetNumItems PROC
;;;34     */
;;;35     unsigned int GUI_ARRAY_GetNumItems(const GUI_ARRAY* pThis) {
000000  4601              MOV      r1,r0
;;;36       GUI_ARRAY_CHECK(pThis);    /* Sanity checks at higher debug levels only */
;;;37     
;;;38       return pThis->NumItems;
000002  8808              LDRH     r0,[r1,#0]
;;;39     }
000004  4770              BX       lr
;;;40     
                          ENDP

                  GUI_ARRAY_AddItem PROC
;;;55     */
;;;56     int GUI_ARRAY_AddItem(GUI_ARRAY* pThis, const void *pNew, int Len) {
000006  e92d5ff0          PUSH     {r4-r12,lr}
00000a  4604              MOV      r4,r0
00000c  4688              MOV      r8,r1
00000e  4616              MOV      r6,r2
;;;57       WM_HMEM hNewItem = 0;
000010  f04f0900          MOV      r9,#0
;;;58       WM_HMEM hNewBuffer;
;;;59       WM_HMEM *pNewBuffer;
;;;60       int r = 0;
000014  46ca              MOV      r10,r9
;;;61     
;;;62       GUI_ARRAY_CHECK(pThis);    /* Sanity checks at higher debug levels only */
;;;63     
;;;64       WM_LOCK();
000016  f7fffffe          BL       GUI_Lock
;;;65       /* Alloc memory for new item */
;;;66       if (Len) {
00001a  b146              CBZ      r6,|L1.46|
;;;67         if ((hNewItem = GUI_ALLOC_AllocInit(pNew, Len)) == 0) {
00001c  b231              SXTH     r1,r6
00001e  4640              MOV      r0,r8
000020  f7fffffe          BL       GUI_ALLOC_AllocInit
000024  ea5f0900          MOVS     r9,r0
000028  d101              BNE      |L1.46|
;;;68           GUI_DEBUG_ERROROUT("GUI_ARRAY_AddItem failed to alloc buffer");
;;;69           r = 1;            /* Error */
00002a  f04f0a01          MOV      r10,#1
                  |L1.46|
;;;70         }
;;;71       }
;;;72       /* Put handle of new item into the array */
;;;73       if (r == 0) {
00002e  f1ba0f00          CMP      r10,#0
000032  d11b              BNE      |L1.108|
;;;74         int NumItems;
;;;75         NumItems = pThis->NumItems;
000034  f8b4b000          LDRH     r11,[r4,#0]
;;;76         /* Add the handle to new item to the buffer */
;;;77         hNewBuffer = GUI_ALLOC_Realloc(pThis->haHandle, (NumItems + 1) * sizeof(WM_HMEM));
000038  f10b0201          ADD      r2,r11,#1
00003c  0051              LSLS     r1,r2,#1
00003e  f9b40002          LDRSH    r0,[r4,#2]
000042  f7fffffe          BL       GUI_ALLOC_Realloc
000046  4605              MOV      r5,r0
;;;78         if (hNewBuffer == 0) {
000048  b92d              CBNZ     r5,|L1.86|
;;;79           GUI_DEBUG_ERROROUT("GUI_ARRAY_AddItem failed to alloc buffer");
;;;80           GUI_ALLOC_Free(hNewItem);
00004a  4648              MOV      r0,r9
00004c  f7fffffe          BL       GUI_ALLOC_Free
;;;81           r = 1;            /* Error */
000050  f04f0a01          MOV      r10,#1
000054  e009              B        |L1.106|
                  |L1.86|
;;;82         } else {
;;;83           pNewBuffer = (WM_HMEM*) GUI_ALLOC_h2p(hNewBuffer);
000056  4628              MOV      r0,r5
000058  f7fffffe          BL       GUI_ALLOC_h2p
00005c  4607              MOV      r7,r0
;;;84           *(pNewBuffer + NumItems) = hNewItem;
00005e  f827901b          STRH     r9,[r7,r11,LSL #1]
;;;85           pThis->haHandle = hNewBuffer;
000062  8065              STRH     r5,[r4,#2]
;;;86           pThis->NumItems++;
000064  8820              LDRH     r0,[r4,#0]
000066  1c40              ADDS     r0,r0,#1
000068  8020              STRH     r0,[r4,#0]
                  |L1.106|
;;;87         }
;;;88       }
00006a  bf00              NOP      
                  |L1.108|
;;;89       WM_UNLOCK();
00006c  f7fffffe          BL       GUI_Unlock
;;;90       return r;
000070  4650              MOV      r0,r10
;;;91     }
000072  e8bd9ff0          POP      {r4-r12,pc}
;;;92     
                          ENDP

                  GUI_ARRAY_Delete PROC
;;;103    */
;;;104    void GUI_ARRAY_Delete(GUI_ARRAY* pThis) {
000076  e92d41f0          PUSH     {r4-r8,lr}
00007a  4604              MOV      r4,r0
;;;105      int i;
;;;106      WM_HMEM ha;
;;;107      WM_HMEM* pa;
;;;108    
;;;109      GUI_ARRAY_CHECK(pThis);    /* Sanity checks at higher debug levels only */
;;;110    
;;;111      ha = pThis->haHandle;
00007c  f9b47002          LDRSH    r7,[r4,#2]
;;;112      if (ha) {
000080  b197              CBZ      r7,|L1.168|
;;;113        pa = (WM_HMEM*) GUI_ALLOC_h2p(ha);
000082  4638              MOV      r0,r7
000084  f7fffffe          BL       GUI_ALLOC_h2p
000088  4606              MOV      r6,r0
;;;114        /* Free the attached items, one at a time */
;;;115        for (i = 0; i < pThis->NumItems; i++) {
00008a  2500              MOVS     r5,#0
00008c  e004              B        |L1.152|
                  |L1.142|
;;;116          GUI_ALLOC_FreePtr(pa+i);
00008e  eb060045          ADD      r0,r6,r5,LSL #1
000092  f7fffffe          BL       GUI_ALLOC_FreePtr
000096  1c6d              ADDS     r5,r5,#1              ;115
                  |L1.152|
000098  8820              LDRH     r0,[r4,#0]            ;115
00009a  42a8              CMP      r0,r5                 ;115
00009c  dcf7              BGT      |L1.142|
;;;117        }
;;;118        /* Free the handle buffer */
;;;119        GUI_ALLOC_FreePtr(&pThis->haHandle);
00009e  1ca0              ADDS     r0,r4,#2
0000a0  f7fffffe          BL       GUI_ALLOC_FreePtr
;;;120        pThis->NumItems = 0;                    /* For safety, in case the array is used after it has been deleted */
0000a4  2000              MOVS     r0,#0
0000a6  8020              STRH     r0,[r4,#0]
                  |L1.168|
;;;121      }
;;;122      #if GUI_DEBUG_LEVEL >= GUI_DEBUG_LEVEL_CHECK_ALL
;;;123        pThis->InitState = GUI_ARRAY_STATE_DELETED;
;;;124      #endif
;;;125    }
0000a8  e8bd81f0          POP      {r4-r8,pc}
;;;126    
                          ENDP

                  GUI_ARRAY_SethItem PROC
;;;145    */
;;;146    int GUI_ARRAY_SethItem(GUI_ARRAY* pThis, unsigned int Index, WM_HMEM hItem) {
0000ac  e92d47f0          PUSH     {r4-r10,lr}
0000b0  4604              MOV      r4,r0
0000b2  460d              MOV      r5,r1
0000b4  4690              MOV      r8,r2
;;;147      WM_HMEM ha;
;;;148      WM_HMEM* pa;
;;;149      int r = 1;
0000b6  f04f0901          MOV      r9,#1
;;;150    
;;;151      GUI_ARRAY_CHECK(pThis);    /* Sanity checks at higher debug levels only */
;;;152    
;;;153      if (Index < (unsigned)pThis->NumItems) {
0000ba  8820              LDRH     r0,[r4,#0]
0000bc  42a8              CMP      r0,r5
0000be  d90f              BLS      |L1.224|
;;;154        ha = pThis->haHandle;
0000c0  f9b46002          LDRSH    r6,[r4,#2]
;;;155        if (ha) {
0000c4  b166              CBZ      r6,|L1.224|
;;;156          pa = (WM_HMEM*) GUI_ALLOC_h2p(ha);
0000c6  4630              MOV      r0,r6
0000c8  f7fffffe          BL       GUI_ALLOC_h2p
0000cc  4607              MOV      r7,r0
;;;157          pa += Index;
0000ce  eb070745          ADD      r7,r7,r5,LSL #1
;;;158          GUI_ALLOC_FreePtr(pa);
0000d2  4638              MOV      r0,r7
0000d4  f7fffffe          BL       GUI_ALLOC_FreePtr
;;;159          *pa = hItem;
0000d8  f8a78000          STRH     r8,[r7,#0]
;;;160          r = 0;
0000dc  f04f0900          MOV      r9,#0
                  |L1.224|
;;;161        }
;;;162      }
;;;163      return r;
0000e0  4648              MOV      r0,r9
;;;164    }
0000e2  e8bd87f0          POP      {r4-r10,pc}
;;;165    
                          ENDP

                  GUI_ARRAY_SetItem PROC
;;;184    */
;;;185    WM_HMEM  GUI_ARRAY_SetItem(GUI_ARRAY* pThis, unsigned int Index, const void* pData, int Len) {
0000e6  e92d5ff0          PUSH     {r4-r12,lr}
0000ea  4607              MOV      r7,r0
0000ec  4688              MOV      r8,r1
0000ee  4691              MOV      r9,r2
0000f0  461d              MOV      r5,r3
;;;186      WM_HMEM hItem = 0;
0000f2  2400              MOVS     r4,#0
;;;187    
;;;188      GUI_ARRAY_CHECK(pThis);    /* Sanity checks at higher debug levels only */
;;;189    
;;;190      if (Index < (unsigned)pThis->NumItems) {
0000f4  8838              LDRH     r0,[r7,#0]
0000f6  4540              CMP      r0,r8
0000f8  d92d              BLS      |L1.342|
;;;191        WM_HMEM ha;
;;;192        ha = pThis->haHandle;
0000fa  f9b7a002          LDRSH    r10,[r7,#2]
;;;193        if (ha) {
0000fe  f1ba0f00          CMP      r10,#0
000102  d027              BEQ      |L1.340|
;;;194          WM_HMEM* pa;
;;;195          pa = (WM_HMEM*) GUI_ALLOC_h2p(ha);
000104  4650              MOV      r0,r10
000106  f7fffffe          BL       GUI_ALLOC_h2p
00010a  4606              MOV      r6,r0
;;;196          pa += Index;
00010c  eb060648          ADD      r6,r6,r8,LSL #1
;;;197          hItem = *pa;
000110  f9b64000          LDRSH    r4,[r6,#0]
;;;198          /*
;;;199           * If a buffer is already available, a new buffer is only needed when the
;;;200           * new item has a different size.
;;;201           */
;;;202          if (hItem) {
000114  b12c              CBZ      r4,|L1.290|
;;;203            if (GUI_ALLOC_GetSize(hItem) != Len) {
000116  4620              MOV      r0,r4
000118  f7fffffe          BL       GUI_ALLOC_GetSize
00011c  42a8              CMP      r0,r5
00011e  d000              BEQ      |L1.290|
;;;204              hItem = 0;
000120  2400              MOVS     r4,#0
                  |L1.290|
;;;205            }
;;;206          }
;;;207          /*
;;;208           * Allocate a new buffer and free the old one (if needed). 
;;;209           */
;;;210          if (!hItem) {
000122  b944              CBNZ     r4,|L1.310|
;;;211            hItem = GUI_ALLOC_AllocZero(Len);
000124  b228              SXTH     r0,r5
000126  f7fffffe          BL       GUI_ALLOC_AllocZero
00012a  4604              MOV      r4,r0
;;;212            if (hItem) {
00012c  b11c              CBZ      r4,|L1.310|
;;;213              GUI_ALLOC_FreePtr(pa);
00012e  4630              MOV      r0,r6
000130  f7fffffe          BL       GUI_ALLOC_FreePtr
;;;214              *pa = hItem;
000134  8034              STRH     r4,[r6,#0]
                  |L1.310|
;;;215            }
;;;216          }
;;;217          /*
;;;218           * Set the item (if needed)
;;;219           */
;;;220          if (pData && hItem) {
000136  f1b90f00          CMP      r9,#0
00013a  d00a              BEQ      |L1.338|
00013c  b14c              CBZ      r4,|L1.338|
;;;221            char* pItem = (char*) GUI_ALLOC_h2p(hItem);
00013e  4620              MOV      r0,r4
000140  f7fffffe          BL       GUI_ALLOC_h2p
000144  4683              MOV      r11,r0
;;;222            memcpy(pItem, pData, Len);
000146  462a              MOV      r2,r5
000148  4649              MOV      r1,r9
00014a  4658              MOV      r0,r11
00014c  f7fffffe          BL       __aeabi_memcpy
;;;223          }
000150  bf00              NOP      
                  |L1.338|
;;;224        }
000152  bf00              NOP      
                  |L1.340|
;;;225      }
000154  bf00              NOP      
                  |L1.342|
;;;226      return hItem;
000156  4620              MOV      r0,r4
;;;227    }
000158  e8bd9ff0          POP      {r4-r12,pc}
;;;228    
                          ENDP

                  GUI_ARRAY_GethItem PROC
;;;240    */
;;;241    WM_HMEM GUI_ARRAY_GethItem(const GUI_ARRAY* pThis, unsigned int Index) {
00015c  e92d41f0          PUSH     {r4-r8,lr}
000160  4604              MOV      r4,r0
000162  460d              MOV      r5,r1
;;;242      WM_HMEM h = 0;
000164  f04f0800          MOV      r8,#0
;;;243    
;;;244      GUI_ARRAY_CHECK(pThis);    /* Sanity checks at higher debug levels only */
;;;245    
;;;246      if (Index < (unsigned)pThis->NumItems) {
000168  8820              LDRH     r0,[r4,#0]
00016a  42a8              CMP      r0,r5
00016c  d909              BLS      |L1.386|
;;;247        WM_HMEM  ha;
;;;248        WM_HMEM* pa;
;;;249        ha = pThis->haHandle;
00016e  f9b47002          LDRSH    r7,[r4,#2]
;;;250        if (ha) {
000172  b12f              CBZ      r7,|L1.384|
;;;251          pa = (WM_HMEM*) GUI_ALLOC_h2p(ha);
000174  4638              MOV      r0,r7
000176  f7fffffe          BL       GUI_ALLOC_h2p
00017a  4606              MOV      r6,r0
;;;252          h = *(pa + Index);
00017c  f9368015          LDRSH    r8,[r6,r5,LSL #1]
                  |L1.384|
;;;253        }
;;;254      }
000180  bf00              NOP      
                  |L1.386|
;;;255      return h;
000182  4640              MOV      r0,r8
;;;256    }
000184  e8bd81f0          POP      {r4-r8,pc}
;;;257    
                          ENDP

                  GUI_ARRAY_GetpItem PROC
;;;272    */
;;;273    void* GUI_ARRAY_GetpItem(const GUI_ARRAY* pThis, unsigned int Index) {
000188  e92d41f0          PUSH     {r4-r8,lr}
00018c  4605              MOV      r5,r0
00018e  460e              MOV      r6,r1
;;;274      void* p = NULL;
000190  2700              MOVS     r7,#0
;;;275      WM_HMEM h;
;;;276    
;;;277      GUI_ARRAY_CHECK(pThis);    /* Sanity checks at higher debug levels only */
;;;278    
;;;279      h = GUI_ARRAY_GethItem(pThis, Index);
000192  4631              MOV      r1,r6
000194  4628              MOV      r0,r5
000196  f7fffffe          BL       GUI_ARRAY_GethItem
00019a  4604              MOV      r4,r0
;;;280      if (h) {
00019c  b11c              CBZ      r4,|L1.422|
;;;281        p = WM_H2P(h);
00019e  4620              MOV      r0,r4
0001a0  f7fffffe          BL       GUI_ALLOC_h2p
0001a4  4607              MOV      r7,r0
                  |L1.422|
;;;282      }
;;;283      return p;
0001a6  4638              MOV      r0,r7
;;;284    }
0001a8  e8bd81f0          POP      {r4-r8,pc}
;;;285    
                          ENDP

