; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [--debug -c --asm --interleave -o.\Obj\wm_settrans.o --depend=.\Obj\wm_settrans.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\Libraries\CMSIS\CM3\CoreSupport -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x\startup\arm -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\User -I..\BaseDrive -I..\Ucosii -I..\Ucosii\Port -I..\Ucosii\Src -I..\Ucosii\Include -I..\Ucgui -I..\Ucgui\Config -I..\Ucgui\GUI_X -I..\Ucgui\GUI -I..\Ucgui\GUI\ConvertColor -I..\Ucgui\GUI\ConvertMono -I..\Ucgui\GUI\Core -I..\Ucgui\GUI\Core -I..\Ucgui\GUI\LCDDriver -I..\Ucgui\GUI\MultiLayer -I..\Ucgui\GUI\Widget -I..\Ucgui\GUI\WM -I..\ExternalDrive\Lcd -I..\ExternalDrive\Touch -I..\Panel -ID:\Keil\ARM\INC -ID:\Keil\ARM\INC\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=.\Obj\wm_settrans.crf ..\Ucgui\GUI\WM\WM_SetTrans.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  WM_SetHasTrans PROC
;;;36     */
;;;37     void WM_SetHasTrans(WM_HWIN hWin) {
000000  b570              PUSH     {r4-r6,lr}
000002  4605              MOV      r5,r0
;;;38       WM_Obj *pWin;
;;;39       WM_LOCK();
000004  f7fffffe          BL       GUI_Lock
;;;40       if (hWin) {
000008  b19d              CBZ      r5,|L1.50|
;;;41         pWin = WM_H2P(hWin);  
00000a  4628              MOV      r0,r5
00000c  f7fffffe          BL       GUI_ALLOC_h2p
000010  4604              MOV      r4,r0
;;;42         /* First check if this is necessary at all */
;;;43         if ((pWin->Status & WM_SF_HASTRANS) == 0) {
000012  8ba0              LDRH     r0,[r4,#0x1c]
000014  f0100f01          TST      r0,#1
000018  d10b              BNE      |L1.50|
;;;44           pWin->Status |= WM_SF_HASTRANS; /* Set Transparency flag */
00001a  8ba0              LDRH     r0,[r4,#0x1c]
00001c  f0400001          ORR      r0,r0,#1
000020  83a0              STRH     r0,[r4,#0x1c]
;;;45           WM__TransWindowCnt++;          /* Increment counter for transparency windows */
000022  481c              LDR      r0,|L1.148|
000024  6800              LDR      r0,[r0,#0]  ; WM__TransWindowCnt
000026  1c40              ADDS     r0,r0,#1
000028  491a              LDR      r1,|L1.148|
00002a  6008              STR      r0,[r1,#0]  ; WM__TransWindowCnt
;;;46           WM_InvalidateWindow(hWin);      /* Mark content as invalid */
00002c  4628              MOV      r0,r5
00002e  f7fffffe          BL       WM_InvalidateWindow
                  |L1.50|
;;;47         }
;;;48       }
;;;49       WM_UNLOCK();
000032  f7fffffe          BL       GUI_Unlock
;;;50     }
000036  bd70              POP      {r4-r6,pc}
;;;51     
                          ENDP

                  WM_ClrHasTrans PROC
;;;55     */
;;;56     void WM_ClrHasTrans(WM_HWIN hWin) {
000038  b570              PUSH     {r4-r6,lr}
00003a  4605              MOV      r5,r0
;;;57       WM_Obj *pWin;
;;;58       WM_LOCK();
00003c  f7fffffe          BL       GUI_Lock
;;;59       if (hWin) {
000040  b19d              CBZ      r5,|L1.106|
;;;60         pWin = WM_H2P(hWin);  
000042  4628              MOV      r0,r5
000044  f7fffffe          BL       GUI_ALLOC_h2p
000048  4604              MOV      r4,r0
;;;61         /* First check if this is necessary at all */
;;;62         if (pWin->Status & WM_SF_HASTRANS) {
00004a  8ba0              LDRH     r0,[r4,#0x1c]
00004c  f0100f01          TST      r0,#1
000050  d00b              BEQ      |L1.106|
;;;63           pWin->Status &= ~WM_SF_HASTRANS;
000052  8ba0              LDRH     r0,[r4,#0x1c]
000054  f0200001          BIC      r0,r0,#1
000058  83a0              STRH     r0,[r4,#0x1c]
;;;64           WM__TransWindowCnt--;            /* Decrement counter for transparency windows */
00005a  480e              LDR      r0,|L1.148|
00005c  6800              LDR      r0,[r0,#0]  ; WM__TransWindowCnt
00005e  1e40              SUBS     r0,r0,#1
000060  490c              LDR      r1,|L1.148|
000062  6008              STR      r0,[r1,#0]  ; WM__TransWindowCnt
;;;65           WM_InvalidateWindow(hWin);        /* Mark content as invalid */
000064  4628              MOV      r0,r5
000066  f7fffffe          BL       WM_InvalidateWindow
                  |L1.106|
;;;66         }
;;;67       }
;;;68       WM_UNLOCK();
00006a  f7fffffe          BL       GUI_Unlock
;;;69     }
00006e  bd70              POP      {r4-r6,pc}
;;;70     
                          ENDP

                  WM_GetHasTrans PROC
;;;74     */
;;;75     int WM_GetHasTrans(WM_HWIN hWin) {
000070  b570              PUSH     {r4-r6,lr}
000072  4605              MOV      r5,r0
;;;76       int r = 0;
000074  2600              MOVS     r6,#0
;;;77       WM_Obj *pWin;
;;;78       WM_LOCK();
000076  f7fffffe          BL       GUI_Lock
;;;79       if (hWin) {
00007a  b135              CBZ      r5,|L1.138|
;;;80         pWin = WM_H2P(hWin);  
00007c  4628              MOV      r0,r5
00007e  f7fffffe          BL       GUI_ALLOC_h2p
000082  4604              MOV      r4,r0
;;;81         r = pWin->Status & WM_SF_HASTRANS;
000084  8ba0              LDRH     r0,[r4,#0x1c]
000086  f0000601          AND      r6,r0,#1
                  |L1.138|
;;;82       }
;;;83       WM_UNLOCK();
00008a  f7fffffe          BL       GUI_Unlock
;;;84       return r;
00008e  4630              MOV      r0,r6
;;;85     }
000090  bd70              POP      {r4-r6,pc}
;;;86     
                          ENDP

000092  0000              DCW      0x0000
                  |L1.148|
                          DCD      WM__TransWindowCnt
