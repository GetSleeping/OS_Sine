; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [--debug -c --asm --interleave -o.\Obj\dac_sine.o --depend=.\Obj\dac_sine.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\Libraries\CMSIS\CM3\CoreSupport -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x\startup\arm -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\User -I..\BaseDrive -I..\Ucosii -I..\Ucosii\Port -I..\Ucosii\Src -I..\Ucosii\Include -I..\Ucgui -I..\Ucgui\Config -I..\Ucgui\GUI_X -I..\Ucgui\GUI -I..\Ucgui\GUI\ConvertColor -I..\Ucgui\GUI\ConvertMono -I..\Ucgui\GUI\Core -I..\Ucgui\GUI\Core -I..\Ucgui\GUI\LCDDriver -I..\Ucgui\GUI\MultiLayer -I..\Ucgui\GUI\Widget -I..\Ucgui\GUI\WM -I..\ExternalDrive\Lcd -I..\ExternalDrive\Touch -I..\Panel -ID:\Keil\ARM\INC -ID:\Keil\ARM\INC\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=.\Obj\dac_sine.crf ..\BaseDrive\DAC_Sine.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  DAC_Config PROC
;;;36       */
;;;37     static void DAC_Config(void)
000000  b500              PUSH     {lr}
;;;38     {
000002  b085              SUB      sp,sp,#0x14
;;;39       GPIO_InitTypeDef GPIO_InitStructure;
;;;40     	DAC_InitTypeDef  DAC_InitStructure;
;;;41     
;;;42       /* 使能GPIOA时钟 */
;;;43       RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA, ENABLE);	
000004  2101              MOVS     r1,#1
000006  2004              MOVS     r0,#4
000008  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;44     	
;;;45     	/* 使能DAC时钟 */	
;;;46       RCC_APB1PeriphClockCmd(RCC_APB1Periph_DAC, ENABLE);
00000c  2101              MOVS     r1,#1
00000e  0748              LSLS     r0,r1,#29
000010  f7fffffe          BL       RCC_APB1PeriphClockCmd
;;;47     	
;;;48       /* DAC的GPIO配置，模拟输入 */
;;;49       GPIO_InitStructure.GPIO_Pin =  GPIO_Pin_4 | GPIO_Pin_5;
000014  2030              MOVS     r0,#0x30
000016  f8ad0010          STRH     r0,[sp,#0x10]
;;;50       GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AIN;
00001a  2000              MOVS     r0,#0
00001c  f88d0013          STRB     r0,[sp,#0x13]
;;;51       GPIO_Init(GPIOA, &GPIO_InitStructure);
000020  a904              ADD      r1,sp,#0x10
000022  483c              LDR      r0,|L1.276|
000024  f7fffffe          BL       GPIO_Init
;;;52     	
;;;53     
;;;54     
;;;55       /* 配置DAC 通道1 */
;;;56       DAC_InitStructure.DAC_Trigger = DAC_Trigger_T2_TRGO;						//使用TIM2作为触发源
000028  2024              MOVS     r0,#0x24
00002a  9000              STR      r0,[sp,#0]
;;;57       DAC_InitStructure.DAC_WaveGeneration = DAC_WaveGeneration_None;	//不使用波形发生器
00002c  2000              MOVS     r0,#0
00002e  9001              STR      r0,[sp,#4]
;;;58       DAC_InitStructure.DAC_OutputBuffer = DAC_OutputBuffer_Disable;	//不使用DAC输出缓冲
000030  2002              MOVS     r0,#2
000032  9003              STR      r0,[sp,#0xc]
;;;59       DAC_InitStructure.DAC_LFSRUnmask_TriangleAmplitude = 0x0;
000034  2000              MOVS     r0,#0
000036  9002              STR      r0,[sp,#8]
;;;60       DAC_Init(DAC_Channel_1, &DAC_InitStructure);
000038  4669              MOV      r1,sp
00003a  f7fffffe          BL       DAC_Init
;;;61     
;;;62       /* 配置DAC 通道2 */
;;;63       DAC_Init(DAC_Channel_2, &DAC_InitStructure);
00003e  4669              MOV      r1,sp
000040  2010              MOVS     r0,#0x10
000042  f7fffffe          BL       DAC_Init
;;;64     
;;;65       /* 使能通道1 由PA4输出 */
;;;66       DAC_Cmd(DAC_Channel_1, ENABLE);
000046  2101              MOVS     r1,#1
000048  2000              MOVS     r0,#0
00004a  f7fffffe          BL       DAC_Cmd
;;;67       /* 使能通道2 由PA5输出 */
;;;68       DAC_Cmd(DAC_Channel_2, ENABLE);
00004e  2101              MOVS     r1,#1
000050  2010              MOVS     r0,#0x10
000052  f7fffffe          BL       DAC_Cmd
;;;69     
;;;70       /* 使能DAC的DMA请求 */
;;;71       DAC_DMACmd(DAC_Channel_2, ENABLE);
000056  2101              MOVS     r1,#1
000058  2010              MOVS     r0,#0x10
00005a  f7fffffe          BL       DAC_DMACmd
;;;72     }
00005e  b005              ADD      sp,sp,#0x14
000060  bd00              POP      {pc}
;;;73     
                          ENDP

                  DAC_TIM_Config PROC
;;;79       */
;;;80     static void DAC_TIM_Config(void)
000062  b50e              PUSH     {r1-r3,lr}
;;;81     {
;;;82     	
;;;83     	TIM_TimeBaseInitTypeDef    TIM_TimeBaseStructure;
;;;84     	
;;;85     	/* 使能TIM2时钟，TIM2CLK 为72M */
;;;86       RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM2, ENABLE);
000064  2101              MOVS     r1,#1
000066  4608              MOV      r0,r1
000068  f7fffffe          BL       RCC_APB1PeriphClockCmd
;;;87     	
;;;88       /* TIM2基本定时器配置 */
;;;89      // TIM_TimeBaseStructInit(&TIM_TimeBaseStructure); 
;;;90       TIM_TimeBaseStructure.TIM_Period = 240 - 1;       			//定时周期:1K = 720 - 1(不分频)  3K = 240 - 1 
00006c  20ef              MOVS     r0,#0xef
00006e  f8ad0004          STRH     r0,[sp,#4]
;;;91       TIM_TimeBaseStructure.TIM_Prescaler = 0;       				//预分频，不分频 72M / (0+1) = 72M
000072  2000              MOVS     r0,#0
000074  f8ad0000          STRH     r0,[sp,#0]
;;;92       TIM_TimeBaseStructure.TIM_ClockDivision = 0x0;    			//时钟分频系数
000078  f8ad0006          STRH     r0,[sp,#6]
;;;93       TIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up;  	//向上计数模式
00007c  f8ad0002          STRH     r0,[sp,#2]
;;;94       TIM_TimeBaseInit(TIM2, &TIM_TimeBaseStructure);
000080  4669              MOV      r1,sp
000082  f04f4080          MOV      r0,#0x40000000
000086  f7fffffe          BL       TIM_TimeBaseInit
;;;95     
;;;96       /* 配置TIM2触发源 */
;;;97       TIM_SelectOutputTrigger(TIM2, TIM_TRGOSource_Update);
00008a  2120              MOVS     r1,#0x20
00008c  0648              LSLS     r0,r1,#25
00008e  f7fffffe          BL       TIM_SelectOutputTrigger
;;;98     
;;;99     	/* 使能TIM2 */
;;;100      TIM_Cmd(TIM2, ENABLE);
000092  2101              MOVS     r1,#1
000094  0788              LSLS     r0,r1,#30
000096  f7fffffe          BL       TIM_Cmd
;;;101    
;;;102    }
00009a  bd0e              POP      {r1-r3,pc}
;;;103    
                          ENDP

                  DAC_DMA_Config PROC
;;;108      */
;;;109    static void DAC_DMA_Config(void)
00009c  b500              PUSH     {lr}
;;;110    {	
00009e  b08b              SUB      sp,sp,#0x2c
;;;111    	DMA_InitTypeDef  DMA_InitStructure;
;;;112    
;;;113    	/* 使能DMA2时钟 */
;;;114    	RCC_AHBPeriphClockCmd(RCC_AHBPeriph_DMA2, ENABLE);
0000a0  2101              MOVS     r1,#1
0000a2  2002              MOVS     r0,#2
0000a4  f7fffffe          BL       RCC_AHBPeriphClockCmd
;;;115    	
;;;116    	/* 配置DMA2 */
;;;117      DMA_InitStructure.DMA_PeripheralBaseAddr = DAC_DHR12RD_Address;			//外设数据地址
0000a8  481b              LDR      r0,|L1.280|
0000aa  9000              STR      r0,[sp,#0]
;;;118      DMA_InitStructure.DMA_MemoryBaseAddr = (uint32_t)&MyDualSine12bit ;			//内存数据地址 DualSine12bit
0000ac  481b              LDR      r0,|L1.284|
0000ae  9001              STR      r0,[sp,#4]
;;;119      DMA_InitStructure.DMA_DIR = DMA_DIR_PeripheralDST;						//数据传输方向内存至外设
0000b0  2010              MOVS     r0,#0x10
0000b2  9002              STR      r0,[sp,#8]
;;;120      DMA_InitStructure.DMA_BufferSize = 100;									//缓存大小为32字节	
0000b4  2064              MOVS     r0,#0x64
0000b6  9003              STR      r0,[sp,#0xc]
;;;121      DMA_InitStructure.DMA_PeripheralInc = DMA_PeripheralInc_Disable;			//外设数据地址固定	
0000b8  2000              MOVS     r0,#0
0000ba  9004              STR      r0,[sp,#0x10]
;;;122      DMA_InitStructure.DMA_MemoryInc = DMA_MemoryInc_Enable;					//内存数据地址自增
0000bc  2080              MOVS     r0,#0x80
0000be  9005              STR      r0,[sp,#0x14]
;;;123      DMA_InitStructure.DMA_PeripheralDataSize = DMA_PeripheralDataSize_Word;	//外设数据以字为单位
0000c0  0080              LSLS     r0,r0,#2
0000c2  9006              STR      r0,[sp,#0x18]
;;;124      DMA_InitStructure.DMA_MemoryDataSize = DMA_MemoryDataSize_Word;			//内存数据以字为单位	
0000c4  0080              LSLS     r0,r0,#2
0000c6  9007              STR      r0,[sp,#0x1c]
;;;125      DMA_InitStructure.DMA_Mode = DMA_Mode_Circular;							//循环模式
0000c8  2020              MOVS     r0,#0x20
0000ca  9008              STR      r0,[sp,#0x20]
;;;126      DMA_InitStructure.DMA_Priority = DMA_Priority_High;						//高DMA通道优先级
0000cc  0200              LSLS     r0,r0,#8
0000ce  9009              STR      r0,[sp,#0x24]
;;;127      DMA_InitStructure.DMA_M2M = DMA_M2M_Disable;								//非内存至内存模式	
0000d0  2000              MOVS     r0,#0
0000d2  900a              STR      r0,[sp,#0x28]
;;;128    
;;;129      DMA_Init(DMA2_Channel4, &DMA_InitStructure);
0000d4  4669              MOV      r1,sp
0000d6  4812              LDR      r0,|L1.288|
0000d8  f7fffffe          BL       DMA_Init
;;;130    	
;;;131      /* 使能DMA2-14通道 */
;;;132      DMA_Cmd(DMA2_Channel4, ENABLE);
0000dc  2101              MOVS     r1,#1
0000de  4810              LDR      r0,|L1.288|
0000e0  f7fffffe          BL       DMA_Cmd
;;;133    }
0000e4  b00b              ADD      sp,sp,#0x2c
0000e6  bd00              POP      {pc}
;;;134    
                          ENDP

                  DAC_Mode_Init PROC
;;;140      */
;;;141    void DAC_Mode_Init(void)
0000e8  b510              PUSH     {r4,lr}
;;;142    {
;;;143    	uint32_t Idx = 0;  
0000ea  2400              MOVS     r4,#0
;;;144    
;;;145    	DAC_Config();
0000ec  f7fffffe          BL       DAC_Config
;;;146    	DAC_TIM_Config();
0000f0  f7fffffe          BL       DAC_TIM_Config
;;;147    	DAC_DMA_Config();
0000f4  f7fffffe          BL       DAC_DMA_Config
;;;148    	
;;;149    	/* 填充正弦波形数据，双通道右对齐*/
;;;150      for (Idx = 0; Idx < 100; Idx++)
0000f8  bf00              NOP      
0000fa  e008              B        |L1.270|
                  |L1.252|
;;;151      {
;;;152        MyDualSine12bit[Idx] = (MySinebit[Idx] << 16) + (MySinebit[Idx]);
0000fc  4809              LDR      r0,|L1.292|
0000fe  f8300014          LDRH     r0,[r0,r4,LSL #1]
000102  eb004000          ADD      r0,r0,r0,LSL #16
000106  4905              LDR      r1,|L1.284|
000108  f8410024          STR      r0,[r1,r4,LSL #2]
00010c  1c64              ADDS     r4,r4,#1              ;150
                  |L1.270|
00010e  2c64              CMP      r4,#0x64              ;150
000110  d3f4              BCC      |L1.252|
;;;153      }
;;;154    }
000112  bd10              POP      {r4,pc}
;;;155    
                          ENDP

                  |L1.276|
                          DCD      0x40010800
                  |L1.280|
                          DCD      0x40007420
                  |L1.284|
                          DCD      MyDualSine12bit
                  |L1.288|
                          DCD      0x40020444
                  |L1.292|
                          DCD      MySinebit

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  DualSine12bit
                          %        128
                  MyDualSine12bit
                          %        400

                          AREA ||.constdata||, DATA, READONLY, ALIGN=1

                  Sine12bit
000000  09900b10          DCW      0x0990,0x0b10
000004  0c720da8          DCW      0x0c72,0x0da8
000008  0ea70f64          DCW      0x0ea7,0x0f64
00000c  0fd90fff          DCW      0x0fd9,0x0fff
000010  0fd90f64          DCW      0x0fd9,0x0f64
000014  0ea70da8          DCW      0x0ea7,0x0da8
000018  0c720b10          DCW      0x0c72,0x0b10
00001c  09900800          DCW      0x0990,0x0800
000020  067004f0          DCW      0x0670,0x04f0
000024  038e0258          DCW      0x038e,0x0258
000028  0159009c          DCW      0x0159,0x009c
00002c  00270000          DCW      0x0027,0x0000
000030  0027009c          DCW      0x0027,0x009c
000034  01590258          DCW      0x0159,0x0258
000038  038e04f0          DCW      0x038e,0x04f0
00003c  06700800          DCW      0x0670,0x0800
                  MySinebit
000040  06100671          DCW      0x0610,0x0671
000044  06d30733          DCW      0x06d3,0x0733
000048  079207f0          DCW      0x0792,0x07f0
00004c  084b08a5          DCW      0x084b,0x08a5
000050  08fc0950          DCW      0x08fc,0x0950
000054  09a009ed          DCW      0x09a0,0x09ed
000058  0a360a7b          DCW      0x0a36,0x0a7b
00005c  0abc0af8          DCW      0x0abc,0x0af8
000060  0b2e0b60          DCW      0x0b2e,0x0b60
000064  0b8c0bb3          DCW      0x0b8c,0x0bb3
000068  0bd40bef          DCW      0x0bd4,0x0bef
00006c  0c050c14          DCW      0x0c05,0x0c14
000070  0c1d0c20          DCW      0x0c1d,0x0c20
000074  0c1d0c14          DCW      0x0c1d,0x0c14
000078  0c050bef          DCW      0x0c05,0x0bef
00007c  0bd40bb3          DCW      0x0bd4,0x0bb3
000080  0b8c0b60          DCW      0x0b8c,0x0b60
000084  0b2e0af8          DCW      0x0b2e,0x0af8
000088  0abc0a7b          DCW      0x0abc,0x0a7b
00008c  0a3609ed          DCW      0x0a36,0x09ed
000090  09a00950          DCW      0x09a0,0x0950
000094  08fc08a5          DCW      0x08fc,0x08a5
000098  084b07f0          DCW      0x084b,0x07f0
00009c  07920733          DCW      0x0792,0x0733
0000a0  06d30671          DCW      0x06d3,0x0671
0000a4  061005af          DCW      0x0610,0x05af
0000a8  054d04ed          DCW      0x054d,0x04ed
0000ac  048e0430          DCW      0x048e,0x0430
0000b0  03d5037b          DCW      0x03d5,0x037b
0000b4  032402d0          DCW      0x0324,0x02d0
0000b8  02800233          DCW      0x0280,0x0233
0000bc  01ea01a5          DCW      0x01ea,0x01a5
0000c0  01640128          DCW      0x0164,0x0128
0000c4  00f200c0          DCW      0x00f2,0x00c0
0000c8  0094006d          DCW      0x0094,0x006d
0000cc  004c0031          DCW      0x004c,0x0031
0000d0  001b000c          DCW      0x001b,0x000c
0000d4  00030000          DCW      0x0003,0x0000
0000d8  0003000c          DCW      0x0003,0x000c
0000dc  001b0031          DCW      0x001b,0x0031
0000e0  004c006d          DCW      0x004c,0x006d
0000e4  009400c0          DCW      0x0094,0x00c0
0000e8  00f20128          DCW      0x00f2,0x0128
0000ec  016401a5          DCW      0x0164,0x01a5
0000f0  01ea0233          DCW      0x01ea,0x0233
0000f4  028002d0          DCW      0x0280,0x02d0
0000f8  0324037b          DCW      0x0324,0x037b
0000fc  03d50430          DCW      0x03d5,0x0430
000100  048e04ed          DCW      0x048e,0x04ed
000104  054d05af          DCW      0x054d,0x05af
