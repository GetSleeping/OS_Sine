; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [--debug -c --asm --interleave -o.\Obj\lcd_mixcolors256.o --depend=.\Obj\lcd_mixcolors256.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\Libraries\CMSIS\CM3\CoreSupport -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x\startup\arm -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\User -I..\BaseDrive -I..\Ucosii -I..\Ucosii\Port -I..\Ucosii\Src -I..\Ucosii\Include -I..\Ucgui -I..\Ucgui\Config -I..\Ucgui\GUI_X -I..\Ucgui\GUI -I..\Ucgui\GUI\ConvertColor -I..\Ucgui\GUI\ConvertMono -I..\Ucgui\GUI\Core -I..\Ucgui\GUI\Core -I..\Ucgui\GUI\LCDDriver -I..\Ucgui\GUI\MultiLayer -I..\Ucgui\GUI\Widget -I..\Ucgui\GUI\WM -I..\ExternalDrive\Lcd -I..\ExternalDrive\Touch -I..\Panel -ID:\Keil\ARM\INC -ID:\Keil\ARM\INC\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=.\Obj\lcd_mixcolors256.crf ..\Ucgui\GUI\Core\LCD_MixColors256.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=1

                  LCD_MixColors256 PROC
;;;40     */
;;;41     LCD_COLOR LCD_MixColors256(LCD_COLOR Color, LCD_COLOR BkColor, unsigned Intens) {
000000  b570              PUSH     {r4-r6,lr}
000002  4603              MOV      r3,r0
;;;42       /* Calc Color seperations for FgColor first */
;;;43       U32 R = (Color & 0xff)    * Intens;
000004  b2d8              UXTB     r0,r3
000006  fb00f402          MUL      r4,r0,r2
;;;44       U32 G = (Color & 0xff00)  * Intens;
00000a  f403407f          AND      r0,r3,#0xff00
00000e  fb00f502          MUL      r5,r0,r2
;;;45       U32 B = (Color & 0xff0000)* Intens;
000012  f403007f          AND      r0,r3,#0xff0000
000016  fb00f602          MUL      r6,r0,r2
;;;46       /* Add Color seperations for BkColor */
;;;47       Intens = 256 - Intens;
00001a  f5c27280          RSB      r2,r2,#0x100
;;;48       R += (BkColor & 0xff)     * Intens;
00001e  b2c8              UXTB     r0,r1
000020  fb004402          MLA      r4,r0,r2,r4
;;;49       G += (BkColor & 0xff00)   * Intens;
000024  f401407f          AND      r0,r1,#0xff00
000028  fb005502          MLA      r5,r0,r2,r5
;;;50       B += (BkColor & 0xff0000) * Intens;
00002c  f401007f          AND      r0,r1,#0xff0000
000030  fb006602          MLA      r6,r0,r2,r6
;;;51       R = (R >> 8);
000034  0a24              LSRS     r4,r4,#8
;;;52       G = (G >> 8) & 0xff00;
000036  f44f407f          MOV      r0,#0xff00
00003a  ea002515          AND      r5,r0,r5,LSR #8
;;;53       B = (B >> 8) & 0xff0000;
00003e  0200              LSLS     r0,r0,#8
000040  ea002616          AND      r6,r0,r6,LSR #8
;;;54       return R + G + B;
000044  1960              ADDS     r0,r4,r5
000046  4430              ADD      r0,r0,r6
;;;55     }
000048  bd70              POP      {r4-r6,pc}
;;;56     
                          ENDP

