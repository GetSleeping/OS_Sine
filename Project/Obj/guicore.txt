; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [--debug -c --asm --interleave -o.\Obj\guicore.o --depend=.\Obj\guicore.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\Libraries\CMSIS\CM3\CoreSupport -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x\startup\arm -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\User -I..\BaseDrive -I..\Ucosii -I..\Ucosii\Port -I..\Ucosii\Src -I..\Ucosii\Include -I..\Ucgui -I..\Ucgui\Config -I..\Ucgui\GUI_X -I..\Ucgui\GUI -I..\Ucgui\GUI\ConvertColor -I..\Ucgui\GUI\ConvertMono -I..\Ucgui\GUI\Core -I..\Ucgui\GUI\Core -I..\Ucgui\GUI\LCDDriver -I..\Ucgui\GUI\MultiLayer -I..\Ucgui\GUI\Widget -I..\Ucgui\GUI\WM -I..\ExternalDrive\Lcd -I..\ExternalDrive\Touch -I..\Panel -ID:\Keil\ARM\INC -ID:\Keil\ARM\INC\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=.\Obj\guicore.crf ..\Ucgui\GUI\Core\GUICore.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  _InitContext PROC
;;;61     */
;;;62     static void _InitContext(GUI_CONTEXT* pContext) {
000000  b510              PUSH     {r4,lr}
000002  4604              MOV      r4,r0
;;;63       /* memset(..,0,..) is not required, as this function is called only at startup of the GUI when data is 0 */
;;;64       #if GUI_SUPPORT_DEVICES
;;;65         pContext->pDeviceAPI   = LCD_aAPI[0]; /* &LCD_L0_APIList; */
;;;66       #endif
;;;67       pContext->pClipRect_HL = &GUI_Context.ClipRect;
000004  483d              LDR      r0,|L1.252|
000006  6120              STR      r0,[r4,#0x10]
;;;68       LCD_L0_GetRect(&pContext->ClipRect);
000008  1d20              ADDS     r0,r4,#4
00000a  f7fffffe          BL       LCD_L0_GetRect
;;;69       #if GUI_SUPPORT_AA
;;;70         pContext->pLCD_HL      = &_HL_APIList;
;;;71       #endif
;;;72       pContext->pAFont       = GUI_DEFAULT_FONT;
00000e  483c              LDR      r0,|L1.256|
000010  61a0              STR      r0,[r4,#0x18]
;;;73       pContext->pClipRect_HL = &GUI_Context.ClipRect;
000012  483a              LDR      r0,|L1.252|
000014  6120              STR      r0,[r4,#0x10]
;;;74       pContext->PenSize      = 1;
000016  2001              MOVS     r0,#1
000018  7520              STRB     r0,[r4,#0x14]
;;;75       /* Variables in WM module */
;;;76       #if GUI_WINSUPPORT
;;;77         pContext->hAWin    = WM_GetDesktopWindow();
00001a  f7fffffe          BL       WM_GetDesktopWindow
00001e  87a0              STRH     r0,[r4,#0x3c]
;;;78       #endif
;;;79       /* Variables in GUI_AA module */
;;;80       #if GUI_SUPPORT_AA
;;;81         pContext->AA_Factor = 3;
;;;82       #endif
;;;83       pContext->Color   = GUI_INVALID_COLOR;
000020  f06f4070          MVN      r0,#0xf0000000
000024  6320              STR      r0,[r4,#0x30]
;;;84       pContext->BkColor = GUI_INVALID_COLOR;
000026  6360              STR      r0,[r4,#0x34]
;;;85       LCD_SetBkColor(GUI_DEFAULT_BKCOLOR);
000028  2000              MOVS     r0,#0
00002a  f7fffffe          BL       LCD_SetBkColor
;;;86       LCD_SetColor(GUI_DEFAULT_COLOR);
00002e  f06f407f          MVN      r0,#0xff000000
000032  f7fffffe          BL       LCD_SetColor
;;;87       pContext->pUC_API = &GUI__API_TableNone;
000036  4833              LDR      r0,|L1.260|
000038  61e0              STR      r0,[r4,#0x1c]
;;;88     }
00003a  bd10              POP      {r4,pc}
;;;89     
                          ENDP

                  GUI_ClearRect PROC
;;;99     */
;;;100    void GUI_ClearRect(int x0, int y0, int x1, int y1) {
00003c  e92d41fc          PUSH     {r2-r8,lr}
000040  4604              MOV      r4,r0
000042  460d              MOV      r5,r1
000044  4616              MOV      r6,r2
000046  461f              MOV      r7,r3
;;;101      GUI_DRAWMODE PrevDraw;
;;;102      #if GUI_WINSUPPORT
;;;103        GUI_RECT r;
;;;104      #endif
;;;105      GUI_LOCK();
000048  f7fffffe          BL       GUI_Lock
;;;106      PrevDraw = LCD_SetDrawMode(GUI_DRAWMODE_REV);
00004c  2004              MOVS     r0,#4
00004e  f7fffffe          BL       LCD_SetDrawMode
000052  4680              MOV      r8,r0
;;;107      #if GUI_WINSUPPORT
;;;108        WM_ADDORG(x0,y0);
000054  4829              LDR      r0,|L1.252|
000056  1f00              SUBS     r0,r0,#4
000058  6c00              LDR      r0,[r0,#0x40]  ; GUI_Context
00005a  4404              ADD      r4,r4,r0
00005c  4827              LDR      r0,|L1.252|
00005e  1f00              SUBS     r0,r0,#4
000060  6c40              LDR      r0,[r0,#0x44]  ; GUI_Context
000062  4405              ADD      r5,r5,r0
;;;109        WM_ADDORG(x1,y1);
000064  4825              LDR      r0,|L1.252|
000066  1f00              SUBS     r0,r0,#4
000068  6c00              LDR      r0,[r0,#0x40]  ; GUI_Context
00006a  4406              ADD      r6,r6,r0
00006c  4823              LDR      r0,|L1.252|
00006e  1f00              SUBS     r0,r0,#4
000070  6c40              LDR      r0,[r0,#0x44]  ; GUI_Context
000072  4407              ADD      r7,r7,r0
;;;110        r.x0 = x0;
000074  b220              SXTH     r0,r4
000076  f8ad0000          STRH     r0,[sp,#0]
;;;111        r.x1 = x1;
00007a  b230              SXTH     r0,r6
00007c  f8ad0004          STRH     r0,[sp,#4]
;;;112        r.y0 = y0;
000080  b228              SXTH     r0,r5
000082  f8ad0002          STRH     r0,[sp,#2]
;;;113        r.y1 = y1;
000086  b238              SXTH     r0,r7
000088  f8ad0006          STRH     r0,[sp,#6]
;;;114        WM_ITERATE_START(&r) {
00008c  4668              MOV      r0,sp
00008e  f7fffffe          BL       WM__InitIVRSearch
000092  b150              CBZ      r0,|L1.170|
000094  bf00              NOP      
                  |L1.150|
;;;115      #endif
;;;116      LCD_FillRect(x0,y0,x1,y1);
000096  463b              MOV      r3,r7
000098  4632              MOV      r2,r6
00009a  4629              MOV      r1,r5
00009c  4620              MOV      r0,r4
00009e  f7fffffe          BL       LCD_FillRect
;;;117      #if GUI_WINSUPPORT
;;;118        } WM_ITERATE_END();
0000a2  f7fffffe          BL       WM__GetNextIVR
0000a6  2800              CMP      r0,#0
0000a8  d1f5              BNE      |L1.150|
                  |L1.170|
;;;119      #endif
;;;120      LCD_SetDrawMode(PrevDraw);
0000aa  4640              MOV      r0,r8
0000ac  f7fffffe          BL       LCD_SetDrawMode
;;;121      GUI_UNLOCK();
0000b0  f7fffffe          BL       GUI_Unlock
;;;122    }
0000b4  e8bd81fc          POP      {r2-r8,pc}
;;;123    
                          ENDP

                  GUI_Clear PROC
;;;127    */
;;;128    void GUI_Clear(void) {
0000b8  b510              PUSH     {r4,lr}
;;;129      GUI_GotoXY(0,0);     /* Reset text cursor to upper left */
0000ba  2100              MOVS     r1,#0
0000bc  4608              MOV      r0,r1
0000be  f7fffffe          BL       GUI_GotoXY
;;;130      GUI_ClearRect(GUI_XMIN, GUI_YMIN, GUI_XMAX, GUI_YMAX);
0000c2  f64073ff          MOV      r3,#0xfff
0000c6  461a              MOV      r2,r3
0000c8  4259              RSBS     r1,r3,#0
0000ca  4608              MOV      r0,r1
0000cc  f7fffffe          BL       GUI_ClearRect
;;;131    }
0000d0  bd10              POP      {r4,pc}
;;;132    
                          ENDP

                  GUI_Init PROC
;;;139    */
;;;140    int GUI_Init(void) {
0000d2  b510              PUSH     {r4,lr}
;;;141      int r;
;;;142      GUI_DEBUG_LOG("\nGUI_Init()");
;;;143      /* Init system wide globals first */
;;;144      GUI_DecChar = '.';
0000d4  202e              MOVS     r0,#0x2e
0000d6  490c              LDR      r1,|L1.264|
0000d8  7008              STRB     r0,[r1,#0]
;;;145      GUI_X_Init();
0000da  f7fffffe          BL       GUI_X_Init
;;;146      /* Init context */
;;;147      _InitContext(&GUI_Context);
0000de  4807              LDR      r0,|L1.252|
0000e0  1f00              SUBS     r0,r0,#4
0000e2  f7fffffe          BL       _InitContext
;;;148      GUITASK_INIT();
0000e6  f7fffffe          BL       GUITASK_Init
;;;149      r = LCD_Init();
0000ea  f7fffffe          BL       LCD_Init
0000ee  4604              MOV      r4,r0
;;;150      #if GUI_WINSUPPORT
;;;151        WM_Init();
0000f0  f7fffffe          BL       WM_Init
;;;152      #endif
;;;153      GUITASK_COPY_CONTEXT();
0000f4  f7fffffe          BL       GUITASK_CopyContext
;;;154      #if defined(GUI_TRIAL_VERSION)
;;;155      {
;;;156        int i;
;;;157        for (i = 0; i < 10; i++) {
;;;158          GUI_DispString("This uC-GUI library\n"
;;;159    	                     "is for evaluation\n"
;;;160    	                     "purpose only.\n"
;;;161    	                     "A license is\n"
;;;162    	                     "required to use\n"
;;;163    	                     "it in a product\n\n"
;;;164    	                     "www.micrium.com\n");
;;;165          GUI_GotoXY(0, 0);
;;;166        }
;;;167      }
;;;168      GUI_Clear();
;;;169      #endif
;;;170      return r;
0000f8  4620              MOV      r0,r4
;;;171    }
0000fa  bd10              POP      {r4,pc}
;;;172    
                          ENDP

                  |L1.252|
                          DCD      GUI_Context+0x4
                  |L1.256|
                          DCD      GUI_Font6x8
                  |L1.260|
                          DCD      GUI__API_TableNone
                  |L1.264|
                          DCD      GUI_DecChar

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  GUI_Context
                          %        72

                          AREA ||.data||, DATA, ALIGN=2

                  GUI_DecChar
000000  00000000          DCB      0x00,0x00,0x00,0x00
                  GUI_pfTimerExec
                          DCD      0x00000000
                  WM_pfHandlePID
                          DCD      0x00000000
                  GUI_pfDispCharStyle
                          DCD      0x00000000
                  GUI_pLCD_APIList
                          DCD      0x00000000
                  GUI_CURSOR_pfTempHide
                          DCD      0x00000000
                  GUI_CURSOR_pfTempUnhide
                          DCD      0x00000000
