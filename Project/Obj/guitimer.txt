; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [--debug -c --asm --interleave -o.\Obj\guitimer.o --depend=.\Obj\guitimer.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\Libraries\CMSIS\CM3\CoreSupport -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x\startup\arm -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\User -I..\BaseDrive -I..\Ucosii -I..\Ucosii\Port -I..\Ucosii\Src -I..\Ucosii\Include -I..\Ucgui -I..\Ucgui\Config -I..\Ucgui\GUI_X -I..\Ucgui\GUI -I..\Ucgui\GUI\ConvertColor -I..\Ucgui\GUI\ConvertMono -I..\Ucgui\GUI\Core -I..\Ucgui\GUI\Core -I..\Ucgui\GUI\LCDDriver -I..\Ucgui\GUI\MultiLayer -I..\Ucgui\GUI\Widget -I..\Ucgui\GUI\WM -I..\ExternalDrive\Lcd -I..\ExternalDrive\Touch -I..\Panel -ID:\Keil\ARM\INC -ID:\Keil\ARM\INC\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=.\Obj\guitimer.crf ..\Ucgui\GUI\Core\GUITimer.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  _Unlink PROC
;;;68     */
;;;69     static void _Unlink(GUI_TIMER_HANDLE hTimer) {
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  4605              MOV      r5,r0
;;;70       GUI_TIMER_Obj* pTimer = GUI_TIMER_H2P(hTimer);
000006  4628              MOV      r0,r5
000008  f7fffffe          BL       GUI_ALLOC_h2p
00000c  4607              MOV      r7,r0
;;;71       GUI_TIMER_HANDLE hi;
;;;72       GUI_TIMER_Obj*   pi;
;;;73     /* Check if it is the first element */
;;;74       if (hFirstTimer == hTimer) {
00000e  4888              LDR      r0,|L1.560|
000010  f9b00000          LDRSH    r0,[r0,#0]  ; hFirstTimer
000014  42a8              CMP      r0,r5
000016  d104              BNE      |L1.34|
;;;75         hFirstTimer = pTimer->hNext;
000018  88b8              LDRH     r0,[r7,#4]
00001a  4985              LDR      r1,|L1.560|
00001c  8008              STRH     r0,[r1,#0]
                  |L1.30|
;;;76         return;
;;;77     	}
;;;78       hi = hFirstTimer;
;;;79     /* Try to find it in the list ... */
;;;80       while(hi) {
;;;81         /* GUI_ASSERT(hi<1000,0); */
;;;82         pi = GUI_TIMER_H2P(hi);
;;;83         if (pi->hNext == hTimer) {
;;;84           pi->hNext = pTimer->hNext;
;;;85           break;
;;;86     		}        
;;;87         hi = pi->hNext;
;;;88       }  
;;;89     }
00001e  e8bd81f0          POP      {r4-r8,pc}
                  |L1.34|
000022  4883              LDR      r0,|L1.560|
000024  f9b06000          LDRSH    r6,[r0,#0]            ;78  ; hFirstTimer
000028  e00c              B        |L1.68|
                  |L1.42|
00002a  4630              MOV      r0,r6                 ;82
00002c  f7fffffe          BL       GUI_ALLOC_h2p
000030  4604              MOV      r4,r0                 ;82
000032  f9b40004          LDRSH    r0,[r4,#4]            ;83
000036  42a8              CMP      r0,r5                 ;83
000038  d102              BNE      |L1.64|
00003a  88b8              LDRH     r0,[r7,#4]            ;84
00003c  80a0              STRH     r0,[r4,#4]            ;84
00003e  e003              B        |L1.72|
                  |L1.64|
000040  f9b46004          LDRSH    r6,[r4,#4]            ;87
                  |L1.68|
000044  2e00              CMP      r6,#0                 ;80
000046  d1f0              BNE      |L1.42|
                  |L1.72|
000048  bf00              NOP                            ;85
00004a  bf00              NOP      
00004c  e7e7              B        |L1.30|
;;;90     
                          ENDP

                  _Link PROC
;;;99     */
;;;100    static void _Link(GUI_TIMER_HANDLE hNew) {
00004e  e92d47f0          PUSH     {r4-r10,lr}
000052  4605              MOV      r5,r0
;;;101      GUI_TIMER_Obj*   pNew        = GUI_TIMER_H2P(hNew);
000054  4628              MOV      r0,r5
000056  f7fffffe          BL       GUI_ALLOC_h2p
00005a  4604              MOV      r4,r0
;;;102      GUI_TIMER_Obj*   pTimer;
;;;103      GUI_TIMER_Obj*   pNext;
;;;104      GUI_TIMER_HANDLE hNext;
;;;105      if (hFirstTimer ==0) { /* List is empty, make it the only element */
00005c  4874              LDR      r0,|L1.560|
00005e  8800              LDRH     r0,[r0,#0]  ; hFirstTimer
000060  b920              CBNZ     r0,|L1.108|
;;;106        hFirstTimer = hNew;
000062  4873              LDR      r0,|L1.560|
000064  8005              STRH     r5,[r0,#0]
;;;107    	  pNew->hNext = 0;
000066  2000              MOVS     r0,#0
000068  80a0              STRH     r0,[r4,#4]
00006a  e030              B        |L1.206|
                  |L1.108|
;;;108      } else {
;;;109        GUI_TIMER_Obj* pFirstTimer      = GUI_TIMER_H2P(hFirstTimer);
00006c  4870              LDR      r0,|L1.560|
00006e  f9b00000          LDRSH    r0,[r0,#0]  ; hFirstTimer
000072  f7fffffe          BL       GUI_ALLOC_h2p
000076  4681              MOV      r9,r0
;;;110    /* Check if we have to make it the first element */
;;;111        if ((pNew->t0 - pFirstTimer->t0) <=0) {
000078  6920              LDR      r0,[r4,#0x10]
00007a  f8d91010          LDR      r1,[r9,#0x10]
00007e  1a40              SUBS     r0,r0,r1
000080  2800              CMP      r0,#0
000082  dc07              BGT      |L1.148|
;;;112          pNew->hNext = hFirstTimer;
000084  486a              LDR      r0,|L1.560|
000086  f9b00000          LDRSH    r0,[r0,#0]  ; hFirstTimer
00008a  80a0              STRH     r0,[r4,#4]
;;;113          hFirstTimer = hNew;
00008c  4868              LDR      r0,|L1.560|
00008e  8005              STRH     r5,[r0,#0]
                  |L1.144|
;;;114    			return;
;;;115    		} else {
;;;116          GUI_TIMER_HANDLE hTimer = hFirstTimer;
;;;117    /* Put it into the list */
;;;118          do {
;;;119            pTimer       = GUI_TIMER_H2P(hTimer);
;;;120            hNext        = pTimer->hNext;
;;;121            if (hNext ==0)
;;;122    					goto Append;
;;;123            pNext      = GUI_TIMER_H2P(hNext);
;;;124    				if ((pNew->t0 - pNext->t0) <=0) {
;;;125              pNew->hNext  = hNext;
;;;126              pTimer->hNext= hNew;
;;;127              return;
;;;128    				}
;;;129    			} while(1);
;;;130    /* Put it at the end of the list */
;;;131    Append:
;;;132          pNew->hNext  = hNext;
;;;133          pTimer->hNext= hNew;
;;;134          return;
;;;135    		}
;;;136      }
;;;137    }
000090  e8bd87f0          POP      {r4-r10,pc}
                  |L1.148|
000094  4866              LDR      r0,|L1.560|
000096  f9b0a000          LDRSH    r10,[r0,#0]           ;116  ; hFirstTimer
00009a  bf00              NOP                            ;118
                  |L1.156|
00009c  4650              MOV      r0,r10                ;119
00009e  f7fffffe          BL       GUI_ALLOC_h2p
0000a2  4606              MOV      r6,r0                 ;119
0000a4  f9b67004          LDRSH    r7,[r6,#4]            ;120
0000a8  b907              CBNZ     r7,|L1.172|
0000aa  e00d              B        |L1.200|
                  |L1.172|
0000ac  4638              MOV      r0,r7                 ;123
0000ae  f7fffffe          BL       GUI_ALLOC_h2p
0000b2  4680              MOV      r8,r0                 ;123
0000b4  6921              LDR      r1,[r4,#0x10]         ;124
0000b6  f8d80010          LDR      r0,[r8,#0x10]         ;124
0000ba  1a08              SUBS     r0,r1,r0              ;124
0000bc  2800              CMP      r0,#0                 ;124
0000be  dc02              BGT      |L1.198|
0000c0  80a7              STRH     r7,[r4,#4]            ;125
0000c2  80b5              STRH     r5,[r6,#4]            ;126
0000c4  e7e4              B        |L1.144|
                  |L1.198|
0000c6  e7e9              B        |L1.156|
                  |L1.200|
0000c8  80a7              STRH     r7,[r4,#4]            ;132
0000ca  80b5              STRH     r5,[r6,#4]            ;133
0000cc  e7e0              B        |L1.144|
                  |L1.206|
0000ce  bf00              NOP      
0000d0  e7de              B        |L1.144|
;;;138    
                          ENDP

                  GUI_TIMER_Exec PROC
;;;148    */
;;;149    int GUI_TIMER_Exec(void) {
0000d2  b57c              PUSH     {r2-r6,lr}
;;;150      int r = 0;
0000d4  2600              MOVS     r6,#0
;;;151      GUI_TIMER_TIME t = GUI_GetTime();
0000d6  f7fffffe          BL       GUI_GetTime
0000da  4605              MOV      r5,r0
;;;152      GUI_LOCK(); {
0000dc  f7fffffe          BL       GUI_Lock
;;;153        while (hFirstTimer) {
0000e0  e01b              B        |L1.282|
                  |L1.226|
;;;154         	GUI_TIMER_Obj* pTimer = GUI_TIMER_H2P(hFirstTimer);
0000e2  4853              LDR      r0,|L1.560|
0000e4  f9b00000          LDRSH    r0,[r0,#0]  ; hFirstTimer
0000e8  f7fffffe          BL       GUI_ALLOC_h2p
0000ec  4604              MOV      r4,r0
;;;155          if ((pTimer->t0-t) <=0) {
0000ee  6920              LDR      r0,[r4,#0x10]
0000f0  1b40              SUBS     r0,r0,r5
0000f2  2800              CMP      r0,#0
0000f4  dc0f              BGT      |L1.278|
;;;156            GUI_TIMER_MESSAGE tm;
;;;157            tm.Time = t;
0000f6  9500              STR      r5,[sp,#0]
;;;158    				tm.Context = pTimer->Context;
0000f8  68e0              LDR      r0,[r4,#0xc]
0000fa  9001              STR      r0,[sp,#4]
;;;159            _hActiveTimer = hFirstTimer;
0000fc  484c              LDR      r0,|L1.560|
0000fe  f9b00000          LDRSH    r0,[r0,#0]  ; hFirstTimer
000102  494c              LDR      r1,|L1.564|
000104  8008              STRH     r0,[r1,#0]
;;;160            hFirstTimer = pTimer->hNext;
000106  88a0              LDRH     r0,[r4,#4]
000108  4949              LDR      r1,|L1.560|
00010a  8008              STRH     r0,[r1,#0]
;;;161            pTimer->cb(&tm);
00010c  4668              MOV      r0,sp
00010e  6821              LDR      r1,[r4,#0]
000110  4788              BLX      r1
;;;162            r = 1;
000112  2601              MOVS     r6,#1
;;;163    			} else
000114  e000              B        |L1.280|
                  |L1.278|
;;;164    			  break;
000116  e004              B        |L1.290|
                  |L1.280|
;;;165        }
000118  bf00              NOP      
                  |L1.282|
00011a  4845              LDR      r0,|L1.560|
00011c  8800              LDRH     r0,[r0,#0]            ;153  ; hFirstTimer
00011e  2800              CMP      r0,#0                 ;153
000120  d1df              BNE      |L1.226|
                  |L1.290|
000122  bf00              NOP                            ;164
;;;166        /*
;;;167    		GUI_TIMER_Obj* pObj = GUI_TIMER_H2P(hObj);
;;;168        pObj->t0 = Time;
;;;169        */
;;;170      } GUI_UNLOCK(); 
000124  f7fffffe          BL       GUI_Unlock
;;;171      return r;
000128  4630              MOV      r0,r6
;;;172    }
00012a  bd7c              POP      {r2-r6,pc}
;;;173    
                          ENDP

                  GUI_TIMER_Create PROC
;;;177    */
;;;178    GUI_TIMER_HANDLE GUI_TIMER_Create(GUI_TIMER_CALLBACK* cb, int Time, U32 Context, int Flags) {
00012c  e92d47f0          PUSH     {r4-r10,lr}
000130  4606              MOV      r6,r0
000132  460c              MOV      r4,r1
000134  4617              MOV      r7,r2
000136  4698              MOV      r8,r3
;;;179      GUI_TIMER_HANDLE hObj;
;;;180      GUI_TIMER_Obj* pObj;
;;;181      GUI_LOCK();
000138  f7fffffe          BL       GUI_Lock
;;;182      GUI_USE_PARA(Flags);
00013c  bf00              NOP      
;;;183      GUI_USE_PARA(Time);
00013e  bf00              NOP      
;;;184      GUI_pfTimerExec = GUI_TIMER_Exec;
000140  f2af0071          ADR      r0,GUI_TIMER_Exec + 1
000144  493c              LDR      r1,|L1.568|
000146  6008              STR      r0,[r1,#0]  ; GUI_pfTimerExec
;;;185    	{
;;;186        /* Alloc memory for obj */
;;;187        hObj = GUI_ALLOC_AllocZero(sizeof(GUI_TIMER_Obj));
000148  2018              MOVS     r0,#0x18
00014a  f7fffffe          BL       GUI_ALLOC_AllocZero
00014e  4681              MOV      r9,r0
;;;188        pObj = GUI_TIMER_H2P(hObj);
000150  4648              MOV      r0,r9
000152  f7fffffe          BL       GUI_ALLOC_h2p
000156  4605              MOV      r5,r0
;;;189        /* init member variables */
;;;190        pObj->cb = cb;
000158  602e              STR      r6,[r5,#0]
;;;191    		pObj->Context = Context;
00015a  60ef              STR      r7,[r5,#0xc]
;;;192    		pObj->t0 = Time;	//houhh 20061018...
00015c  612c              STR      r4,[r5,#0x10]
;;;193        /* Link it */
;;;194    		_Link(hObj);
00015e  4648              MOV      r0,r9
000160  f7fffffe          BL       _Link
;;;195    	} GUI_UNLOCK();
000164  f7fffffe          BL       GUI_Unlock
;;;196      return hObj;
000168  4648              MOV      r0,r9
;;;197    }
00016a  e8bd87f0          POP      {r4-r10,pc}
;;;198    
                          ENDP

                  GUI_TIMER_Delete PROC
;;;202    */
;;;203    void GUI_TIMER_Delete(GUI_TIMER_HANDLE hObj) {
00016e  b510              PUSH     {r4,lr}
000170  4604              MOV      r4,r0
;;;204    /* Unlink Timer */
;;;205      GUI_LOCK();
000172  f7fffffe          BL       GUI_Lock
;;;206      _Unlink(hObj);
000176  4620              MOV      r0,r4
000178  f7fffffe          BL       _Unlink
;;;207      GUI_ALLOC_Free(hObj);
00017c  4620              MOV      r0,r4
00017e  f7fffffe          BL       GUI_ALLOC_Free
;;;208      GUI_UNLOCK();
000182  f7fffffe          BL       GUI_Unlock
;;;209    }
000186  bd10              POP      {r4,pc}
;;;210    
                          ENDP

                  GUI_TIMER_SetPeriod PROC
;;;214    */
;;;215    void GUI_TIMER_SetPeriod(GUI_TIMER_HANDLE hObj, GUI_TIMER_TIME Period) {
000188  b570              PUSH     {r4-r6,lr}
00018a  4605              MOV      r5,r0
00018c  460c              MOV      r4,r1
;;;216      GUI_LOCK(); {
00018e  f7fffffe          BL       GUI_Lock
;;;217        GUI_TIMER_Obj* pObj = GUI_TIMER_H2P(hObj);
000192  4628              MOV      r0,r5
000194  f7fffffe          BL       GUI_ALLOC_h2p
000198  4606              MOV      r6,r0
;;;218        pObj->Period = Period;
00019a  6174              STR      r4,[r6,#0x14]
;;;219      } GUI_UNLOCK(); 
00019c  f7fffffe          BL       GUI_Unlock
;;;220    }
0001a0  bd70              POP      {r4-r6,pc}
;;;221    
                          ENDP

                  GUI_TIMER_SetTime PROC
;;;225    */
;;;226    void GUI_TIMER_SetTime(GUI_TIMER_HANDLE hObj, GUI_TIMER_TIME Time) {
0001a2  b570              PUSH     {r4-r6,lr}
0001a4  4605              MOV      r5,r0
0001a6  460c              MOV      r4,r1
;;;227      GUI_LOCK(); {
0001a8  f7fffffe          BL       GUI_Lock
;;;228       	GUI_TIMER_Obj* pObj = GUI_TIMER_H2P(hObj);
0001ac  4628              MOV      r0,r5
0001ae  f7fffffe          BL       GUI_ALLOC_h2p
0001b2  4606              MOV      r6,r0
;;;229        pObj->t0 = Time;
0001b4  6134              STR      r4,[r6,#0x10]
;;;230      } GUI_UNLOCK(); 
0001b6  f7fffffe          BL       GUI_Unlock
;;;231    }
0001ba  bd70              POP      {r4-r6,pc}
;;;232    
                          ENDP

                  GUI_TIMER_Context PROC
;;;233    //////
;;;234    void GUI_TIMER_Context(GUI_TIMER_HANDLE hObj, U32 Context) {
0001bc  b570              PUSH     {r4-r6,lr}
0001be  4605              MOV      r5,r0
0001c0  460c              MOV      r4,r1
;;;235      GUI_LOCK(); {
0001c2  f7fffffe          BL       GUI_Lock
;;;236       	GUI_TIMER_Obj* pObj = GUI_TIMER_H2P(hObj);
0001c6  4628              MOV      r0,r5
0001c8  f7fffffe          BL       GUI_ALLOC_h2p
0001cc  4606              MOV      r6,r0
;;;237        pObj->Context = Context;
0001ce  60f4              STR      r4,[r6,#0xc]
;;;238      } GUI_UNLOCK(); 
0001d0  f7fffffe          BL       GUI_Unlock
;;;239    }
0001d4  bd70              POP      {r4-r6,pc}
;;;240    //////
                          ENDP

                  GUI_TIMER_SetDelay PROC
;;;245    */
;;;246    void GUI_TIMER_SetDelay(GUI_TIMER_HANDLE hObj, GUI_TIMER_TIME Delay) {
0001d6  b570              PUSH     {r4-r6,lr}
0001d8  4605              MOV      r5,r0
0001da  460c              MOV      r4,r1
;;;247      GUI_LOCK(); {
0001dc  f7fffffe          BL       GUI_Lock
;;;248       	GUI_TIMER_Obj* pObj = GUI_TIMER_H2P(hObj);
0001e0  4628              MOV      r0,r5
0001e2  f7fffffe          BL       GUI_ALLOC_h2p
0001e6  4606              MOV      r6,r0
;;;249        pObj->t0 = Delay;
0001e8  6134              STR      r4,[r6,#0x10]
;;;250    		_Unlink(hObj);
0001ea  4628              MOV      r0,r5
0001ec  f7fffffe          BL       _Unlink
;;;251    		_Link(hObj);
0001f0  4628              MOV      r0,r5
0001f2  f7fffffe          BL       _Link
;;;252      } GUI_UNLOCK(); 
0001f6  f7fffffe          BL       GUI_Unlock
;;;253    }
0001fa  bd70              POP      {r4-r6,pc}
;;;254    
                          ENDP

                  GUI_TIMER_Restart PROC
;;;258    */
;;;259    void GUI_TIMER_Restart(GUI_TIMER_HANDLE hObj) {
0001fc  b570              PUSH     {r4-r6,lr}
0001fe  4605              MOV      r5,r0
;;;260      GUI_TIMER_Obj* pObj;
;;;261      GUI_LOCK();
000200  f7fffffe          BL       GUI_Lock
;;;262      {
;;;263        if (hObj == 0) {
000204  b915              CBNZ     r5,|L1.524|
;;;264          hObj = _hActiveTimer;
000206  480b              LDR      r0,|L1.564|
000208  f9b05000          LDRSH    r5,[r0,#0]  ; _hActiveTimer
                  |L1.524|
;;;265        }
;;;266       	pObj = GUI_TIMER_H2P(hObj);
00020c  4628              MOV      r0,r5
00020e  f7fffffe          BL       GUI_ALLOC_h2p
000212  4604              MOV      r4,r0
;;;267        pObj->t0 = GUI_GetTime() +pObj->Period;
000214  f7fffffe          BL       GUI_GetTime
000218  6961              LDR      r1,[r4,#0x14]
00021a  4408              ADD      r0,r0,r1
00021c  6120              STR      r0,[r4,#0x10]
;;;268    		_Unlink(hObj);
00021e  4628              MOV      r0,r5
000220  f7fffffe          BL       _Unlink
;;;269    		_Link(hObj);
000224  4628              MOV      r0,r5
000226  f7fffffe          BL       _Link
;;;270      } GUI_UNLOCK(); 
00022a  f7fffffe          BL       GUI_Unlock
;;;271    }
00022e  bd70              POP      {r4-r6,pc}
;;;272    
                          ENDP

                  |L1.560|
                          DCD      hFirstTimer
                  |L1.564|
                          DCD      _hActiveTimer
                  |L1.568|
                          DCD      GUI_pfTimerExec

                          AREA ||.data||, DATA, ALIGN=1

                  hFirstTimer
000000  0000              DCB      0x00,0x00
                  _hActiveTimer
000002  0000              DCB      0x00,0x00
