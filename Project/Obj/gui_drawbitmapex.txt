; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [--debug -c --asm --interleave -o.\Obj\gui_drawbitmapex.o --depend=.\Obj\gui_drawbitmapex.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\Libraries\CMSIS\CM3\CoreSupport -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x\startup\arm -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\User -I..\BaseDrive -I..\Ucosii -I..\Ucosii\Port -I..\Ucosii\Src -I..\Ucosii\Include -I..\Ucgui -I..\Ucgui\Config -I..\Ucgui\GUI_X -I..\Ucgui\GUI -I..\Ucgui\GUI\ConvertColor -I..\Ucgui\GUI\ConvertMono -I..\Ucgui\GUI\Core -I..\Ucgui\GUI\Core -I..\Ucgui\GUI\LCDDriver -I..\Ucgui\GUI\MultiLayer -I..\Ucgui\GUI\Widget -I..\Ucgui\GUI\WM -I..\ExternalDrive\Lcd -I..\ExternalDrive\Touch -I..\Panel -ID:\Keil\ARM\INC -ID:\Keil\ARM\INC\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=.\Obj\gui_drawbitmapex.crf ..\Ucgui\GUI\Core\GUI_DrawBitmapEx.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  GL_DrawBitmapEx PROC
;;;32     */
;;;33     static void GL_DrawBitmapEx(const GUI_BITMAP GUI_UNI_PTR * pBitmap, int x0, int y0,
000000  e92d4fff          PUSH     {r0-r11,lr}
;;;34                                 int xCenter, int yCenter, int xMag, int yMag) {
000004  b08f              SUB      sp,sp,#0x3c
000006  4604              MOV      r4,r0
000008  460d              MOV      r5,r1
;;;35       LCD_PIXELINDEX Index, IndexPrev = 0;
00000a  2000              MOVS     r0,#0
00000c  900e              STR      r0,[sp,#0x38]
;;;36       LCD_COLOR Color;
;;;37       int x, y, xi, yi, xSize, ySize, xAct, xStart, xMagAbs, xiMag, yMin, yMax, yEnd, yPrev, yStep;
;;;38       char Cached, HasTrans = 0;
00000e  9001              STR      r0,[sp,#4]
;;;39       /* Use clipping rect to reduce calculation */
;;;40       yMin = GUI_Context.ClipRect.y0;
000010  48ca              LDR      r0,|L1.828|
000012  f9b00006          LDRSH    r0,[r0,#6]
000016  9006              STR      r0,[sp,#0x18]
;;;41       yMax = GUI_Context.ClipRect.y1;
000018  48c8              LDR      r0,|L1.828|
00001a  f9b0000a          LDRSH    r0,[r0,#0xa]
00001e  9005              STR      r0,[sp,#0x14]
;;;42       /* Init some values */
;;;43       xSize    = pBitmap->XSize;
000020  8820              LDRH     r0,[r4,#0]
000022  900b              STR      r0,[sp,#0x2c]
;;;44       ySize    = pBitmap->YSize;
000024  8860              LDRH     r0,[r4,#2]
000026  900a              STR      r0,[sp,#0x28]
;;;45       xMagAbs  = ((xMag < 0) ? -xMag : xMag);
000028  981d              LDR      r0,[sp,#0x74]
00002a  2800              CMP      r0,#0
00002c  da02              BGE      |L1.52|
00002e  981d              LDR      r0,[sp,#0x74]
000030  4240              RSBS     r0,r0,#0
000032  e000              B        |L1.54|
                  |L1.52|
000034  981d              LDR      r0,[sp,#0x74]
                  |L1.54|
000036  9008              STR      r0,[sp,#0x20]
;;;46       x0      -= (I32)((xMag < 0) ? xSize - xCenter - 1 : xCenter) * (I32)(xMagAbs) / (I32)(1000);
000038  981d              LDR      r0,[sp,#0x74]
00003a  2800              CMP      r0,#0
00003c  da04              BGE      |L1.72|
00003e  9912              LDR      r1,[sp,#0x48]
000040  980b              LDR      r0,[sp,#0x2c]
000042  1a40              SUBS     r0,r0,r1
000044  1e40              SUBS     r0,r0,#1
000046  e000              B        |L1.74|
                  |L1.72|
000048  9812              LDR      r0,[sp,#0x48]
                  |L1.74|
00004a  9908              LDR      r1,[sp,#0x20]
00004c  4348              MULS     r0,r1,r0
00004e  f44f717a          MOV      r1,#0x3e8
000052  fb90f0f1          SDIV     r0,r0,r1
000056  1a2d              SUBS     r5,r5,r0
;;;47       yEnd     = y0 + GUI__DivideRound32(((I32)(-yCenter) * (I32)(yMag)), 1000);
000058  991c              LDR      r1,[sp,#0x70]
00005a  4249              RSBS     r1,r1,#0
00005c  9a1e              LDR      r2,[sp,#0x78]
00005e  fb01f002          MUL      r0,r1,r2
000062  f44f717a          MOV      r1,#0x3e8
000066  f7fffffe          BL       GUI__DivideRound32
00006a  9911              LDR      r1,[sp,#0x44]
00006c  eb000b01          ADD      r11,r0,r1
;;;48       yPrev    = yEnd + 1;
000070  f10b0001          ADD      r0,r11,#1
000074  9004              STR      r0,[sp,#0x10]
;;;49       yStep = (yMag < 0) ? -1 : 1;
000076  981e              LDR      r0,[sp,#0x78]
000078  2800              CMP      r0,#0
00007a  da02              BGE      |L1.130|
00007c  f04f30ff          MOV      r0,#0xffffffff
000080  e000              B        |L1.132|
                  |L1.130|
000082  2001              MOVS     r0,#1
                  |L1.132|
000084  9003              STR      r0,[sp,#0xc]
;;;50       if (pBitmap->pPal) {
000086  68e0              LDR      r0,[r4,#0xc]
000088  b120              CBZ      r0,|L1.148|
;;;51         if (pBitmap->pPal->HasTrans) {
00008a  68e0              LDR      r0,[r4,#0xc]
00008c  7900              LDRB     r0,[r0,#4]
00008e  b108              CBZ      r0,|L1.148|
;;;52           HasTrans = 1;
000090  2001              MOVS     r0,#1
000092  9001              STR      r0,[sp,#4]
                  |L1.148|
;;;53         }
;;;54       }
;;;55       for (yi = 0; yi < ySize; yi++) {
000094  f04f0900          MOV      r9,#0
000098  e0a8              B        |L1.492|
                  |L1.154|
;;;56         y = yEnd;
00009a  465e              MOV      r6,r11
;;;57         yEnd = y0 + GUI__DivideRound32(((I32)(yi + 1 - yCenter) * (I32)(yMag)), 1000);
00009c  f1090101          ADD      r1,r9,#1
0000a0  9a1c              LDR      r2,[sp,#0x70]
0000a2  1a89              SUBS     r1,r1,r2
0000a4  9a1e              LDR      r2,[sp,#0x78]
0000a6  fb01f002          MUL      r0,r1,r2
0000aa  f44f717a          MOV      r1,#0x3e8
0000ae  f7fffffe          BL       GUI__DivideRound32
0000b2  9911              LDR      r1,[sp,#0x44]
0000b4  eb000b01          ADD      r11,r0,r1
;;;58         if (y != yPrev) {
0000b8  9804              LDR      r0,[sp,#0x10]
0000ba  4286              CMP      r6,r0
0000bc  d07d              BEQ      |L1.442|
;;;59           yPrev = y;
0000be  9604              STR      r6,[sp,#0x10]
;;;60           do {
0000c0  bf00              NOP      
                  |L1.194|
;;;61             if ((y >= yMin) && (y <= yMax)) {
0000c2  9806              LDR      r0,[sp,#0x18]
0000c4  4286              CMP      r6,r0
0000c6  db7c              BLT      |L1.450|
0000c8  9805              LDR      r0,[sp,#0x14]
0000ca  4286              CMP      r6,r0
0000cc  dc79              BGT      |L1.450|
;;;62               xStart = -1;
0000ce  f04f3aff          MOV      r10,#0xffffffff
;;;63               x      =  0;
0000d2  f04f0800          MOV      r8,#0
;;;64               xiMag  =  0;
0000d6  2000              MOVS     r0,#0
0000d8  9007              STR      r0,[sp,#0x1c]
;;;65               Cached =  0;
0000da  9002              STR      r0,[sp,#8]
;;;66               for (xi = 0; xi < xSize; xi++) {
0000dc  900c              STR      r0,[sp,#0x30]
0000de  e05f              B        |L1.416|
                  |L1.224|
;;;67                 xiMag += xMagAbs;
0000e0  e9dd0107          LDRD     r0,r1,[sp,#0x1c]
0000e4  4408              ADD      r0,r0,r1
0000e6  9007              STR      r0,[sp,#0x1c]
;;;68                 if (xiMag >= 1000) {
0000e8  9807              LDR      r0,[sp,#0x1c]
0000ea  f5b07f7a          CMP      r0,#0x3e8
0000ee  db54              BLT      |L1.410|
;;;69                   xAct  = (xMag > 0) ? xi : xSize - xi - 1;
0000f0  981d              LDR      r0,[sp,#0x74]
0000f2  2800              CMP      r0,#0
0000f4  dd01              BLE      |L1.250|
0000f6  980c              LDR      r0,[sp,#0x30]
0000f8  e003              B        |L1.258|
                  |L1.250|
0000fa  e9dd010b          LDRD     r0,r1,[sp,#0x2c]
0000fe  1a40              SUBS     r0,r0,r1
000100  1e40              SUBS     r0,r0,#1
                  |L1.258|
000102  9009              STR      r0,[sp,#0x24]
;;;70                   Index = GUI_GetBitmapPixelIndex(pBitmap, xAct, yi);
000104  464a              MOV      r2,r9
000106  4620              MOV      r0,r4
000108  9909              LDR      r1,[sp,#0x24]
00010a  f7fffffe          BL       GUI_GetBitmapPixelIndex
00010e  b287              UXTH     r7,r0
;;;71                   if (Index != IndexPrev || xStart == -1) {
000110  980e              LDR      r0,[sp,#0x38]
000112  4287              CMP      r7,r0
000114  d102              BNE      |L1.284|
000116  f11a0001          ADDS     r0,r10,#1
00011a  d133              BNE      |L1.388|
                  |L1.284|
;;;72                     if ((Index == 0) && HasTrans) {
00011c  b977              CBNZ     r7,|L1.316|
00011e  9801              LDR      r0,[sp,#4]
000120  b160              CBZ      r0,|L1.316|
;;;73                       /* Transparent color ... clear cache */
;;;74                       if (Cached) {
000122  9802              LDR      r0,[sp,#8]
000124  b368              CBZ      r0,|L1.386|
;;;75                         LCD_DrawHLine(x0 + xStart, y, x0 + x - 1);
000126  eb050108          ADD      r1,r5,r8
00012a  1e4a              SUBS     r2,r1,#1
00012c  eb05000a          ADD      r0,r5,r10
000130  4631              MOV      r1,r6
000132  f7fffffe          BL       LCD_DrawHLine
;;;76                         Cached = 0;
000136  2000              MOVS     r0,#0
000138  9002              STR      r0,[sp,#8]
00013a  e022              B        |L1.386|
                  |L1.316|
;;;77                       }
;;;78                     } else {
;;;79                       /* Another color ... draw contents of cache */
;;;80                       if (Cached && xStart != -1) {
00013c  9802              LDR      r0,[sp,#8]
00013e  b150              CBZ      r0,|L1.342|
000140  f11a0001          ADDS     r0,r10,#1
000144  d007              BEQ      |L1.342|
;;;81                         LCD_DrawHLine(x0 + xStart, y, x0 + x - 1);
000146  eb050108          ADD      r1,r5,r8
00014a  1e4a              SUBS     r2,r1,#1
00014c  eb05000a          ADD      r0,r5,r10
000150  4631              MOV      r1,r6
000152  f7fffffe          BL       LCD_DrawHLine
                  |L1.342|
;;;82                       }
;;;83                       xStart    = x;
000156  46c2              MOV      r10,r8
;;;84                       Cached    = 1;
000158  2001              MOVS     r0,#1
00015a  9002              STR      r0,[sp,#8]
;;;85                       if (pBitmap->pMethods) {
00015c  6920              LDR      r0,[r4,#0x10]
00015e  b128              CBZ      r0,|L1.364|
;;;86                         Color = pBitmap->pMethods->pfIndex2Color(Index);
000160  6920              LDR      r0,[r4,#0x10]
000162  6841              LDR      r1,[r0,#4]
000164  4638              MOV      r0,r7
000166  4788              BLX      r1
000168  900d              STR      r0,[sp,#0x34]
00016a  e004              B        |L1.374|
                  |L1.364|
;;;87                       } else {
;;;88                         Color = pBitmap->pPal->pPalEntries[Index];
00016c  68e0              LDR      r0,[r4,#0xc]
00016e  6880              LDR      r0,[r0,#8]
000170  f8500027          LDR      r0,[r0,r7,LSL #2]
000174  900d              STR      r0,[sp,#0x34]
                  |L1.374|
;;;89                       }
;;;90                       LCD_SetColorIndex(LCDDEV_L0_Color2Index(Color));
000176  980d              LDR      r0,[sp,#0x34]
000178  f7fffffe          BL       LCD_L0_Color2Index
00017c  9000              STR      r0,[sp,#0]
00017e  f7fffffe          BL       LCD_SetColorIndex
                  |L1.386|
;;;91                     }
;;;92                     IndexPrev = Index;
000182  970e              STR      r7,[sp,#0x38]
                  |L1.388|
;;;93                   }
;;;94                   do {
000184  bf00              NOP      
                  |L1.390|
;;;95                     x++;
000186  f1080801          ADD      r8,r8,#1
;;;96                     xiMag -= 1000;
00018a  9807              LDR      r0,[sp,#0x1c]
00018c  f5a0707a          SUB      r0,r0,#0x3e8
000190  9007              STR      r0,[sp,#0x1c]
;;;97                   } while (xiMag >= 1000);
000192  9807              LDR      r0,[sp,#0x1c]
000194  f5b07f7a          CMP      r0,#0x3e8
000198  daf5              BGE      |L1.390|
                  |L1.410|
00019a  980c              LDR      r0,[sp,#0x30]         ;66
00019c  1c40              ADDS     r0,r0,#1              ;66
00019e  900c              STR      r0,[sp,#0x30]         ;66
                  |L1.416|
0001a0  e9dd100b          LDRD     r1,r0,[sp,#0x2c]      ;66
0001a4  4288              CMP      r0,r1                 ;66
0001a6  db9b              BLT      |L1.224|
;;;98                 }
;;;99               }
;;;100              /* Clear cache */
;;;101              if (Cached) {
0001a8  9802              LDR      r0,[sp,#8]
0001aa  b138              CBZ      r0,|L1.444|
;;;102                LCD_DrawHLine(x0 + xStart, y, x0 + x - 1);
0001ac  eb050108          ADD      r1,r5,r8
0001b0  1e4a              SUBS     r2,r1,#1
0001b2  eb05000a          ADD      r0,r5,r10
0001b6  4631              MOV      r1,r6
0001b8  e001              B        |L1.446|
                  |L1.442|
0001ba  e015              B        |L1.488|
                  |L1.444|
0001bc  e001              B        |L1.450|
                  |L1.446|
0001be  f7fffffe          BL       LCD_DrawHLine
                  |L1.450|
;;;103              }
;;;104            }
;;;105            y += yStep;
0001c2  9803              LDR      r0,[sp,#0xc]
0001c4  4406              ADD      r6,r6,r0
;;;106          } while ((yMag < 0) ? (y > yEnd) : (y < yEnd));
0001c6  981e              LDR      r0,[sp,#0x78]
0001c8  2800              CMP      r0,#0
0001ca  da05              BGE      |L1.472|
0001cc  455e              CMP      r6,r11
0001ce  dd01              BLE      |L1.468|
0001d0  2001              MOVS     r0,#1
0001d2  e006              B        |L1.482|
                  |L1.468|
0001d4  2000              MOVS     r0,#0
0001d6  e004              B        |L1.482|
                  |L1.472|
0001d8  455e              CMP      r6,r11
0001da  da01              BGE      |L1.480|
0001dc  2001              MOVS     r0,#1
0001de  e000              B        |L1.482|
                  |L1.480|
0001e0  2000              MOVS     r0,#0
                  |L1.482|
0001e2  2800              CMP      r0,#0
0001e4  f47faf6d          BNE      |L1.194|
                  |L1.488|
0001e8  f1090901          ADD      r9,r9,#1              ;55
                  |L1.492|
0001ec  980a              LDR      r0,[sp,#0x28]         ;55
0001ee  4581              CMP      r9,r0                 ;55
0001f0  f6ffaf53          BLT      |L1.154|
;;;107        }
;;;108      }
;;;109    }
0001f4  b013              ADD      sp,sp,#0x4c
0001f6  e8bd8ff0          POP      {r4-r11,pc}
;;;110    
                          ENDP

                  GUI_DrawBitmapEx PROC
;;;120    */
;;;121    void GUI_DrawBitmapEx(const GUI_BITMAP GUI_UNI_PTR * pBitmap, int x0, int y0,
0001fa  e92d4ff0          PUSH     {r4-r11,lr}
;;;122                          int xCenter, int yCenter, int xMag, int yMag) {
0001fe  b085              SUB      sp,sp,#0x14
000200  4680              MOV      r8,r0
000202  460c              MOV      r4,r1
000204  4615              MOV      r5,r2
000206  4699              MOV      r9,r3
000208  e9dda60e          LDRD     r10,r6,[sp,#0x38]
00020c  9f10              LDR      r7,[sp,#0x40]
;;;123      GUI_COLOR OldColor;
;;;124      #if (GUI_WINSUPPORT)
;;;125        GUI_RECT r;
;;;126      #endif
;;;127      GUI_LOCK();
00020e  f7fffffe          BL       GUI_Lock
;;;128      OldColor = GUI_GetColor();
000212  f7fffffe          BL       GUI_GetColor
000216  4683              MOV      r11,r0
;;;129      #if (GUI_WINSUPPORT)
;;;130        WM_ADDORG(x0, y0);
000218  4848              LDR      r0,|L1.828|
00021a  6c00              LDR      r0,[r0,#0x40]  ; GUI_Context
00021c  4404              ADD      r4,r4,r0
00021e  4847              LDR      r0,|L1.828|
000220  6c40              LDR      r0,[r0,#0x44]  ; GUI_Context
000222  4405              ADD      r5,r5,r0
;;;131        if (xMag >= 0) {
000224  2e00              CMP      r6,#0
000226  db1b              BLT      |L1.608|
;;;132          r.x0 = x0 + GUI__DivideRound32(((I32)(-xCenter) * (I32)(xMag)), 1000);
000228  f1c90100          RSB      r1,r9,#0
00022c  fb01f006          MUL      r0,r1,r6
000230  f44f717a          MOV      r1,#0x3e8
000234  f7fffffe          BL       GUI__DivideRound32
000238  4420              ADD      r0,r0,r4
00023a  b200              SXTH     r0,r0
00023c  f8ad000c          STRH     r0,[sp,#0xc]
;;;133          r.x1 = x0 + GUI__DivideRound32(((I32)(pBitmap->XSize - xCenter - 1) * (I32)(xMag)), 1000);
000240  f8b81000          LDRH     r1,[r8,#0]
000244  eba10109          SUB      r1,r1,r9
000248  1e49              SUBS     r1,r1,#1
00024a  fb01f006          MUL      r0,r1,r6
00024e  f44f717a          MOV      r1,#0x3e8
000252  f7fffffe          BL       GUI__DivideRound32
000256  4420              ADD      r0,r0,r4
000258  b200              SXTH     r0,r0
00025a  f8ad0010          STRH     r0,[sp,#0x10]
00025e  e01a              B        |L1.662|
                  |L1.608|
;;;134        } else {
;;;135          r.x1 = x0 + GUI__DivideRound32(((I32)(-xCenter) * (I32)(xMag)), 1000);
000260  f1c90100          RSB      r1,r9,#0
000264  fb01f006          MUL      r0,r1,r6
000268  f44f717a          MOV      r1,#0x3e8
00026c  f7fffffe          BL       GUI__DivideRound32
000270  4420              ADD      r0,r0,r4
000272  b200              SXTH     r0,r0
000274  f8ad0010          STRH     r0,[sp,#0x10]
;;;136          r.x0 = x0 + GUI__DivideRound32(((I32)(pBitmap->XSize - xCenter - 1) * (I32)(xMag)), 1000);
000278  f8b81000          LDRH     r1,[r8,#0]
00027c  eba10109          SUB      r1,r1,r9
000280  1e49              SUBS     r1,r1,#1
000282  fb01f006          MUL      r0,r1,r6
000286  f44f717a          MOV      r1,#0x3e8
00028a  f7fffffe          BL       GUI__DivideRound32
00028e  4420              ADD      r0,r0,r4
000290  b200              SXTH     r0,r0
000292  f8ad000c          STRH     r0,[sp,#0xc]
                  |L1.662|
;;;137        }
;;;138        if (yMag >= 0) {
000296  2f00              CMP      r7,#0
000298  db1b              BLT      |L1.722|
;;;139          r.y0 = y0 + GUI__DivideRound32(((I32)(-yCenter) * (I32)(yMag)), 1000);
00029a  f1ca0100          RSB      r1,r10,#0
00029e  fb01f007          MUL      r0,r1,r7
0002a2  f44f717a          MOV      r1,#0x3e8
0002a6  f7fffffe          BL       GUI__DivideRound32
0002aa  4428              ADD      r0,r0,r5
0002ac  b200              SXTH     r0,r0
0002ae  f8ad000e          STRH     r0,[sp,#0xe]
;;;140          r.y1 = y0 + GUI__DivideRound32(((I32)(pBitmap->YSize - yCenter - 1) * (I32)(yMag)), 1000);
0002b2  f8b81002          LDRH     r1,[r8,#2]
0002b6  eba1010a          SUB      r1,r1,r10
0002ba  1e49              SUBS     r1,r1,#1
0002bc  fb01f007          MUL      r0,r1,r7
0002c0  f44f717a          MOV      r1,#0x3e8
0002c4  f7fffffe          BL       GUI__DivideRound32
0002c8  4428              ADD      r0,r0,r5
0002ca  b200              SXTH     r0,r0
0002cc  f8ad0012          STRH     r0,[sp,#0x12]
0002d0  e01a              B        |L1.776|
                  |L1.722|
;;;141        } else {
;;;142          r.y1 = y0 + GUI__DivideRound32(((I32)(-yCenter) * (I32)(yMag)), 1000);
0002d2  f1ca0100          RSB      r1,r10,#0
0002d6  fb01f007          MUL      r0,r1,r7
0002da  f44f717a          MOV      r1,#0x3e8
0002de  f7fffffe          BL       GUI__DivideRound32
0002e2  4428              ADD      r0,r0,r5
0002e4  b200              SXTH     r0,r0
0002e6  f8ad0012          STRH     r0,[sp,#0x12]
;;;143          r.y0 = y0 + GUI__DivideRound32(((I32)(pBitmap->YSize - yCenter - 1) * (I32)(yMag)), 1000);
0002ea  f8b81002          LDRH     r1,[r8,#2]
0002ee  eba1010a          SUB      r1,r1,r10
0002f2  1e49              SUBS     r1,r1,#1
0002f4  fb01f007          MUL      r0,r1,r7
0002f8  f44f717a          MOV      r1,#0x3e8
0002fc  f7fffffe          BL       GUI__DivideRound32
000300  4428              ADD      r0,r0,r5
000302  b200              SXTH     r0,r0
000304  f8ad000e          STRH     r0,[sp,#0xe]
                  |L1.776|
;;;144        }
;;;145        WM_ITERATE_START(&r) {
000308  a803              ADD      r0,sp,#0xc
00030a  f7fffffe          BL       WM__InitIVRSearch
00030e  b168              CBZ      r0,|L1.812|
000310  bf00              NOP      
                  |L1.786|
;;;146      #endif
;;;147      GL_DrawBitmapEx(pBitmap, x0, y0, xCenter, yCenter, xMag, yMag);
000312  464b              MOV      r3,r9
000314  462a              MOV      r2,r5
000316  4621              MOV      r1,r4
000318  4640              MOV      r0,r8
00031a  e9cda600          STRD     r10,r6,[sp,#0]
00031e  9702              STR      r7,[sp,#8]
000320  f7fffffe          BL       GL_DrawBitmapEx
;;;148      #if (GUI_WINSUPPORT)
;;;149        } WM_ITERATE_END();
000324  f7fffffe          BL       WM__GetNextIVR
000328  2800              CMP      r0,#0
00032a  d1f2              BNE      |L1.786|
                  |L1.812|
;;;150      #endif
;;;151      GUI_SetColor(OldColor);
00032c  4658              MOV      r0,r11
00032e  f7fffffe          BL       GUI_SetColor
;;;152      GUI_UNLOCK();
000332  f7fffffe          BL       GUI_Unlock
;;;153    }
000336  b005              ADD      sp,sp,#0x14
000338  e8bd8ff0          POP      {r4-r11,pc}
;;;154    
                          ENDP

                  |L1.828|
                          DCD      GUI_Context
