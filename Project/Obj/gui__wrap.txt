; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [--debug -c --asm --interleave -o.\Obj\gui__wrap.o --depend=.\Obj\gui__wrap.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\Libraries\CMSIS\CM3\CoreSupport -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x\startup\arm -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\User -I..\BaseDrive -I..\Ucosii -I..\Ucosii\Port -I..\Ucosii\Src -I..\Ucosii\Include -I..\Ucgui -I..\Ucgui\Config -I..\Ucgui\GUI_X -I..\Ucgui\GUI -I..\Ucgui\GUI\ConvertColor -I..\Ucgui\GUI\ConvertMono -I..\Ucgui\GUI\Core -I..\Ucgui\GUI\Core -I..\Ucgui\GUI\LCDDriver -I..\Ucgui\GUI\MultiLayer -I..\Ucgui\GUI\Widget -I..\Ucgui\GUI\WM -I..\ExternalDrive\Lcd -I..\ExternalDrive\Touch -I..\Panel -ID:\Keil\ARM\INC -ID:\Keil\ARM\INC\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=.\Obj\gui__wrap.crf ..\Ucgui\GUI\Core\GUI__Wrap.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=1

                  _IsLineEnd PROC
;;;31     */
;;;32     static int _IsLineEnd(U16 Char) {
000000  4601              MOV      r1,r0
;;;33       if (!Char || (Char == '\n')) {
000002  b109              CBZ      r1,|L1.8|
000004  290a              CMP      r1,#0xa
000006  d101              BNE      |L1.12|
                  |L1.8|
;;;34         return 1;
000008  2001              MOVS     r0,#1
                  |L1.10|
;;;35       }
;;;36       return 0;
;;;37     }
00000a  4770              BX       lr
                  |L1.12|
00000c  2000              MOVS     r0,#0                 ;36
00000e  e7fc              B        |L1.10|
;;;38     
                          ENDP

                  _GetWordWrap PROC
;;;42     */
;;;43     static int _GetWordWrap(const char GUI_UNI_PTR * s, int xSize) {
000010  e92d47f3          PUSH     {r0,r1,r4-r10,lr}
000014  460e              MOV      r6,r1
;;;44       int xDist = 0, NumChars = 0, WordWrap = 0;
000016  2700              MOVS     r7,#0
000018  2400              MOVS     r4,#0
00001a  46a0              MOV      r8,r4
;;;45       U16 Char, PrevChar = 0;
00001c  46a1              MOV      r9,r4
;;;46       while (1) {
00001e  e019              B        |L1.84|
                  |L1.32|
;;;47         Char = GUI_UC__GetCharCodeInc(&s);   /* Similar to:  *s++ */
000020  4668              MOV      r0,sp
000022  f7fffffe          BL       GUI_UC__GetCharCodeInc
000026  4605              MOV      r5,r0
;;;48         /* Let's first check if the line end is reached. In this case we are done. */
;;;49         if (_IsLineEnd(Char)) {
000028  4628              MOV      r0,r5
00002a  f7fffffe          BL       _IsLineEnd
00002e  b108              CBZ      r0,|L1.52|
;;;50           WordWrap = NumChars;
000030  46a0              MOV      r8,r4
;;;51           break;
000032  e010              B        |L1.86|
                  |L1.52|
;;;52         }
;;;53         /* If current character is a space, we found a wrap position */
;;;54         if ((Char == ' ') && (Char != PrevChar)) {
000034  2d20              CMP      r5,#0x20
000036  d102              BNE      |L1.62|
000038  454d              CMP      r5,r9
00003a  d000              BEQ      |L1.62|
;;;55           WordWrap = NumChars;
00003c  46a0              MOV      r8,r4
                  |L1.62|
;;;56         }
;;;57         PrevChar = Char;
00003e  46a9              MOV      r9,r5
;;;58         xDist += GUI_GetCharDistX(Char);
000040  4628              MOV      r0,r5
000042  f7fffffe          BL       GUI_GetCharDistX
000046  4407              ADD      r7,r7,r0
;;;59         if ((xDist <= xSize) || (NumChars == 0)) {
000048  42b7              CMP      r7,r6
00004a  dd00              BLE      |L1.78|
00004c  b90c              CBNZ     r4,|L1.82|
                  |L1.78|
;;;60           NumChars++;
00004e  1c64              ADDS     r4,r4,#1
000050  e000              B        |L1.84|
                  |L1.82|
;;;61         } else {
;;;62           break;
000052  e000              B        |L1.86|
                  |L1.84|
000054  e7e4              B        |L1.32|
                  |L1.86|
000056  bf00              NOP                            ;51
;;;63         }
;;;64       }
;;;65       if (!WordWrap) {
000058  f1b80f00          CMP      r8,#0
00005c  d100              BNE      |L1.96|
;;;66         WordWrap = NumChars;
00005e  46a0              MOV      r8,r4
                  |L1.96|
;;;67       }
;;;68       return WordWrap;
000060  4640              MOV      r0,r8
;;;69     }
000062  e8bd87fc          POP      {r2-r10,pc}
;;;70     
                          ENDP

                  _GetCharWrap PROC
;;;74     */
;;;75     static int _GetCharWrap(const char GUI_UNI_PTR * s, int xSize) {
000066  e92d41f3          PUSH     {r0,r1,r4-r8,lr}
00006a  460e              MOV      r6,r1
;;;76       int xDist = 0, NumChars = 0;
00006c  2700              MOVS     r7,#0
00006e  2400              MOVS     r4,#0
;;;77       U16 Char;
;;;78       while ((Char = GUI_UC__GetCharCodeInc(&s)) != 0) {
000070  e00a              B        |L1.136|
                  |L1.114|
;;;79         xDist += GUI_GetCharDistX(Char);
000072  4628              MOV      r0,r5
000074  f7fffffe          BL       GUI_GetCharDistX
000078  4407              ADD      r7,r7,r0
;;;80         if ((NumChars && (xDist > xSize)) || (Char == '\n')) {
00007a  b10c              CBZ      r4,|L1.128|
00007c  42b7              CMP      r7,r6
00007e  dc01              BGT      |L1.132|
                  |L1.128|
000080  2d0a              CMP      r5,#0xa
000082  d100              BNE      |L1.134|
                  |L1.132|
;;;81           break;
000084  e005              B        |L1.146|
                  |L1.134|
;;;82         }
;;;83         NumChars++;
000086  1c64              ADDS     r4,r4,#1
                  |L1.136|
000088  4668              MOV      r0,sp                 ;78
00008a  f7fffffe          BL       GUI_UC__GetCharCodeInc
00008e  0005              MOVS     r5,r0                 ;78
000090  d1ef              BNE      |L1.114|
                  |L1.146|
000092  bf00              NOP                            ;81
;;;84       }
;;;85       return NumChars;
000094  4620              MOV      r0,r4
;;;86     }
000096  e8bd81fc          POP      {r2-r8,pc}
;;;87     
                          ENDP

                  _GetNoWrap PROC
;;;91     */
;;;92     static int _GetNoWrap(const char GUI_UNI_PTR * s) {
00009a  b510              PUSH     {r4,lr}
00009c  4604              MOV      r4,r0
;;;93       return GUI__GetLineNumChars(s, 0x7FFF);
00009e  f64771ff          MOV      r1,#0x7fff
0000a2  4620              MOV      r0,r4
0000a4  f7fffffe          BL       GUI__GetLineNumChars
;;;94     }
0000a8  bd10              POP      {r4,pc}
;;;95     
                          ENDP

                  GUI__WrapGetNumCharsDisp PROC
;;;110    */
;;;111    int GUI__WrapGetNumCharsDisp(const char GUI_UNI_PTR * pText, int xSize, GUI_WRAPMODE WrapMode) {
0000aa  e92d41f0          PUSH     {r4-r8,lr}
0000ae  4606              MOV      r6,r0
0000b0  460f              MOV      r7,r1
0000b2  4615              MOV      r5,r2
;;;112      int r;
;;;113      switch (WrapMode) {
0000b4  2d01              CMP      r5,#1
0000b6  d002              BEQ      |L1.190|
0000b8  2d02              CMP      r5,#2
0000ba  d10c              BNE      |L1.214|
0000bc  e005              B        |L1.202|
                  |L1.190|
;;;114      case GUI_WRAPMODE_WORD:
;;;115        r = _GetWordWrap(pText, xSize);
0000be  4639              MOV      r1,r7
0000c0  4630              MOV      r0,r6
0000c2  f7fffffe          BL       _GetWordWrap
0000c6  4604              MOV      r4,r0
;;;116        break;
0000c8  e00a              B        |L1.224|
                  |L1.202|
;;;117      case GUI_WRAPMODE_CHAR:
;;;118        r = _GetCharWrap(pText, xSize);
0000ca  4639              MOV      r1,r7
0000cc  4630              MOV      r0,r6
0000ce  f7fffffe          BL       _GetCharWrap
0000d2  4604              MOV      r4,r0
;;;119        break;
0000d4  e004              B        |L1.224|
                  |L1.214|
;;;120      default:
;;;121        r = _GetNoWrap(pText);
0000d6  4630              MOV      r0,r6
0000d8  f7fffffe          BL       _GetNoWrap
0000dc  4604              MOV      r4,r0
0000de  bf00              NOP                            ;113
                  |L1.224|
0000e0  bf00              NOP                            ;116
;;;122      }
;;;123      return r;
0000e2  4620              MOV      r0,r4
;;;124    }
0000e4  e8bd81f0          POP      {r4-r8,pc}
;;;125    
                          ENDP

                  GUI__WrapGetNumCharsToNextLine PROC
;;;129    */
;;;130    int GUI__WrapGetNumCharsToNextLine(const char GUI_UNI_PTR * pText, int xSize, GUI_WRAPMODE WrapMode) {
0000e8  b5f7              PUSH     {r0-r2,r4-r7,lr}
0000ea  460f              MOV      r7,r1
0000ec  4615              MOV      r5,r2
;;;131      int NumChars;
;;;132      U16 Char;
;;;133      NumChars = GUI__WrapGetNumCharsDisp(pText, xSize, WrapMode);
0000ee  462a              MOV      r2,r5
0000f0  4639              MOV      r1,r7
0000f2  9800              LDR      r0,[sp,#0]
0000f4  f7fffffe          BL       GUI__WrapGetNumCharsDisp
0000f8  4604              MOV      r4,r0
;;;134      pText   += GUI_UC__NumChars2NumBytes(pText, NumChars);
0000fa  4621              MOV      r1,r4
0000fc  9800              LDR      r0,[sp,#0]
0000fe  f7fffffe          BL       GUI_UC__NumChars2NumBytes
000102  9900              LDR      r1,[sp,#0]
000104  4408              ADD      r0,r0,r1
000106  9000              STR      r0,[sp,#0]
;;;135      Char     = GUI_UC__GetCharCodeInc(&pText);
000108  4668              MOV      r0,sp
00010a  f7fffffe          BL       GUI_UC__GetCharCodeInc
00010e  4606              MOV      r6,r0
;;;136      if (Char == '\n') {
000110  2e0a              CMP      r6,#0xa
000112  d101              BNE      |L1.280|
;;;137        NumChars++;
000114  1c64              ADDS     r4,r4,#1
000116  e009              B        |L1.300|
                  |L1.280|
;;;138      } else {
;;;139        if (WrapMode == GUI_WRAPMODE_WORD) {
000118  2d01              CMP      r5,#1
00011a  d107              BNE      |L1.300|
;;;140          while (Char == ' ') {
00011c  e004              B        |L1.296|
                  |L1.286|
;;;141            NumChars++;
00011e  1c64              ADDS     r4,r4,#1
;;;142            Char = GUI_UC__GetCharCodeInc(&pText);
000120  4668              MOV      r0,sp
000122  f7fffffe          BL       GUI_UC__GetCharCodeInc
000126  4606              MOV      r6,r0
                  |L1.296|
000128  2e20              CMP      r6,#0x20              ;140
00012a  d0f8              BEQ      |L1.286|
                  |L1.300|
;;;143          }
;;;144        }
;;;145      }
;;;146      return NumChars;
00012c  4620              MOV      r0,r4
;;;147    }
00012e  bdfe              POP      {r1-r7,pc}
;;;148    
                          ENDP

                  GUI__WrapGetNumBytesToNextLine PROC
;;;152    */
;;;153    int GUI__WrapGetNumBytesToNextLine(const char GUI_UNI_PTR * pText, int xSize, GUI_WRAPMODE WrapMode) {
000130  e92d41f0          PUSH     {r4-r8,lr}
000134  4604              MOV      r4,r0
000136  460d              MOV      r5,r1
000138  4616              MOV      r6,r2
;;;154      int NumChars, NumBytes;
;;;155      NumChars = GUI__WrapGetNumCharsToNextLine(pText, xSize, WrapMode);
00013a  4632              MOV      r2,r6
00013c  4629              MOV      r1,r5
00013e  4620              MOV      r0,r4
000140  f7fffffe          BL       GUI__WrapGetNumCharsToNextLine
000144  4680              MOV      r8,r0
;;;156      NumBytes = GUI_UC__NumChars2NumBytes(pText, NumChars);
000146  4641              MOV      r1,r8
000148  4620              MOV      r0,r4
00014a  f7fffffe          BL       GUI_UC__NumChars2NumBytes
00014e  4607              MOV      r7,r0
;;;157      return NumBytes;
000150  4638              MOV      r0,r7
;;;158    }
000152  e8bd81f0          POP      {r4-r8,pc}
;;;159    
                          ENDP

