; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [--debug -c --asm --interleave -o.\Obj\listbox.o --depend=.\Obj\listbox.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\Libraries\CMSIS\CM3\CoreSupport -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x\startup\arm -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\User -I..\BaseDrive -I..\Ucosii -I..\Ucosii\Port -I..\Ucosii\Src -I..\Ucosii\Include -I..\Ucgui -I..\Ucgui\Config -I..\Ucgui\GUI_X -I..\Ucgui\GUI -I..\Ucgui\GUI\ConvertColor -I..\Ucgui\GUI\ConvertMono -I..\Ucgui\GUI\Core -I..\Ucgui\GUI\Core -I..\Ucgui\GUI\LCDDriver -I..\Ucgui\GUI\MultiLayer -I..\Ucgui\GUI\Widget -I..\Ucgui\GUI\WM -I..\ExternalDrive\Lcd -I..\ExternalDrive\Touch -I..\Panel -ID:\Keil\ARM\INC -ID:\Keil\ARM\INC\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=.\Obj\listbox.crf ..\Ucgui\GUI\Widget\LISTBOX.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  LISTBOX__GetpString PROC
;;;151    */
;;;152    const char* LISTBOX__GetpString(const LISTBOX_Obj* pObj, int Index) {
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  4604              MOV      r4,r0
000006  460e              MOV      r6,r1
;;;153      const char* s = NULL;
000008  2700              MOVS     r7,#0
;;;154      LISTBOX_ITEM* pItem = (LISTBOX_ITEM*)GUI_ARRAY_GetpItem(&pObj->ItemArray, Index);
00000a  4631              MOV      r1,r6
00000c  f1040028          ADD      r0,r4,#0x28
000010  f7fffffe          BL       GUI_ARRAY_GetpItem
000014  4605              MOV      r5,r0
;;;155      if (pItem) {
000016  b105              CBZ      r5,|L1.26|
;;;156        s = pItem->acText;
000018  1d6f              ADDS     r7,r5,#5
                  |L1.26|
;;;157      }
;;;158      return s;
00001a  4638              MOV      r0,r7
;;;159    }
00001c  e8bd81f0          POP      {r4-r8,pc}
;;;160    
                          ENDP

                  LISTBOX_OwnerDraw PROC
;;;323    */
;;;324    int LISTBOX_OwnerDraw(const WIDGET_ITEM_DRAW_INFO* pDrawItemInfo) {
000020  e92d4ff0          PUSH     {r4-r11,lr}
000024  b087              SUB      sp,sp,#0x1c
000026  4604              MOV      r4,r0
;;;325      switch (pDrawItemInfo->Cmd) {
000028  6860              LDR      r0,[r4,#4]
00002a  b348              CBZ      r0,|L1.128|
00002c  2801              CMP      r0,#1
00002e  d002              BEQ      |L1.54|
000030  2802              CMP      r0,#2
000032  d17d              BNE      |L1.304|
000034  e018              B        |L1.104|
                  |L1.54|
;;;326        case WIDGET_ITEM_GET_XSIZE: {
;;;327          LISTBOX_Obj* pObj;
;;;328          const GUI_FONT GUI_UNI_PTR* pOldFont;
;;;329          const char* s;
;;;330          int DistX;
;;;331          pObj = LISTBOX_H2P(pDrawItemInfo->hWin);
000036  f9b40000          LDRSH    r0,[r4,#0]
00003a  f7fffffe          BL       GUI_ALLOC_h2p
00003e  4605              MOV      r5,r0
;;;332          pOldFont = GUI_SetFont(pObj->Props.pFont);
000040  6ca8              LDR      r0,[r5,#0x48]
000042  f7fffffe          BL       GUI_SetFont
000046  4607              MOV      r7,r0
;;;333          s = LISTBOX__GetpString(pObj, pDrawItemInfo->ItemIndex);
000048  4628              MOV      r0,r5
00004a  68a1              LDR      r1,[r4,#8]
00004c  f7fffffe          BL       LISTBOX__GetpString
000050  4680              MOV      r8,r0
;;;334          DistX = GUI_GetStringDistX(s);
000052  4640              MOV      r0,r8
000054  f7fffffe          BL       GUI_GetStringDistX
000058  4606              MOV      r6,r0
;;;335          GUI_SetFont(pOldFont);
00005a  4638              MOV      r0,r7
00005c  f7fffffe          BL       GUI_SetFont
;;;336          return DistX;
000060  4630              MOV      r0,r6
                  |L1.98|
;;;337        }
;;;338        case WIDGET_ITEM_GET_YSIZE: {
;;;339          LISTBOX_Obj* pObj;
;;;340          pObj = LISTBOX_H2P(pDrawItemInfo->hWin);
;;;341          return GUI_GetYDistOfFont(pObj->Props.pFont) + pObj->ItemSpacing;
;;;342        }
;;;343        case WIDGET_ITEM_DRAW: {
;;;344          LISTBOX_Obj* pObj;
;;;345          LISTBOX_ITEM* pItem;
;;;346          WM_HMEM hItem;
;;;347          GUI_RECT r;
;;;348          int FontDistY;
;;;349          int ItemIndex = pDrawItemInfo->ItemIndex;
;;;350          const char* s;
;;;351          int ColorIndex;
;;;352          char IsDisabled;
;;;353          char IsSelected;
;;;354          pObj = LISTBOX_H2P(pDrawItemInfo->hWin);
;;;355          hItem = GUI_ARRAY_GethItem(&pObj->ItemArray, ItemIndex);
;;;356          pItem = (LISTBOX_ITEM *)GUI_ALLOC_h2p(hItem);
;;;357          WM_GetInsideRect(&r);
;;;358          FontDistY = GUI_GetFontDistY();
;;;359          /* Calculate color index */
;;;360          IsDisabled = (pItem->Status & LISTBOX_ITEM_DISABLED) ? 1 : 0;
;;;361          IsSelected = (pItem->Status & LISTBOX_ITEM_SELECTED) ? 1 : 0;
;;;362          if (pObj->Flags & LISTBOX_SF_MULTISEL) {
;;;363            if (IsDisabled) {
;;;364              ColorIndex = 3;
;;;365            } else {
;;;366              ColorIndex = (IsSelected) ? 2 : 0;
;;;367            }
;;;368          } else {
;;;369            if (IsDisabled) {
;;;370              ColorIndex = 3;
;;;371            } else {
;;;372              if (ItemIndex == pObj->Sel) {
;;;373                ColorIndex = (pObj->Widget.State & WIDGET_STATE_FOCUS) ? 2 : 1;
;;;374              } else {
;;;375                ColorIndex = 0;
;;;376              }
;;;377            }
;;;378          }
;;;379          /* Display item */
;;;380          LCD_SetBkColor(pObj->Props.aBackColor[ColorIndex]);
;;;381          LCD_SetColor  (pObj->Props.aTextColor[ColorIndex]);
;;;382          s = LISTBOX__GetpString(pObj, ItemIndex);
;;;383          GUI_SetTextMode(GUI_TM_TRANS);
;;;384          GUI_Clear();
;;;385          GUI_DispStringAt(s, pDrawItemInfo->x0 + 1, pDrawItemInfo->y0);
;;;386          /* Display focus rectangle */
;;;387          if ((pObj->Flags & LISTBOX_SF_MULTISEL) && (ItemIndex == pObj->Sel)) {
;;;388            GUI_RECT rFocus;
;;;389            rFocus.x0 = pDrawItemInfo->x0;
;;;390            rFocus.y0 = pDrawItemInfo->y0;
;;;391            rFocus.x1 = r.x1;
;;;392            rFocus.y1 = pDrawItemInfo->y0 + FontDistY - 1;
;;;393            LCD_SetColor(GUI_WHITE - pObj->Props.aBackColor[ColorIndex]);
;;;394            GUI_DrawFocusRect(&rFocus, 0);
;;;395          }
;;;396          return 0;
;;;397        }
;;;398      }
;;;399      return 0;
;;;400    }
000062  b007              ADD      sp,sp,#0x1c
000064  e8bd8ff0          POP      {r4-r11,pc}
                  |L1.104|
000068  f9b40000          LDRSH    r0,[r4,#0]            ;340
00006c  f7fffffe          BL       GUI_ALLOC_h2p
000070  4605              MOV      r5,r0                 ;340
000072  6ca8              LDR      r0,[r5,#0x48]         ;341
000074  f7fffffe          BL       GUI_GetYDistOfFont
000078  f8b51076          LDRH     r1,[r5,#0x76]         ;341
00007c  4408              ADD      r0,r0,r1              ;341
00007e  e7f0              B        |L1.98|
                  |L1.128|
000080  68a7              LDR      r7,[r4,#8]            ;349
000082  f9b40000          LDRSH    r0,[r4,#0]            ;354
000086  f7fffffe          BL       GUI_ALLOC_h2p
00008a  4605              MOV      r5,r0                 ;354
00008c  4639              MOV      r1,r7                 ;355
00008e  f1050028          ADD      r0,r5,#0x28           ;355
000092  f7fffffe          BL       GUI_ARRAY_GethItem
000096  9006              STR      r0,[sp,#0x18]         ;355
000098  9806              LDR      r0,[sp,#0x18]         ;356
00009a  f7fffffe          BL       GUI_ALLOC_h2p
00009e  4680              MOV      r8,r0                 ;356
0000a0  a804              ADD      r0,sp,#0x10           ;357
0000a2  f7fffffe          BL       WM_GetInsideRect
0000a6  f7fffffe          BL       GUI_GetFontDistY
0000aa  4682              MOV      r10,r0                ;358
0000ac  f8980004          LDRB     r0,[r8,#4]            ;360
0000b0  f3c00940          UBFX     r9,r0,#1,#1           ;360
0000b4  f8980004          LDRB     r0,[r8,#4]            ;361
0000b8  f0000b01          AND      r11,r0,#1             ;361
0000bc  f8950074          LDRB     r0,[r5,#0x74]         ;362
0000c0  f0100f04          TST      r0,#4                 ;362
0000c4  d00c              BEQ      |L1.224|
0000c6  f1b90f00          CMP      r9,#0                 ;363
0000ca  d001              BEQ      |L1.208|
0000cc  2603              MOVS     r6,#3                 ;364
0000ce  e01a              B        |L1.262|
                  |L1.208|
0000d0  f1bb0f00          CMP      r11,#0                ;366
0000d4  d001              BEQ      |L1.218|
0000d6  2002              MOVS     r0,#2                 ;366
0000d8  e000              B        |L1.220|
                  |L1.218|
0000da  2000              MOVS     r0,#0                 ;366
                  |L1.220|
0000dc  4606              MOV      r6,r0                 ;366
0000de  e012              B        |L1.262|
                  |L1.224|
0000e0  f1b90f00          CMP      r9,#0                 ;369
0000e4  d001              BEQ      |L1.234|
0000e6  2603              MOVS     r6,#3                 ;370
0000e8  e00d              B        |L1.262|
                  |L1.234|
0000ea  f9b50072          LDRSH    r0,[r5,#0x72]         ;372
0000ee  42b8              CMP      r0,r7                 ;372
0000f0  d108              BNE      |L1.260|
0000f2  8ce8              LDRH     r0,[r5,#0x26]         ;373
0000f4  f0100f01          TST      r0,#1                 ;373
0000f8  d001              BEQ      |L1.254|
0000fa  2002              MOVS     r0,#2                 ;373
0000fc  e000              B        |L1.256|
                  |L1.254|
0000fe  2001              MOVS     r0,#1                 ;373
                  |L1.256|
000100  4606              MOV      r6,r0                 ;373
000102  e000              B        |L1.262|
                  |L1.260|
000104  2600              MOVS     r6,#0                 ;375
                  |L1.262|
000106  f1050150          ADD      r1,r5,#0x50           ;380
00010a  f8510026          LDR      r0,[r1,r6,LSL #2]     ;380
00010e  f7fffffe          BL       LCD_SetBkColor
000112  f1050160          ADD      r1,r5,#0x60           ;381
000116  f8510026          LDR      r0,[r1,r6,LSL #2]     ;381
00011a  f7fffffe          BL       LCD_SetColor
00011e  4639              MOV      r1,r7                 ;382
000120  4628              MOV      r0,r5                 ;382
000122  f7fffffe          BL       LISTBOX__GetpString
000126  9003              STR      r0,[sp,#0xc]          ;382
000128  2002              MOVS     r0,#2                 ;383
00012a  f7fffffe          BL       GUI_SetTextMode
00012e  e000              B        |L1.306|
                  |L1.304|
000130  e032              B        |L1.408|
                  |L1.306|
000132  f7fffffe          BL       GUI_Clear
000136  e9d40203          LDRD     r0,r2,[r4,#0xc]       ;385
00013a  1c41              ADDS     r1,r0,#1              ;385
00013c  9803              LDR      r0,[sp,#0xc]          ;385
00013e  f7fffffe          BL       GUI_DispStringAt
000142  f8950074          LDRB     r0,[r5,#0x74]         ;387
000146  f0100f04          TST      r0,#4                 ;387
00014a  d023              BEQ      |L1.404|
00014c  f9b50072          LDRSH    r0,[r5,#0x72]         ;387
000150  42b8              CMP      r0,r7                 ;387
000152  d11f              BNE      |L1.404|
000154  68e0              LDR      r0,[r4,#0xc]          ;389
000156  b200              SXTH     r0,r0                 ;389
000158  f8ad0004          STRH     r0,[sp,#4]            ;389
00015c  6920              LDR      r0,[r4,#0x10]         ;390
00015e  b200              SXTH     r0,r0                 ;390
000160  f8ad0006          STRH     r0,[sp,#6]            ;390
000164  f8bd0014          LDRH     r0,[sp,#0x14]         ;391
000168  f8ad0008          STRH     r0,[sp,#8]            ;391
00016c  6920              LDR      r0,[r4,#0x10]         ;392
00016e  4450              ADD      r0,r0,r10             ;392
000170  1e40              SUBS     r0,r0,#1              ;392
000172  b200              SXTH     r0,r0                 ;392
000174  f8ad000a          STRH     r0,[sp,#0xa]          ;392
000178  f1050150          ADD      r1,r5,#0x50           ;393
00017c  f8511026          LDR      r1,[r1,r6,LSL #2]     ;393
000180  f06f427f          MVN      r2,#0xff000000        ;393
000184  1a50              SUBS     r0,r2,r1              ;393
000186  f7fffffe          BL       LCD_SetColor
00018a  2100              MOVS     r1,#0                 ;394
00018c  a801              ADD      r0,sp,#4              ;394
00018e  f7fffffe          BL       GUI_DrawFocusRect
000192  bf00              NOP                            ;395
                  |L1.404|
000194  2000              MOVS     r0,#0                 ;396
000196  e764              B        |L1.98|
                  |L1.408|
000198  2000              MOVS     r0,#0                 ;399
00019a  e762              B        |L1.98|
;;;401    
                          ENDP

                  _CallOwnerDraw PROC
;;;119    */
;;;120    static int _CallOwnerDraw(LISTBOX_Handle hObj, const LISTBOX_Obj* pObj, int Cmd, int ItemIndex) {
00019c  e92d41f0          PUSH     {r4-r8,lr}
0001a0  b086              SUB      sp,sp,#0x18
0001a2  4606              MOV      r6,r0
0001a4  460c              MOV      r4,r1
0001a6  4617              MOV      r7,r2
0001a8  4698              MOV      r8,r3
;;;121      WIDGET_ITEM_DRAW_INFO ItemInfo;
;;;122      int r;
;;;123      ItemInfo.Cmd       = Cmd;
0001aa  9702              STR      r7,[sp,#8]
;;;124      ItemInfo.hWin      = hObj;
0001ac  f8ad6004          STRH     r6,[sp,#4]
;;;125      ItemInfo.ItemIndex = ItemIndex;
0001b0  f8cd800c          STR      r8,[sp,#0xc]
;;;126      if (pObj->pfDrawItem) {
0001b4  6ae0              LDR      r0,[r4,#0x2c]
0001b6  b120              CBZ      r0,|L1.450|
;;;127        r = pObj->pfDrawItem(&ItemInfo);
0001b8  a801              ADD      r0,sp,#4
0001ba  6ae1              LDR      r1,[r4,#0x2c]
0001bc  4788              BLX      r1
0001be  4605              MOV      r5,r0
0001c0  e003              B        |L1.458|
                  |L1.450|
;;;128      } else {
;;;129        r = LISTBOX_OwnerDraw(&ItemInfo);
0001c2  a801              ADD      r0,sp,#4
0001c4  f7fffffe          BL       LISTBOX_OwnerDraw
0001c8  4605              MOV      r5,r0
                  |L1.458|
;;;130      }
;;;131      return r;
0001ca  4628              MOV      r0,r5
;;;132    }
0001cc  b006              ADD      sp,sp,#0x18
0001ce  e8bd81f0          POP      {r4-r8,pc}
;;;133    
                          ENDP

                  LISTBOX__GetNumItems PROC
;;;140    */
;;;141    unsigned LISTBOX__GetNumItems(const LISTBOX_Obj* pObj) {
0001d2  b510              PUSH     {r4,lr}
0001d4  4604              MOV      r4,r0
;;;142      return GUI_ARRAY_GetNumItems(&pObj->ItemArray);
0001d6  f1040028          ADD      r0,r4,#0x28
0001da  f7fffffe          BL       GUI_ARRAY_GetNumItems
;;;143    }
0001de  bd10              POP      {r4,pc}
;;;144    
                          ENDP

                  _GetYSize PROC
;;;164    */
;;;165    static int _GetYSize(LISTBOX_Handle hObj) {
0001e0  b51c              PUSH     {r2-r4,lr}
0001e2  4604              MOV      r4,r0
;;;166      GUI_RECT Rect;
;;;167      WM_GetInsideRectExScrollbar(hObj, &Rect);
0001e4  4669              MOV      r1,sp
0001e6  4620              MOV      r0,r4
0001e8  f7fffffe          BL       WM_GetInsideRectExScrollbar
;;;168      return (Rect.y1 - Rect.y0 + 1);
0001ec  f9bd0006          LDRSH    r0,[sp,#6]
0001f0  f9bd1002          LDRSH    r1,[sp,#2]
0001f4  1a40              SUBS     r0,r0,r1
0001f6  1c40              ADDS     r0,r0,#1
;;;169    }
0001f8  bd1c              POP      {r2-r4,pc}
;;;170    
                          ENDP

                  _GetItemSizeX PROC
;;;174    */
;;;175    static int _GetItemSizeX(LISTBOX_Handle hObj, const LISTBOX_Obj* pObj, unsigned Index) {
0001fa  e92d47f0          PUSH     {r4-r10,lr}
0001fe  4680              MOV      r8,r0
000200  460d              MOV      r5,r1
000202  4616              MOV      r6,r2
;;;176      LISTBOX_ITEM* pItem;
;;;177      int xSize = 0;
000204  2700              MOVS     r7,#0
;;;178      pItem = (LISTBOX_ITEM*)GUI_ARRAY_GetpItem(&pObj->ItemArray, Index);
000206  4631              MOV      r1,r6
000208  f1050028          ADD      r0,r5,#0x28
00020c  f7fffffe          BL       GUI_ARRAY_GetpItem
000210  4604              MOV      r4,r0
;;;179      if (pItem) {
000212  b104              CBZ      r4,|L1.534|
;;;180        xSize = pItem->xSize;
000214  8827              LDRH     r7,[r4,#0]
                  |L1.534|
;;;181      }
;;;182      if (xSize == 0) {
000216  b977              CBNZ     r7,|L1.566|
;;;183        const GUI_FONT GUI_UNI_PTR* pOldFont;
;;;184        pOldFont = GUI_SetFont(pObj->Props.pFont);
000218  6ca8              LDR      r0,[r5,#0x48]
00021a  f7fffffe          BL       GUI_SetFont
00021e  4681              MOV      r9,r0
;;;185        xSize    = _CallOwnerDraw(hObj, pObj, WIDGET_ITEM_GET_XSIZE, Index);
000220  4633              MOV      r3,r6
000222  2201              MOVS     r2,#1
000224  4629              MOV      r1,r5
000226  4640              MOV      r0,r8
000228  f7fffffe          BL       _CallOwnerDraw
00022c  4607              MOV      r7,r0
;;;186        GUI_SetFont(pOldFont);
00022e  4648              MOV      r0,r9
000230  f7fffffe          BL       GUI_SetFont
;;;187      }
000234  bf00              NOP      
                  |L1.566|
;;;188      if (pItem) {
000236  b104              CBZ      r4,|L1.570|
;;;189        pItem->xSize = xSize;
000238  8027              STRH     r7,[r4,#0]
                  |L1.570|
;;;190      }
;;;191      return xSize;
00023a  4638              MOV      r0,r7
;;;192    }
00023c  e8bd87f0          POP      {r4-r10,pc}
;;;193    
                          ENDP

                  _GetItemSizeY PROC
;;;197    */
;;;198    static int _GetItemSizeY(LISTBOX_Handle hObj, const LISTBOX_Obj* pObj, unsigned Index) {
000240  e92d47f0          PUSH     {r4-r10,lr}
000244  4680              MOV      r8,r0
000246  460d              MOV      r5,r1
000248  4616              MOV      r6,r2
;;;199      LISTBOX_ITEM* pItem;
;;;200      int ySize = 0;
00024a  2700              MOVS     r7,#0
;;;201      pItem = (LISTBOX_ITEM*)GUI_ARRAY_GetpItem(&pObj->ItemArray, Index);
00024c  4631              MOV      r1,r6
00024e  f1050028          ADD      r0,r5,#0x28
000252  f7fffffe          BL       GUI_ARRAY_GetpItem
000256  4604              MOV      r4,r0
;;;202      if (pItem) {
000258  b104              CBZ      r4,|L1.604|
;;;203        ySize = pItem->ySize;
00025a  8867              LDRH     r7,[r4,#2]
                  |L1.604|
;;;204      }
;;;205      if (ySize == 0) {
00025c  b977              CBNZ     r7,|L1.636|
;;;206        const GUI_FONT GUI_UNI_PTR* pOldFont;
;;;207        pOldFont = GUI_SetFont(pObj->Props.pFont);
00025e  6ca8              LDR      r0,[r5,#0x48]
000260  f7fffffe          BL       GUI_SetFont
000264  4681              MOV      r9,r0
;;;208        ySize    = _CallOwnerDraw(hObj, pObj, WIDGET_ITEM_GET_YSIZE, Index);
000266  4633              MOV      r3,r6
000268  2202              MOVS     r2,#2
00026a  4629              MOV      r1,r5
00026c  4640              MOV      r0,r8
00026e  f7fffffe          BL       _CallOwnerDraw
000272  4607              MOV      r7,r0
;;;209        GUI_SetFont(pOldFont);
000274  4648              MOV      r0,r9
000276  f7fffffe          BL       GUI_SetFont
;;;210      }
00027a  bf00              NOP      
                  |L1.636|
;;;211      if (pItem) {
00027c  b104              CBZ      r4,|L1.640|
;;;212        pItem->ySize = ySize;
00027e  8067              STRH     r7,[r4,#2]
                  |L1.640|
;;;213      }
;;;214      return ySize;
000280  4638              MOV      r0,r7
;;;215    }
000282  e8bd87f0          POP      {r4-r10,pc}
;;;216    
                          ENDP

                  _GetContentsSizeX PROC
;;;220    */
;;;221    static int _GetContentsSizeX(LISTBOX_Handle hObj) {
000286  e92d47f0          PUSH     {r4-r10,lr}
00028a  4607              MOV      r7,r0
;;;222      LISTBOX_Obj* pObj;
;;;223      int i, NumItems, SizeX;
;;;224      int Result = 0;
00028c  2600              MOVS     r6,#0
;;;225      pObj = LISTBOX_H2P(hObj);
00028e  4638              MOV      r0,r7
000290  f7fffffe          BL       GUI_ALLOC_h2p
000294  4681              MOV      r9,r0
;;;226      NumItems = LISTBOX__GetNumItems(pObj);
000296  4648              MOV      r0,r9
000298  f7fffffe          BL       LISTBOX__GetNumItems
00029c  4680              MOV      r8,r0
;;;227      for (i = 0; i < NumItems; i++) {
00029e  2500              MOVS     r5,#0
0002a0  e009              B        |L1.694|
                  |L1.674|
;;;228        SizeX = _GetItemSizeX(hObj, pObj, i);
0002a2  462a              MOV      r2,r5
0002a4  4649              MOV      r1,r9
0002a6  4638              MOV      r0,r7
0002a8  f7fffffe          BL       _GetItemSizeX
0002ac  4604              MOV      r4,r0
;;;229        if (Result < SizeX) {
0002ae  42a6              CMP      r6,r4
0002b0  da00              BGE      |L1.692|
;;;230          Result = SizeX;
0002b2  4626              MOV      r6,r4
                  |L1.692|
0002b4  1c6d              ADDS     r5,r5,#1              ;227
                  |L1.694|
0002b6  4545              CMP      r5,r8                 ;227
0002b8  dbf3              BLT      |L1.674|
;;;231        }
;;;232      }
;;;233      return Result;
0002ba  4630              MOV      r0,r6
;;;234    }
0002bc  e8bd87f0          POP      {r4-r10,pc}
;;;235    
                          ENDP

                  _GetItemPosY PROC
;;;239    */
;;;240    static int _GetItemPosY(LISTBOX_Handle hObj, const LISTBOX_Obj* pObj, unsigned Index) {
0002c0  e92d41f0          PUSH     {r4-r8,lr}
0002c4  4680              MOV      r8,r0
0002c6  460c              MOV      r4,r1
0002c8  4615              MOV      r5,r2
;;;241      if (Index < LISTBOX__GetNumItems(pObj)) {
0002ca  4620              MOV      r0,r4
0002cc  f7fffffe          BL       LISTBOX__GetNumItems
0002d0  42a8              CMP      r0,r5
0002d2  d912              BLS      |L1.762|
;;;242        if ((int)Index >= pObj->ScrollStateV.v) {
0002d4  6b60              LDR      r0,[r4,#0x34]
0002d6  42a8              CMP      r0,r5
0002d8  dc0e              BGT      |L1.760|
;;;243          unsigned i;
;;;244          int PosY = 0;
0002da  2700              MOVS     r7,#0
;;;245          for (i = pObj->ScrollStateV.v; i < Index; i++) {
0002dc  6b66              LDR      r6,[r4,#0x34]
0002de  e006              B        |L1.750|
                  |L1.736|
;;;246            PosY += _GetItemSizeY(hObj, pObj, i);
0002e0  4632              MOV      r2,r6
0002e2  4621              MOV      r1,r4
0002e4  4640              MOV      r0,r8
0002e6  f7fffffe          BL       _GetItemSizeY
0002ea  4407              ADD      r7,r7,r0
0002ec  1c76              ADDS     r6,r6,#1              ;245
                  |L1.750|
0002ee  42ae              CMP      r6,r5                 ;245
0002f0  d3f6              BCC      |L1.736|
;;;247          }
;;;248          return PosY;
0002f2  4638              MOV      r0,r7
                  |L1.756|
;;;249        }
;;;250      }
;;;251      return -1;
;;;252    }
0002f4  e8bd81f0          POP      {r4-r8,pc}
                  |L1.760|
0002f8  bf00              NOP                            ;249
                  |L1.762|
0002fa  f04f30ff          MOV      r0,#0xffffffff        ;251
0002fe  e7f9              B        |L1.756|
;;;253    
                          ENDP

                  _IsPartiallyVis PROC
;;;257    */
;;;258    static int _IsPartiallyVis(LISTBOX_Handle hObj, const LISTBOX_Obj* pObj) {
000300  e92d41f0          PUSH     {r4-r8,lr}
000304  4607              MOV      r7,r0
000306  460c              MOV      r4,r1
;;;259      int Index;
;;;260      Index = pObj->Sel;
000308  f9b45072          LDRSH    r5,[r4,#0x72]
;;;261      if (Index < (int)LISTBOX__GetNumItems(pObj)) {
00030c  4620              MOV      r0,r4
00030e  f7fffffe          BL       LISTBOX__GetNumItems
000312  42a8              CMP      r0,r5
000314  dd17              BLE      |L1.838|
;;;262        if (Index >= pObj->ScrollStateV.v) {
000316  6b60              LDR      r0,[r4,#0x34]
000318  42a8              CMP      r0,r5
00031a  dc14              BGT      |L1.838|
;;;263          int y;
;;;264          y  = _GetItemPosY (hObj, pObj, Index);
00031c  462a              MOV      r2,r5
00031e  4621              MOV      r1,r4
000320  4638              MOV      r0,r7
000322  f7fffffe          BL       _GetItemPosY
000326  4606              MOV      r6,r0
;;;265          y += _GetItemSizeY(hObj, pObj, Index);
000328  462a              MOV      r2,r5
00032a  4621              MOV      r1,r4
00032c  4638              MOV      r0,r7
00032e  f7fffffe          BL       _GetItemSizeY
000332  4406              ADD      r6,r6,r0
;;;266          if (y > _GetYSize(hObj)) {
000334  4638              MOV      r0,r7
000336  f7fffffe          BL       _GetYSize
00033a  42b0              CMP      r0,r6
00033c  da02              BGE      |L1.836|
;;;267            return 1;
00033e  2001              MOVS     r0,#1
                  |L1.832|
;;;268          }
;;;269        }
;;;270      }
;;;271      return 0;
;;;272    }
000340  e8bd81f0          POP      {r4-r8,pc}
                  |L1.836|
000344  bf00              NOP                            ;269
                  |L1.838|
000346  2000              MOVS     r0,#0                 ;271
000348  e7fa              B        |L1.832|
;;;273    
                          ENDP

                  _GetNumVisItems PROC
;;;280    */
;;;281    static unsigned _GetNumVisItems(const LISTBOX_Obj* pObj, LISTBOX_Handle hObj) {
00034a  e92d47f0          PUSH     {r4-r10,lr}
00034e  4606              MOV      r6,r0
000350  460f              MOV      r7,r1
;;;282      int NumItems, r = 1;
000352  f04f0801          MOV      r8,#1
;;;283      NumItems = LISTBOX__GetNumItems(pObj);
000356  4630              MOV      r0,r6
000358  f7fffffe          BL       LISTBOX__GetNumItems
00035c  4605              MOV      r5,r0
;;;284      if (NumItems > 1) {
00035e  2d01              CMP      r5,#1
000360  dd1e              BLE      |L1.928|
;;;285        int i, ySize, DistY = 0;
000362  f04f0900          MOV      r9,#0
;;;286        ySize = _GetYSize(hObj);
000366  4638              MOV      r0,r7
000368  f7fffffe          BL       _GetYSize
00036c  4682              MOV      r10,r0
;;;287        for (i = NumItems - 1; i >= 0; i--) {
00036e  1e6c              SUBS     r4,r5,#1
000370  e009              B        |L1.902|
                  |L1.882|
;;;288          DistY += _GetItemSizeY(hObj, pObj, i);
000372  4622              MOV      r2,r4
000374  4631              MOV      r1,r6
000376  4638              MOV      r0,r7
000378  f7fffffe          BL       _GetItemSizeY
00037c  4481              ADD      r9,r9,r0
;;;289          if (DistY > ySize) {
00037e  45d1              CMP      r9,r10
000380  dd00              BLE      |L1.900|
;;;290            break;
000382  e002              B        |L1.906|
                  |L1.900|
000384  1e64              SUBS     r4,r4,#1              ;287
                  |L1.902|
000386  2c00              CMP      r4,#0                 ;287
000388  daf3              BGE      |L1.882|
                  |L1.906|
00038a  bf00              NOP      
;;;291          }
;;;292        }
;;;293        r = NumItems - i - 1;
00038c  1b28              SUBS     r0,r5,r4
00038e  f1a00801          SUB      r8,r0,#1
;;;294        if (r < 1) {
000392  f1b80f01          CMP      r8,#1
000396  da02              BGE      |L1.926|
;;;295          return 1;
000398  2001              MOVS     r0,#1
                  |L1.922|
;;;296        }
;;;297      }
;;;298      return r;
;;;299    }
00039a  e8bd87f0          POP      {r4-r10,pc}
                  |L1.926|
00039e  bf00              NOP                            ;297
                  |L1.928|
0003a0  4640              MOV      r0,r8                 ;298
0003a2  e7fa              B        |L1.922|
;;;300    
                          ENDP

                  _NotifyOwner PROC
;;;308    */
;;;309    static void _NotifyOwner(WM_HWIN hObj, int Notification) {
0003a4  b5fe              PUSH     {r1-r7,lr}
0003a6  4604              MOV      r4,r0
0003a8  460d              MOV      r5,r1
;;;310      WM_MESSAGE Msg = {0};
0003aa  2000              MOVS     r0,#0
0003ac  9000              STR      r0,[sp,#0]
0003ae  9001              STR      r0,[sp,#4]
0003b0  9002              STR      r0,[sp,#8]
;;;311      WM_HWIN hOwner;
;;;312      LISTBOX_Obj* pObj    = LISTBOX_H2P(hObj);
0003b2  4620              MOV      r0,r4
0003b4  f7fffffe          BL       GUI_ALLOC_h2p
0003b8  4607              MOV      r7,r0
;;;313      hOwner = pObj->hOwner ? pObj->hOwner : WM_GetParent(hObj);
0003ba  f8b70070          LDRH     r0,[r7,#0x70]
0003be  b110              CBZ      r0,|L1.966|
0003c0  f9b70070          LDRSH    r0,[r7,#0x70]
0003c4  e002              B        |L1.972|
                  |L1.966|
0003c6  4620              MOV      r0,r4
0003c8  f7fffffe          BL       WM_GetParent
                  |L1.972|
0003cc  b206              SXTH     r6,r0
;;;314      Msg.MsgId  = WM_NOTIFY_PARENT;
0003ce  2026              MOVS     r0,#0x26
0003d0  9000              STR      r0,[sp,#0]
;;;315      Msg.Data.v = Notification;
0003d2  9502              STR      r5,[sp,#8]
;;;316      Msg.hWinSrc= hObj;
0003d4  f8ad4006          STRH     r4,[sp,#6]
;;;317      WM_SendMessage(hOwner, &Msg);
0003d8  4669              MOV      r1,sp
0003da  4630              MOV      r0,r6
0003dc  f7fffffe          BL       WM_SendMessage
;;;318    }
0003e0  bdfe              POP      {r1-r7,pc}
;;;319    
                          ENDP

                  _UpdateScrollPos PROC
;;;413    */
;;;414    static int _UpdateScrollPos(LISTBOX_Handle hObj, LISTBOX_Obj* pObj) {
0003e2  b570              PUSH     {r4-r6,lr}
0003e4  4605              MOV      r5,r0
0003e6  460c              MOV      r4,r1
;;;415      int PrevScrollStateV;
;;;416      PrevScrollStateV = pObj->ScrollStateV.v;
0003e8  6b66              LDR      r6,[r4,#0x34]
;;;417      if (pObj->Sel >= 0) {
0003ea  f9b40072          LDRSH    r0,[r4,#0x72]
0003ee  2800              CMP      r0,#0
0003f0  db12              BLT      |L1.1048|
;;;418        /* Check upper limit */
;;;419        if (_IsPartiallyVis(hObj, pObj)) {
0003f2  4621              MOV      r1,r4
0003f4  4628              MOV      r0,r5
0003f6  f7fffffe          BL       _IsPartiallyVis
0003fa  b128              CBZ      r0,|L1.1032|
;;;420          pObj->ScrollStateV.v = pObj->Sel - (pObj->ScrollStateV.PageSize - 1);
0003fc  f9b41072          LDRSH    r1,[r4,#0x72]
000400  6ba0              LDR      r0,[r4,#0x38]
000402  1e40              SUBS     r0,r0,#1
000404  1a09              SUBS     r1,r1,r0
000406  6361              STR      r1,[r4,#0x34]
                  |L1.1032|
;;;421        }
;;;422        /* Check lower limit */
;;;423        if (pObj->Sel < pObj->ScrollStateV.v) {
000408  f9b41072          LDRSH    r1,[r4,#0x72]
00040c  6b60              LDR      r0,[r4,#0x34]
00040e  4281              CMP      r1,r0
000410  da02              BGE      |L1.1048|
;;;424          pObj->ScrollStateV.v = pObj->Sel;
000412  f9b41072          LDRSH    r1,[r4,#0x72]
000416  6361              STR      r1,[r4,#0x34]
                  |L1.1048|
;;;425        }
;;;426      }
;;;427      WM_CheckScrollBounds(&pObj->ScrollStateV);
000418  f1040030          ADD      r0,r4,#0x30
00041c  f7fffffe          BL       WM_CheckScrollBounds
;;;428      WM_CheckScrollBounds(&pObj->ScrollStateH);
000420  f104003c          ADD      r0,r4,#0x3c
000424  f7fffffe          BL       WM_CheckScrollBounds
;;;429      WIDGET__SetScrollState(hObj, &pObj->ScrollStateV, &pObj->ScrollStateH);
000428  f104023c          ADD      r2,r4,#0x3c
00042c  f1040130          ADD      r1,r4,#0x30
000430  4628              MOV      r0,r5
000432  f7fffffe          BL       WIDGET__SetScrollState
;;;430      return pObj->ScrollStateV.v - PrevScrollStateV;
000436  6b60              LDR      r0,[r4,#0x34]
000438  1b80              SUBS     r0,r0,r6
;;;431    }
00043a  bd70              POP      {r4-r6,pc}
;;;432    
                          ENDP

                  LISTBOX__InvalidateItemSize PROC
;;;436    */
;;;437    void LISTBOX__InvalidateItemSize(const LISTBOX_Obj* pObj, unsigned Index) {
00043c  b570              PUSH     {r4-r6,lr}
00043e  4605              MOV      r5,r0
000440  460e              MOV      r6,r1
;;;438      LISTBOX_ITEM* pItem;
;;;439      pItem = (LISTBOX_ITEM*)GUI_ARRAY_GetpItem(&pObj->ItemArray, Index);
000442  4631              MOV      r1,r6
000444  f1050028          ADD      r0,r5,#0x28
000448  f7fffffe          BL       GUI_ARRAY_GetpItem
00044c  4604              MOV      r4,r0
;;;440      if (pItem) {
00044e  b114              CBZ      r4,|L1.1110|
;;;441        pItem->xSize = 0;
000450  2000              MOVS     r0,#0
000452  8020              STRH     r0,[r4,#0]
;;;442        pItem->ySize = 0;
000454  8060              STRH     r0,[r4,#2]
                  |L1.1110|
;;;443      }
;;;444    }
000456  bd70              POP      {r4-r6,pc}
;;;445    
                          ENDP

                  LISTBOX__InvalidateInsideArea PROC
;;;449    */
;;;450    void LISTBOX__InvalidateInsideArea(LISTBOX_Handle hObj) {
000458  b51c              PUSH     {r2-r4,lr}
00045a  4604              MOV      r4,r0
;;;451      GUI_RECT Rect;
;;;452      WM_GetInsideRectExScrollbar(hObj, &Rect);
00045c  4669              MOV      r1,sp
00045e  4620              MOV      r0,r4
000460  f7fffffe          BL       WM_GetInsideRectExScrollbar
;;;453      WM_InvalidateRect(hObj, &Rect);
000464  4669              MOV      r1,sp
000466  4620              MOV      r0,r4
000468  f7fffffe          BL       WM_InvalidateRect
;;;454    }
00046c  bd1c              POP      {r2-r4,pc}
;;;455    
                          ENDP

                  LISTBOX__InvalidateItem PROC
;;;459    */
;;;460    void LISTBOX__InvalidateItem(LISTBOX_Handle hObj, const LISTBOX_Obj* pObj, int Sel) {
00046e  e92d41fc          PUSH     {r2-r8,lr}
000472  4606              MOV      r6,r0
000474  460f              MOV      r7,r1
000476  4614              MOV      r4,r2
;;;461      if (Sel >= 0) {
000478  2c00              CMP      r4,#0
00047a  db24              BLT      |L1.1222|
;;;462        int ItemPosY;
;;;463        ItemPosY = _GetItemPosY(hObj, pObj, Sel);
00047c  4622              MOV      r2,r4
00047e  4639              MOV      r1,r7
000480  4630              MOV      r0,r6
000482  f7fffffe          BL       _GetItemPosY
000486  4605              MOV      r5,r0
;;;464        if (ItemPosY >= 0) {
000488  2d00              CMP      r5,#0
00048a  db1b              BLT      |L1.1220|
;;;465          GUI_RECT Rect;
;;;466          int ItemDistY;
;;;467          ItemDistY = _GetItemSizeY(hObj, pObj, Sel);
00048c  4622              MOV      r2,r4
00048e  4639              MOV      r1,r7
000490  4630              MOV      r0,r6
000492  f7fffffe          BL       _GetItemSizeY
000496  4680              MOV      r8,r0
;;;468          WM_GetInsideRectExScrollbar(hObj, &Rect);
000498  4669              MOV      r1,sp
00049a  4630              MOV      r0,r6
00049c  f7fffffe          BL       WM_GetInsideRectExScrollbar
;;;469          Rect.y0 += ItemPosY;
0004a0  f8bd0002          LDRH     r0,[sp,#2]
0004a4  4428              ADD      r0,r0,r5
0004a6  b200              SXTH     r0,r0
0004a8  f8ad0002          STRH     r0,[sp,#2]
;;;470          Rect.y1  = Rect.y0 + ItemDistY - 1;
0004ac  f8bd0002          LDRH     r0,[sp,#2]
0004b0  4440              ADD      r0,r0,r8
0004b2  1e40              SUBS     r0,r0,#1
0004b4  b200              SXTH     r0,r0
0004b6  f8ad0006          STRH     r0,[sp,#6]
;;;471          WM_InvalidateRect(hObj, &Rect);
0004ba  4669              MOV      r1,sp
0004bc  4630              MOV      r0,r6
0004be  f7fffffe          BL       WM_InvalidateRect
;;;472        }
0004c2  bf00              NOP      
                  |L1.1220|
;;;473      }
0004c4  bf00              NOP      
                  |L1.1222|
;;;474    }
0004c6  e8bd81fc          POP      {r2-r8,pc}
;;;475    
                          ENDP

                  LISTBOX__InvalidateItemAndBelow PROC
;;;479    */
;;;480    void LISTBOX__InvalidateItemAndBelow(LISTBOX_Handle hObj, const LISTBOX_Obj* pObj, int Sel) {
0004ca  e92d41fc          PUSH     {r2-r8,lr}
0004ce  4606              MOV      r6,r0
0004d0  460f              MOV      r7,r1
0004d2  4614              MOV      r4,r2
;;;481      if (Sel >= 0) {
0004d4  2c00              CMP      r4,#0
0004d6  db17              BLT      |L1.1288|
;;;482        int ItemPosY;
;;;483        ItemPosY = _GetItemPosY(hObj, pObj, Sel);
0004d8  4622              MOV      r2,r4
0004da  4639              MOV      r1,r7
0004dc  4630              MOV      r0,r6
0004de  f7fffffe          BL       _GetItemPosY
0004e2  4605              MOV      r5,r0
;;;484        if (ItemPosY >= 0) {
0004e4  2d00              CMP      r5,#0
0004e6  db0e              BLT      |L1.1286|
;;;485          GUI_RECT Rect;
;;;486          WM_GetInsideRectExScrollbar(hObj, &Rect);
0004e8  4669              MOV      r1,sp
0004ea  4630              MOV      r0,r6
0004ec  f7fffffe          BL       WM_GetInsideRectExScrollbar
;;;487          Rect.y0 += ItemPosY;
0004f0  f8bd0002          LDRH     r0,[sp,#2]
0004f4  4428              ADD      r0,r0,r5
0004f6  b200              SXTH     r0,r0
0004f8  f8ad0002          STRH     r0,[sp,#2]
;;;488          WM_InvalidateRect(hObj, &Rect);
0004fc  4669              MOV      r1,sp
0004fe  4630              MOV      r0,r6
000500  f7fffffe          BL       WM_InvalidateRect
;;;489        }
000504  bf00              NOP      
                  |L1.1286|
;;;490      }
000506  bf00              NOP      
                  |L1.1288|
;;;491    }
000508  e8bd81fc          POP      {r2-r8,pc}
;;;492    
                          ENDP

                  LISTBOX__SetScrollbarWidth PROC
;;;496    */
;;;497    void LISTBOX__SetScrollbarWidth(LISTBOX_Handle hObj, const LISTBOX_Obj* pObj) {
00050c  e92d41f0          PUSH     {r4-r8,lr}
000510  4606              MOV      r6,r0
000512  460c              MOV      r4,r1
;;;498      WM_HWIN hBarH, hBarV;
;;;499      int Width;
;;;500      Width = pObj->ScrollbarWidth;
000514  f8945075          LDRB     r5,[r4,#0x75]
;;;501      if (Width == 0) {
000518  b915              CBNZ     r5,|L1.1312|
;;;502        Width = SCROLLBAR_GetDefaultWidth();
00051a  f7fffffe          BL       SCROLLBAR_GetDefaultWidth
00051e  4605              MOV      r5,r0
                  |L1.1312|
;;;503      }
;;;504      hBarH = WM_GetDialogItem(hObj, GUI_ID_HSCROLL);
000520  21ff              MOVS     r1,#0xff
000522  4630              MOV      r0,r6
000524  f7fffffe          BL       WM_GetDialogItem
000528  4680              MOV      r8,r0
;;;505      hBarV = WM_GetDialogItem(hObj, GUI_ID_VSCROLL);
00052a  21fe              MOVS     r1,#0xfe
00052c  4630              MOV      r0,r6
00052e  f7fffffe          BL       WM_GetDialogItem
000532  4607              MOV      r7,r0
;;;506      SCROLLBAR_SetWidth(hBarH, Width);
000534  4629              MOV      r1,r5
000536  4640              MOV      r0,r8
000538  f7fffffe          BL       SCROLLBAR_SetWidth
;;;507      SCROLLBAR_SetWidth(hBarV, Width);
00053c  4629              MOV      r1,r5
00053e  4638              MOV      r0,r7
000540  f7fffffe          BL       SCROLLBAR_SetWidth
;;;508    }
000544  e8bd81f0          POP      {r4-r8,pc}
;;;509    
                          ENDP

                  _CalcScrollParas PROC
;;;513    */
;;;514    static int _CalcScrollParas(LISTBOX_Handle hObj) {
000548  b57c              PUSH     {r2-r6,lr}
00054a  4605              MOV      r5,r0
;;;515      GUI_RECT Rect;
;;;516      LISTBOX_Obj* pObj = LISTBOX_H2P(hObj);
00054c  4628              MOV      r0,r5
00054e  f7fffffe          BL       GUI_ALLOC_h2p
000552  4604              MOV      r4,r0
;;;517      /* Calc vertical scroll parameters */
;;;518      pObj->ScrollStateV.NumItems = LISTBOX__GetNumItems(pObj);
000554  4620              MOV      r0,r4
000556  f7fffffe          BL       LISTBOX__GetNumItems
00055a  6320              STR      r0,[r4,#0x30]
;;;519      pObj->ScrollStateV.PageSize = _GetNumVisItems(pObj, hObj);
00055c  4629              MOV      r1,r5
00055e  4620              MOV      r0,r4
000560  f7fffffe          BL       _GetNumVisItems
000564  63a0              STR      r0,[r4,#0x38]
;;;520      /* Calc horizontal scroll parameters */
;;;521      WM_GetInsideRectExScrollbar(hObj, &Rect);
000566  4669              MOV      r1,sp
000568  4628              MOV      r0,r5
00056a  f7fffffe          BL       WM_GetInsideRectExScrollbar
;;;522      pObj->ScrollStateH.NumItems = _GetContentsSizeX(hObj);
00056e  4628              MOV      r0,r5
000570  f7fffffe          BL       _GetContentsSizeX
000574  63e0              STR      r0,[r4,#0x3c]
;;;523      pObj->ScrollStateH.PageSize = Rect.x1 - Rect.x0 + 1;
000576  f9bd0004          LDRSH    r0,[sp,#4]
00057a  f9bd1000          LDRSH    r1,[sp,#0]
00057e  1a40              SUBS     r0,r0,r1
000580  1c40              ADDS     r0,r0,#1
000582  6460              STR      r0,[r4,#0x44]
;;;524      return _UpdateScrollPos(hObj, pObj);
000584  4621              MOV      r1,r4
000586  4628              MOV      r0,r5
000588  f7fffffe          BL       _UpdateScrollPos
;;;525    }
00058c  bd7c              POP      {r2-r6,pc}
;;;526    
                          ENDP

                  _ManageAutoScroll PROC
;;;530    */
;;;531    static void _ManageAutoScroll(LISTBOX_Handle hObj) {
00058e  e92d41fc          PUSH     {r2-r8,lr}
000592  4605              MOV      r5,r0
;;;532      char IsRequired;
;;;533      LISTBOX_Obj* pObj = LISTBOX_H2P(hObj);
000594  4628              MOV      r0,r5
000596  f7fffffe          BL       GUI_ALLOC_h2p
00059a  4604              MOV      r4,r0
;;;534      if (pObj->Flags & LISTBOX_SF_AUTOSCROLLBAR_V) {
00059c  f8940074          LDRB     r0,[r4,#0x74]
0005a0  f0100f02          TST      r0,#2
0005a4  d011              BEQ      |L1.1482|
;;;535        IsRequired = (_GetNumVisItems(pObj, hObj) < LISTBOX__GetNumItems(pObj));
0005a6  4629              MOV      r1,r5
0005a8  4620              MOV      r0,r4
0005aa  f7fffffe          BL       _GetNumVisItems
0005ae  4607              MOV      r7,r0
0005b0  4620              MOV      r0,r4
0005b2  f7fffffe          BL       LISTBOX__GetNumItems
0005b6  4287              CMP      r7,r0
0005b8  d201              BCS      |L1.1470|
0005ba  2001              MOVS     r0,#1
0005bc  e000              B        |L1.1472|
                  |L1.1470|
0005be  2000              MOVS     r0,#0
                  |L1.1472|
0005c0  b2c6              UXTB     r6,r0
;;;536        WM_SetScrollbarV(hObj, IsRequired);
0005c2  4631              MOV      r1,r6
0005c4  4628              MOV      r0,r5
0005c6  f7fffffe          BL       WM_SetScrollbarV
                  |L1.1482|
;;;537      }
;;;538      if (pObj->Flags & LISTBOX_SF_AUTOSCROLLBAR_H) {
0005ca  f8940074          LDRB     r0,[r4,#0x74]
0005ce  f0100f01          TST      r0,#1
0005d2  d018              BEQ      |L1.1542|
;;;539        GUI_RECT Rect;
;;;540        int xSize, xSizeContents;
;;;541        xSizeContents = _GetContentsSizeX(hObj);
0005d4  4628              MOV      r0,r5
0005d6  f7fffffe          BL       _GetContentsSizeX
0005da  4680              MOV      r8,r0
;;;542        WM_GetInsideRectExScrollbar(hObj, &Rect);
0005dc  4669              MOV      r1,sp
0005de  4628              MOV      r0,r5
0005e0  f7fffffe          BL       WM_GetInsideRectExScrollbar
;;;543        xSize = Rect.x1 - Rect.x0 + 1;
0005e4  f9bd0004          LDRSH    r0,[sp,#4]
0005e8  f9bd1000          LDRSH    r1,[sp,#0]
0005ec  1a40              SUBS     r0,r0,r1
0005ee  1c47              ADDS     r7,r0,#1
;;;544        IsRequired = (xSizeContents > xSize);
0005f0  45b8              CMP      r8,r7
0005f2  dd01              BLE      |L1.1528|
0005f4  2001              MOVS     r0,#1
0005f6  e000              B        |L1.1530|
                  |L1.1528|
0005f8  2000              MOVS     r0,#0
                  |L1.1530|
0005fa  b2c6              UXTB     r6,r0
;;;545        WM_SetScrollbarH(hObj, IsRequired);
0005fc  4631              MOV      r1,r6
0005fe  4628              MOV      r0,r5
000600  f7fffffe          BL       WM_SetScrollbarH
;;;546      }
000604  bf00              NOP      
                  |L1.1542|
;;;547      if (pObj->ScrollbarWidth) {
000606  f8940075          LDRB     r0,[r4,#0x75]
00060a  b118              CBZ      r0,|L1.1556|
;;;548        LISTBOX__SetScrollbarWidth(hObj, pObj);
00060c  4621              MOV      r1,r4
00060e  4628              MOV      r0,r5
000610  f7fffffe          BL       LISTBOX__SetScrollbarWidth
                  |L1.1556|
;;;549      }
;;;550    }
000614  e8bd81fc          POP      {r2-r8,pc}
;;;551    
                          ENDP

                  LISTBOX_UpdateScrollers PROC
;;;555    */
;;;556    int LISTBOX_UpdateScrollers(LISTBOX_Handle hObj) {
000618  b510              PUSH     {r4,lr}
00061a  4604              MOV      r4,r0
;;;557      _ManageAutoScroll(hObj);
00061c  4620              MOV      r0,r4
00061e  f7fffffe          BL       _ManageAutoScroll
;;;558      return _CalcScrollParas(hObj);
000622  4620              MOV      r0,r4
000624  f7fffffe          BL       _CalcScrollParas
;;;559    }
000628  bd10              POP      {r4,pc}
;;;560    
                          ENDP

                  _Tolower PROC
;;;564    */
;;;565    static int _Tolower(int Key) {
00062a  2841              CMP      r0,#0x41
;;;566      if ((Key >= 0x41) && (Key <= 0x5a)) {
00062c  db02              BLT      |L1.1588|
00062e  285a              CMP      r0,#0x5a
000630  dc00              BGT      |L1.1588|
;;;567        Key += 0x20;
000632  3020              ADDS     r0,r0,#0x20
                  |L1.1588|
;;;568      }
;;;569      return Key;
;;;570    }
000634  4770              BX       lr
;;;571    
                          ENDP

                  _IsAlphaNum PROC
;;;575    */
;;;576    static int _IsAlphaNum(int Key) {
000636  b510              PUSH     {r4,lr}
000638  4604              MOV      r4,r0
;;;577      Key = _Tolower(Key);
00063a  4620              MOV      r0,r4
00063c  f7fffffe          BL       _Tolower
000640  4604              MOV      r4,r0
;;;578      if (Key >= 'a' && Key <= 'z') {
000642  2c61              CMP      r4,#0x61
000644  db03              BLT      |L1.1614|
000646  2c7a              CMP      r4,#0x7a
000648  dc01              BGT      |L1.1614|
;;;579        return 1;
00064a  2001              MOVS     r0,#1
                  |L1.1612|
;;;580      }
;;;581      if (Key >= '0' && Key <= '9') {
;;;582        return 1;
;;;583      }
;;;584      return 0;
;;;585    }
00064c  bd10              POP      {r4,pc}
                  |L1.1614|
00064e  2c30              CMP      r4,#0x30              ;581
000650  db03              BLT      |L1.1626|
000652  2c39              CMP      r4,#0x39              ;581
000654  dc01              BGT      |L1.1626|
000656  2001              MOVS     r0,#1                 ;582
000658  e7f8              B        |L1.1612|
                  |L1.1626|
00065a  2000              MOVS     r0,#0                 ;584
00065c  e7f6              B        |L1.1612|
;;;586    
                          ENDP

                  LISTBOX_SetSel PROC
;;;1039   */
;;;1040   void LISTBOX_SetSel (LISTBOX_Handle hObj, int NewSel) {
00065e  e92d47f0          PUSH     {r4-r10,lr}
000662  4607              MOV      r7,r0
000664  460c              MOV      r4,r1
;;;1041     if (hObj) {
000666  b3f7              CBZ      r7,|L1.1766|
;;;1042       LISTBOX_Obj* pObj;
;;;1043       int MaxSel;
;;;1044       WM_LOCK();
000668  f7fffffe          BL       GUI_Lock
;;;1045       pObj = LISTBOX_H2P(hObj);
00066c  4638              MOV      r0,r7
00066e  f7fffffe          BL       GUI_ALLOC_h2p
000672  4605              MOV      r5,r0
;;;1046       MaxSel = LISTBOX__GetNumItems(pObj);
000674  4628              MOV      r0,r5
000676  f7fffffe          BL       LISTBOX__GetNumItems
00067a  4606              MOV      r6,r0
;;;1047       MaxSel = MaxSel ? MaxSel - 1 : 0;
00067c  b10e              CBZ      r6,|L1.1666|
00067e  1e70              SUBS     r0,r6,#1
000680  e000              B        |L1.1668|
                  |L1.1666|
000682  2000              MOVS     r0,#0
                  |L1.1668|
000684  4606              MOV      r6,r0
;;;1048       if (NewSel > MaxSel) {
000686  42b4              CMP      r4,r6
000688  dd00              BLE      |L1.1676|
;;;1049         NewSel = MaxSel;
00068a  4634              MOV      r4,r6
                  |L1.1676|
;;;1050       }
;;;1051       if (NewSel < 0) {
00068c  2c00              CMP      r4,#0
00068e  da02              BGE      |L1.1686|
;;;1052         NewSel = -1;
000690  f04f34ff          MOV      r4,#0xffffffff
000694  e015              B        |L1.1730|
                  |L1.1686|
;;;1053       } else {
;;;1054         WM_HMEM hItem = GUI_ARRAY_GethItem(&pObj->ItemArray, NewSel);
000696  4621              MOV      r1,r4
000698  f1050028          ADD      r0,r5,#0x28
00069c  f7fffffe          BL       GUI_ARRAY_GethItem
0006a0  4680              MOV      r8,r0
;;;1055         if (hItem) {
0006a2  f1b80f00          CMP      r8,#0
0006a6  d00b              BEQ      |L1.1728|
;;;1056           LISTBOX_ITEM* pItem = (LISTBOX_ITEM*)GUI_ALLOC_h2p(hItem);
0006a8  4640              MOV      r0,r8
0006aa  f7fffffe          BL       GUI_ALLOC_h2p
0006ae  4681              MOV      r9,r0
;;;1057           if (pItem->Status & LISTBOX_ITEM_DISABLED) {
0006b0  f8990004          LDRB     r0,[r9,#4]
0006b4  f0100f02          TST      r0,#2
0006b8  d001              BEQ      |L1.1726|
;;;1058             NewSel = -1;
0006ba  f04f34ff          MOV      r4,#0xffffffff
                  |L1.1726|
;;;1059           }
;;;1060         }
0006be  bf00              NOP      
                  |L1.1728|
;;;1061       }
0006c0  bf00              NOP      
                  |L1.1730|
;;;1062       if (NewSel != pObj->Sel) {
0006c2  f9b50072          LDRSH    r0,[r5,#0x72]
0006c6  42a0              CMP      r0,r4
0006c8  d01d              BEQ      |L1.1798|
;;;1063         int OldSel;
;;;1064         OldSel    = pObj->Sel;
0006ca  f9b58072          LDRSH    r8,[r5,#0x72]
;;;1065         pObj->Sel = NewSel;
0006ce  b220              SXTH     r0,r4
0006d0  f8a50072          STRH     r0,[r5,#0x72]
;;;1066         if (_UpdateScrollPos(hObj, pObj)) {
0006d4  4629              MOV      r1,r5
0006d6  4638              MOV      r0,r7
0006d8  f7fffffe          BL       _UpdateScrollPos
0006dc  b120              CBZ      r0,|L1.1768|
;;;1067           LISTBOX__InvalidateInsideArea(hObj);
0006de  4638              MOV      r0,r7
0006e0  f7fffffe          BL       LISTBOX__InvalidateInsideArea
0006e4  e00a              B        |L1.1788|
                  |L1.1766|
0006e6  e011              B        |L1.1804|
                  |L1.1768|
;;;1068         } else {
;;;1069           LISTBOX__InvalidateItem(hObj, pObj, OldSel);
0006e8  4642              MOV      r2,r8
0006ea  4629              MOV      r1,r5
0006ec  4638              MOV      r0,r7
0006ee  f7fffffe          BL       LISTBOX__InvalidateItem
;;;1070           LISTBOX__InvalidateItem(hObj, pObj, NewSel);
0006f2  4622              MOV      r2,r4
0006f4  4629              MOV      r1,r5
0006f6  4638              MOV      r0,r7
0006f8  f7fffffe          BL       LISTBOX__InvalidateItem
                  |L1.1788|
;;;1071         }
;;;1072         _NotifyOwner(hObj, WM_NOTIFICATION_SEL_CHANGED);
0006fc  2104              MOVS     r1,#4
0006fe  4638              MOV      r0,r7
000700  f7fffffe          BL       _NotifyOwner
;;;1073       }
000704  bf00              NOP      
                  |L1.1798|
;;;1074       WM_UNLOCK();
000706  f7fffffe          BL       GUI_Unlock
;;;1075     }
00070a  bf00              NOP      
                  |L1.1804|
;;;1076   }
00070c  e8bd87f0          POP      {r4-r10,pc}
;;;1077   
                          ENDP

                  _SelectByKey PROC
;;;590    */
;;;591    static void _SelectByKey(LISTBOX_Handle hObj, int Key) {
000710  e92d41f0          PUSH     {r4-r8,lr}
000714  4606              MOV      r6,r0
000716  460c              MOV      r4,r1
;;;592      unsigned i;
;;;593      LISTBOX_Obj* pObj;
;;;594      pObj = LISTBOX_H2P(hObj);
000718  4630              MOV      r0,r6
00071a  f7fffffe          BL       GUI_ALLOC_h2p
00071e  4680              MOV      r8,r0
;;;595      Key = _Tolower(Key);
000720  4620              MOV      r0,r4
000722  f7fffffe          BL       _Tolower
000726  4604              MOV      r4,r0
;;;596      for (i = 0; i < LISTBOX__GetNumItems(pObj); i++) {
000728  2500              MOVS     r5,#0
00072a  e00f              B        |L1.1868|
                  |L1.1836|
;;;597        const char* s = LISTBOX__GetpString(pObj, i);
00072c  4629              MOV      r1,r5
00072e  4640              MOV      r0,r8
000730  f7fffffe          BL       LISTBOX__GetpString
000734  4607              MOV      r7,r0
;;;598        if (_Tolower(*s) == Key) {
000736  7838              LDRB     r0,[r7,#0]
000738  f7fffffe          BL       _Tolower
00073c  42a0              CMP      r0,r4
00073e  d104              BNE      |L1.1866|
;;;599          LISTBOX_SetSel(hObj, i);
000740  4629              MOV      r1,r5
000742  4630              MOV      r0,r6
000744  f7fffffe          BL       LISTBOX_SetSel
;;;600          break;
000748  e005              B        |L1.1878|
                  |L1.1866|
00074a  1c6d              ADDS     r5,r5,#1              ;596
                  |L1.1868|
00074c  4640              MOV      r0,r8                 ;596
00074e  f7fffffe          BL       LISTBOX__GetNumItems
000752  42a8              CMP      r0,r5                 ;596
000754  d8ea              BHI      |L1.1836|
                  |L1.1878|
000756  bf00              NOP      
;;;601        }
;;;602      }
;;;603    }
000758  e8bd81f0          POP      {r4-r8,pc}
;;;604    
                          ENDP

                  _FreeAttached PROC
;;;608    */
;;;609    static void _FreeAttached(LISTBOX_Obj* pObj) {
00075c  b510              PUSH     {r4,lr}
00075e  4604              MOV      r4,r0
;;;610      GUI_ARRAY_Delete(&pObj->ItemArray);
000760  f1040028          ADD      r0,r4,#0x28
000764  f7fffffe          BL       GUI_ARRAY_Delete
;;;611    }
000768  bd10              POP      {r4,pc}
;;;612    
                          ENDP

                  _OnPaint PROC
;;;616    */
;;;617    static void _OnPaint(LISTBOX_Handle hObj, LISTBOX_Obj* pObj, WM_MESSAGE* pMsg) {
00076a  e92d43f0          PUSH     {r4-r9,lr}
00076e  b08b              SUB      sp,sp,#0x2c
000770  4607              MOV      r7,r0
000772  460c              MOV      r4,r1
000774  4690              MOV      r8,r2
;;;618      WIDGET_ITEM_DRAW_INFO ItemInfo;
;;;619      GUI_RECT RectInside, RectItem, ClipRect;
;;;620      int ItemDistY, NumItems, i;
;;;621      NumItems = LISTBOX__GetNumItems(pObj);
000776  4620              MOV      r0,r4
000778  f7fffffe          BL       LISTBOX__GetNumItems
00077c  4681              MOV      r9,r0
;;;622      GUI_SetFont(pObj->Props.pFont);
00077e  6ca0              LDR      r0,[r4,#0x48]
000780  f7fffffe          BL       GUI_SetFont
;;;623      /* Calculate clipping rectangle */
;;;624      ClipRect = *(const GUI_RECT*)pMsg->Data.p;
000784  f8d80008          LDR      r0,[r8,#8]
000788  6801              LDR      r1,[r0,#0]
00078a  9100              STR      r1,[sp,#0]
00078c  6840              LDR      r0,[r0,#4]
00078e  9001              STR      r0,[sp,#4]
;;;625      GUI_MoveRect(&ClipRect, -pObj->Widget.Win.Rect.x0, -pObj->Widget.Win.Rect.y0);
000790  f9b40002          LDRSH    r0,[r4,#2]
000794  4242              RSBS     r2,r0,#0
000796  f9b40000          LDRSH    r0,[r4,#0]
00079a  4241              RSBS     r1,r0,#0
00079c  4668              MOV      r0,sp
00079e  f7fffffe          BL       GUI_MoveRect
;;;626      WM_GetInsideRectExScrollbar(hObj, &RectInside);
0007a2  a904              ADD      r1,sp,#0x10
0007a4  4638              MOV      r0,r7
0007a6  f7fffffe          BL       WM_GetInsideRectExScrollbar
;;;627      GUI__IntersectRect(&ClipRect, &RectInside);
0007aa  a904              ADD      r1,sp,#0x10
0007ac  4668              MOV      r0,sp
0007ae  f7fffffe          BL       GUI__IntersectRect
;;;628      RectItem.x0 = ClipRect.x0;
0007b2  f8bd0000          LDRH     r0,[sp,#0]
0007b6  f8ad0008          STRH     r0,[sp,#8]
;;;629      RectItem.x1 = ClipRect.x1;
0007ba  f8bd0004          LDRH     r0,[sp,#4]
0007be  f8ad000c          STRH     r0,[sp,#0xc]
;;;630      /* Fill item info structure */
;;;631      ItemInfo.Cmd  = WIDGET_ITEM_DRAW;
0007c2  2000              MOVS     r0,#0
0007c4  9007              STR      r0,[sp,#0x1c]
;;;632      ItemInfo.hWin = hObj;
0007c6  f8ad7018          STRH     r7,[sp,#0x18]
;;;633      ItemInfo.x0   = RectInside.x0 - pObj->ScrollStateH.v;
0007ca  f9bd1010          LDRSH    r1,[sp,#0x10]
0007ce  6c20              LDR      r0,[r4,#0x40]
0007d0  1a08              SUBS     r0,r1,r0
0007d2  9009              STR      r0,[sp,#0x24]
;;;634      ItemInfo.y0   = RectInside.y0;
0007d4  f9bd0012          LDRSH    r0,[sp,#0x12]
0007d8  900a              STR      r0,[sp,#0x28]
;;;635      /* Do the drawing */
;;;636      for (i = pObj->ScrollStateV.v; i < NumItems; i++) {
0007da  6b66              LDR      r6,[r4,#0x34]
0007dc  e02e              B        |L1.2108|
                  |L1.2014|
;;;637        RectItem.y0 = ItemInfo.y0;
0007de  980a              LDR      r0,[sp,#0x28]
0007e0  b200              SXTH     r0,r0
0007e2  f8ad000a          STRH     r0,[sp,#0xa]
;;;638        /* Break when all other rows are outside the drawing area */
;;;639        if (RectItem.y0 > ClipRect.y1) {
0007e6  f9bd000a          LDRSH    r0,[sp,#0xa]
0007ea  f9bd1006          LDRSH    r1,[sp,#6]
0007ee  4288              CMP      r0,r1
0007f0  dd00              BLE      |L1.2036|
;;;640          break;
0007f2  e025              B        |L1.2112|
                  |L1.2036|
;;;641        }
;;;642        ItemDistY = _GetItemSizeY(hObj, pObj, i);
0007f4  4632              MOV      r2,r6
0007f6  4621              MOV      r1,r4
0007f8  4638              MOV      r0,r7
0007fa  f7fffffe          BL       _GetItemSizeY
0007fe  4605              MOV      r5,r0
;;;643        RectItem.y1 = RectItem.y0 + ItemDistY - 1;
000800  f8bd100a          LDRH     r1,[sp,#0xa]
000804  1948              ADDS     r0,r1,r5
000806  1e40              SUBS     r0,r0,#1
000808  b200              SXTH     r0,r0
00080a  f8ad000e          STRH     r0,[sp,#0xe]
;;;644        /* Make sure that we draw only when row is in drawing area */
;;;645        if (RectItem.y1 >= ClipRect.y0) {
00080e  f9bd000e          LDRSH    r0,[sp,#0xe]
000812  f9bd1002          LDRSH    r1,[sp,#2]
000816  4288              CMP      r0,r1
000818  db0c              BLT      |L1.2100|
;;;646          /* Set user clip rect */
;;;647          WM_SetUserClipArea(&RectItem);
00081a  a802              ADD      r0,sp,#8
00081c  f7fffffe          BL       WM_SetUserClipRect
;;;648          /* Fill item info structure */
;;;649          ItemInfo.ItemIndex = i;
000820  9608              STR      r6,[sp,#0x20]
;;;650          /* Draw item */
;;;651          if (pObj->pfDrawItem) {
000822  6ae0              LDR      r0,[r4,#0x2c]
000824  b118              CBZ      r0,|L1.2094|
;;;652            pObj->pfDrawItem(&ItemInfo);
000826  a806              ADD      r0,sp,#0x18
000828  6ae1              LDR      r1,[r4,#0x2c]
00082a  4788              BLX      r1
00082c  e002              B        |L1.2100|
                  |L1.2094|
;;;653          } else {
;;;654            LISTBOX_OwnerDraw(&ItemInfo);
00082e  a806              ADD      r0,sp,#0x18
000830  f7fffffe          BL       LISTBOX_OwnerDraw
                  |L1.2100|
;;;655          }
;;;656        }
;;;657        ItemInfo.y0 += ItemDistY;
000834  980a              LDR      r0,[sp,#0x28]
000836  4428              ADD      r0,r0,r5
000838  900a              STR      r0,[sp,#0x28]
00083a  1c76              ADDS     r6,r6,#1              ;636
                  |L1.2108|
00083c  454e              CMP      r6,r9                 ;636
00083e  dbce              BLT      |L1.2014|
                  |L1.2112|
000840  bf00              NOP                            ;640
;;;658      }
;;;659      WM_SetUserClipArea(NULL);
000842  2000              MOVS     r0,#0
000844  f7fffffe          BL       WM_SetUserClipRect
;;;660      /* Calculate & clear 'data free' area */
;;;661      RectItem.y0 = ItemInfo.y0;
000848  980a              LDR      r0,[sp,#0x28]
00084a  b200              SXTH     r0,r0
00084c  f8ad000a          STRH     r0,[sp,#0xa]
;;;662      RectItem.y1 = RectInside.y1;
000850  f8bd0016          LDRH     r0,[sp,#0x16]
000854  f8ad000e          STRH     r0,[sp,#0xe]
;;;663      LCD_SetBkColor(pObj->Props.aBackColor[0]);
000858  6d20              LDR      r0,[r4,#0x50]
00085a  f7fffffe          BL       LCD_SetBkColor
;;;664      GUI_ClearRectEx(&RectItem);
00085e  a802              ADD      r0,sp,#8
000860  f7fffffe          BL       GUI_ClearRectEx
;;;665      /* Draw the 3D effect (if configured) */
;;;666      WIDGET__EFFECT_DrawDown(&pObj->Widget);
000864  4620              MOV      r0,r4
000866  f7fffffe          BL       WIDGET__EFFECT_DrawDown
;;;667    }
00086a  b00b              ADD      sp,sp,#0x2c
00086c  e8bd83f0          POP      {r4-r9,pc}
;;;668    
                          ENDP

                  _ToggleMultiSel PROC
;;;672    */
;;;673    static void _ToggleMultiSel(LISTBOX_Handle hObj, LISTBOX_Obj* pObj, int Sel) {
000870  e92d41f0          PUSH     {r4-r8,lr}
000874  4680              MOV      r8,r0
000876  460c              MOV      r4,r1
000878  4616              MOV      r6,r2
;;;674      if (pObj->Flags & LISTBOX_SF_MULTISEL) {
00087a  f8940074          LDRB     r0,[r4,#0x74]
00087e  f0100f04          TST      r0,#4
000882  d01d              BEQ      |L1.2240|
;;;675        WM_HMEM hItem = GUI_ARRAY_GethItem(&pObj->ItemArray, Sel);
000884  4631              MOV      r1,r6
000886  f1040028          ADD      r0,r4,#0x28
00088a  f7fffffe          BL       GUI_ARRAY_GethItem
00088e  4607              MOV      r7,r0
;;;676        if (hItem) {
000890  b1af              CBZ      r7,|L1.2238|
;;;677          LISTBOX_ITEM * pItem = (LISTBOX_ITEM *)GUI_ALLOC_h2p(hItem);
000892  4638              MOV      r0,r7
000894  f7fffffe          BL       GUI_ALLOC_h2p
000898  4605              MOV      r5,r0
;;;678          if (!(pItem->Status & LISTBOX_ITEM_DISABLED)) {
00089a  7928              LDRB     r0,[r5,#4]
00089c  f0100f02          TST      r0,#2
0008a0  d10c              BNE      |L1.2236|
;;;679            pItem->Status ^= LISTBOX_ITEM_SELECTED;
0008a2  7928              LDRB     r0,[r5,#4]
0008a4  f0800001          EOR      r0,r0,#1
0008a8  7128              STRB     r0,[r5,#4]
;;;680            _NotifyOwner(hObj, WM_NOTIFICATION_SEL_CHANGED);
0008aa  2104              MOVS     r1,#4
0008ac  4640              MOV      r0,r8
0008ae  f7fffffe          BL       _NotifyOwner
;;;681            LISTBOX__InvalidateItem(hObj, pObj, Sel);
0008b2  4632              MOV      r2,r6
0008b4  4621              MOV      r1,r4
0008b6  4640              MOV      r0,r8
0008b8  f7fffffe          BL       LISTBOX__InvalidateItem
                  |L1.2236|
;;;682          }
;;;683        }
0008bc  bf00              NOP      
                  |L1.2238|
;;;684      }
0008be  bf00              NOP      
                  |L1.2240|
;;;685    }
0008c0  e8bd81f0          POP      {r4-r8,pc}
;;;686    
                          ENDP

                  _GetItemFromPos PROC
;;;690    */
;;;691    static int _GetItemFromPos(LISTBOX_Handle hObj, LISTBOX_Obj* pObj, int x, int y) {
0008c4  e92d5ffc          PUSH     {r2-r12,lr}
0008c8  4681              MOV      r9,r0
0008ca  460e              MOV      r6,r1
0008cc  4617              MOV      r7,r2
0008ce  461c              MOV      r4,r3
;;;692      int Sel = -1;
0008d0  f04f3aff          MOV      r10,#0xffffffff
;;;693      GUI_RECT Rect;
;;;694      WM_GetInsideRectExScrollbar(hObj, &Rect);
0008d4  4669              MOV      r1,sp
0008d6  4648              MOV      r0,r9
0008d8  f7fffffe          BL       WM_GetInsideRectExScrollbar
;;;695      if ((x >= Rect.x0) && (y >= Rect.y0)) {
0008dc  f9bd0000          LDRSH    r0,[sp,#0]
0008e0  42b8              CMP      r0,r7
0008e2  dc20              BGT      |L1.2342|
0008e4  f9bd0002          LDRSH    r0,[sp,#2]
0008e8  42a0              CMP      r0,r4
0008ea  dc1c              BGT      |L1.2342|
;;;696        if ((x <= Rect.x1) && (y <= Rect.y1)) {
0008ec  f9bd0004          LDRSH    r0,[sp,#4]
0008f0  42b8              CMP      r0,r7
0008f2  db18              BLT      |L1.2342|
0008f4  f9bd0006          LDRSH    r0,[sp,#6]
0008f8  42a0              CMP      r0,r4
0008fa  db14              BLT      |L1.2342|
;;;697          int NumItems = LISTBOX__GetNumItems(pObj);
0008fc  4630              MOV      r0,r6
0008fe  f7fffffe          BL       LISTBOX__GetNumItems
000902  4683              MOV      r11,r0
;;;698          int i, y0 = Rect.y0;
000904  f9bd8002          LDRSH    r8,[sp,#2]
;;;699          for (i = pObj->ScrollStateV.v; i < NumItems; i++) {
000908  6b75              LDR      r5,[r6,#0x34]
00090a  e009              B        |L1.2336|
                  |L1.2316|
;;;700            if (y >= y0) {
00090c  4544              CMP      r4,r8
00090e  db00              BLT      |L1.2322|
;;;701              Sel = i;
000910  46aa              MOV      r10,r5
                  |L1.2322|
;;;702            }
;;;703            y0 += _GetItemSizeY(hObj, pObj, i);
000912  462a              MOV      r2,r5
000914  4631              MOV      r1,r6
000916  4648              MOV      r0,r9
000918  f7fffffe          BL       _GetItemSizeY
00091c  4480              ADD      r8,r8,r0
00091e  1c6d              ADDS     r5,r5,#1              ;699
                  |L1.2336|
000920  455d              CMP      r5,r11                ;699
000922  dbf3              BLT      |L1.2316|
;;;704          }
;;;705        }
000924  bf00              NOP      
                  |L1.2342|
;;;706      }
;;;707      return Sel;
000926  4650              MOV      r0,r10
;;;708    }
000928  e8bd9ffc          POP      {r2-r12,pc}
;;;709    
                          ENDP

                  _OnTouch PROC
;;;713    */
;;;714    static void _OnTouch(LISTBOX_Handle hObj, WM_MESSAGE* pMsg) {
00092c  b570              PUSH     {r4-r6,lr}
00092e  4605              MOV      r5,r0
000930  460c              MOV      r4,r1
;;;715      const GUI_PID_STATE* pState = (const GUI_PID_STATE*)pMsg->Data.p;
000932  68a6              LDR      r6,[r4,#8]
;;;716      if (pMsg->Data.p) {  /* Something happened in our area (pressed or released) */
000934  68a0              LDR      r0,[r4,#8]
000936  b130              CBZ      r0,|L1.2374|
;;;717        if (pState->Pressed == 0) {
000938  7a30              LDRB     r0,[r6,#8]
00093a  b940              CBNZ     r0,|L1.2382|
;;;718          _NotifyOwner(hObj, WM_NOTIFICATION_RELEASED);
00093c  2102              MOVS     r1,#2
00093e  4628              MOV      r0,r5
000940  f7fffffe          BL       _NotifyOwner
000944  e003              B        |L1.2382|
                  |L1.2374|
;;;719        }
;;;720      } else {     /* Mouse moved out */
;;;721        _NotifyOwner(hObj, WM_NOTIFICATION_MOVED_OUT);
000946  2103              MOVS     r1,#3
000948  4628              MOV      r0,r5
00094a  f7fffffe          BL       _NotifyOwner
                  |L1.2382|
;;;722      }
;;;723    }
00094e  bd70              POP      {r4-r6,pc}
;;;724    
                          ENDP

                  LISTBOX_GetSel PROC
;;;1081   */
;;;1082   int  LISTBOX_GetSel (LISTBOX_Handle hObj) {
000950  b570              PUSH     {r4-r6,lr}
000952  4604              MOV      r4,r0
;;;1083     int r = -1;
000954  f04f36ff          MOV      r6,#0xffffffff
;;;1084     LISTBOX_Obj* pObj;
;;;1085     if (hObj) {
000958  b14c              CBZ      r4,|L1.2414|
;;;1086       WM_LOCK();
00095a  f7fffffe          BL       GUI_Lock
;;;1087       pObj = LISTBOX_H2P(hObj);
00095e  4620              MOV      r0,r4
000960  f7fffffe          BL       GUI_ALLOC_h2p
000964  4605              MOV      r5,r0
;;;1088       ASSERT_IS_VALID_PTR(pObj);
;;;1089       r = pObj->Sel;
000966  f9b56072          LDRSH    r6,[r5,#0x72]
;;;1090       WM_UNLOCK();
00096a  f7fffffe          BL       GUI_Unlock
                  |L1.2414|
;;;1091     }
;;;1092     return r;
00096e  4630              MOV      r0,r6
;;;1093   }
000970  bd70              POP      {r4-r6,pc}
;;;1094   
                          ENDP

                  _MoveSel PROC
;;;838    */
;;;839    static void _MoveSel(LISTBOX_Handle hObj, int Dir) {
000972  e92d5ff0          PUSH     {r4-r12,lr}
000976  4681              MOV      r9,r0
000978  460f              MOV      r7,r1
;;;840      int Index, NewSel = -1, NumItems;
00097a  f04f35ff          MOV      r5,#0xffffffff
;;;841      LISTBOX_Obj * pObj;
;;;842      pObj = LISTBOX_H2P(hObj);
00097e  4648              MOV      r0,r9
000980  f7fffffe          BL       GUI_ALLOC_h2p
000984  4680              MOV      r8,r0
;;;843      Index = LISTBOX_GetSel(hObj);
000986  4648              MOV      r0,r9
000988  f7fffffe          BL       LISTBOX_GetSel
00098c  4604              MOV      r4,r0
;;;844      NumItems = LISTBOX__GetNumItems(pObj);
00098e  4640              MOV      r0,r8
000990  f7fffffe          BL       LISTBOX__GetNumItems
000994  4682              MOV      r10,r0
;;;845      do {
000996  bf00              NOP      
                  |L1.2456|
;;;846        WM_HMEM hItem;
;;;847        Index += Dir;
000998  443c              ADD      r4,r4,r7
;;;848        if ((Index < 0) || (Index >= NumItems)) {
00099a  2c00              CMP      r4,#0
00099c  db01              BLT      |L1.2466|
00099e  4554              CMP      r4,r10
0009a0  db00              BLT      |L1.2468|
                  |L1.2466|
;;;849          break;
0009a2  e013              B        |L1.2508|
                  |L1.2468|
;;;850        }
;;;851        hItem = GUI_ARRAY_GethItem(&pObj->ItemArray, Index);
0009a4  4621              MOV      r1,r4
0009a6  f1080028          ADD      r0,r8,#0x28
0009aa  f7fffffe          BL       GUI_ARRAY_GethItem
0009ae  4606              MOV      r6,r0
;;;852        if (hItem) {
0009b0  b156              CBZ      r6,|L1.2504|
;;;853          LISTBOX_ITEM * pItem = (LISTBOX_ITEM *)GUI_ALLOC_h2p(hItem);
0009b2  4630              MOV      r0,r6
0009b4  f7fffffe          BL       GUI_ALLOC_h2p
0009b8  4683              MOV      r11,r0
;;;854          if (!(pItem->Status & LISTBOX_ITEM_DISABLED)) {
0009ba  f89b0004          LDRB     r0,[r11,#4]
0009be  f0100f02          TST      r0,#2
0009c2  d100              BNE      |L1.2502|
;;;855            NewSel = Index;
0009c4  4625              MOV      r5,r4
                  |L1.2502|
;;;856          }
;;;857        }
0009c6  bf00              NOP      
                  |L1.2504|
;;;858      } while(NewSel < 0);
0009c8  2d00              CMP      r5,#0
0009ca  dbe5              BLT      |L1.2456|
                  |L1.2508|
0009cc  bf00              NOP                            ;849
;;;859      if (NewSel >= 0) {
0009ce  2d00              CMP      r5,#0
0009d0  db03              BLT      |L1.2522|
;;;860        LISTBOX_SetSel(hObj, NewSel);
0009d2  4629              MOV      r1,r5
0009d4  4648              MOV      r0,r9
0009d6  f7fffffe          BL       LISTBOX_SetSel
                  |L1.2522|
;;;861      }
;;;862    }
0009da  e8bd9ff0          POP      {r4-r12,pc}
;;;863    
                          ENDP

                  LISTBOX_DecSel PROC
;;;1110   */
;;;1111   void LISTBOX_DecSel      (LISTBOX_Handle hObj) {
0009de  b510              PUSH     {r4,lr}
0009e0  4604              MOV      r4,r0
;;;1112     if (hObj) {
0009e2  b144              CBZ      r4,|L1.2550|
;;;1113       WM_LOCK();
0009e4  f7fffffe          BL       GUI_Lock
;;;1114       _MoveSel(hObj, -1);
0009e8  f04f31ff          MOV      r1,#0xffffffff
0009ec  4620              MOV      r0,r4
0009ee  f7fffffe          BL       _MoveSel
;;;1115       WM_UNLOCK();
0009f2  f7fffffe          BL       GUI_Unlock
                  |L1.2550|
;;;1116     }
;;;1117   }
0009f6  bd10              POP      {r4,pc}
;;;1118   
                          ENDP

                  LISTBOX_IncSel PROC
;;;1098   */
;;;1099   void LISTBOX_IncSel      (LISTBOX_Handle hObj) {
0009f8  b510              PUSH     {r4,lr}
0009fa  4604              MOV      r4,r0
;;;1100     if (hObj) {
0009fc  b13c              CBZ      r4,|L1.2574|
;;;1101       WM_LOCK();
0009fe  f7fffffe          BL       GUI_Lock
;;;1102       _MoveSel(hObj, 1);
000a02  2101              MOVS     r1,#1
000a04  4620              MOV      r0,r4
000a06  f7fffffe          BL       _MoveSel
;;;1103       WM_UNLOCK();
000a0a  f7fffffe          BL       GUI_Unlock
                  |L1.2574|
;;;1104     }
;;;1105   }
000a0e  bd10              POP      {r4,pc}
;;;1106   
                          ENDP

                  _AddKey PROC
;;;870    */
;;;871    static int _AddKey(LISTBOX_Handle hObj, int Key) {
000a10  b570              PUSH     {r4-r6,lr}
000a12  4606              MOV      r6,r0
000a14  460d              MOV      r5,r1
;;;872      LISTBOX_Obj* pObj;
;;;873      pObj = LISTBOX_H2P(hObj);
000a16  4630              MOV      r0,r6
000a18  f7fffffe          BL       GUI_ALLOC_h2p
000a1c  4604              MOV      r4,r0
;;;874      switch (Key) {
000a1e  2d12              CMP      r5,#0x12
000a20  d011              BEQ      |L1.2630|
000a22  dc04              BGT      |L1.2606|
000a24  2d10              CMP      r5,#0x10
000a26  d01f              BEQ      |L1.2664|
000a28  2d11              CMP      r5,#0x11
000a2a  d138              BNE      |L1.2718|
000a2c  e032              B        |L1.2708|
                  |L1.2606|
000a2e  2d13              CMP      r5,#0x13
000a30  d02b              BEQ      |L1.2698|
000a32  2d20              CMP      r5,#0x20
000a34  d133              BNE      |L1.2718|
;;;875      case ' ':
;;;876        _ToggleMultiSel(hObj, pObj, pObj->Sel);
000a36  f9b42072          LDRSH    r2,[r4,#0x72]
000a3a  4621              MOV      r1,r4
000a3c  4630              MOV      r0,r6
000a3e  f7fffffe          BL       _ToggleMultiSel
;;;877        return 1;               /* Key has been consumed */
000a42  2001              MOVS     r0,#1
                  |L1.2628|
;;;878      case GUI_KEY_RIGHT:
;;;879        if (WM_SetScrollValue(&pObj->ScrollStateH, pObj->ScrollStateH.v + pObj->Props.ScrollStepH)) {
;;;880          LISTBOX_UpdateScrollers(hObj);
;;;881          LISTBOX__InvalidateInsideArea(hObj);
;;;882        }
;;;883        return 1;               /* Key has been consumed */
;;;884      case GUI_KEY_LEFT:
;;;885        if (WM_SetScrollValue(&pObj->ScrollStateH, pObj->ScrollStateH.v - pObj->Props.ScrollStepH)) {
;;;886          LISTBOX_UpdateScrollers(hObj);
;;;887          LISTBOX__InvalidateInsideArea(hObj);
;;;888        }
;;;889        return 1;               /* Key has been consumed */
;;;890      case GUI_KEY_DOWN:
;;;891        LISTBOX_IncSel(hObj);
;;;892        return 1;               /* Key has been consumed */
;;;893      case GUI_KEY_UP:
;;;894        LISTBOX_DecSel(hObj);
;;;895        return 1;               /* Key has been consumed */
;;;896      default:
;;;897        if(_IsAlphaNum(Key)) {
;;;898          _SelectByKey(hObj, Key);
;;;899          return 1;               /* Key has been consumed */
;;;900        }
;;;901      }
;;;902      return 0;
;;;903    }
000a44  bd70              POP      {r4-r6,pc}
                  |L1.2630|
000a46  204c              MOVS     r0,#0x4c              ;879
000a48  5b00              LDRH     r0,[r0,r4]            ;879
000a4a  6c22              LDR      r2,[r4,#0x40]         ;879
000a4c  1811              ADDS     r1,r2,r0              ;879
000a4e  f104003c          ADD      r0,r4,#0x3c           ;879
000a52  f7fffffe          BL       WM_SetScrollValue
000a56  b128              CBZ      r0,|L1.2660|
000a58  4630              MOV      r0,r6                 ;880
000a5a  f7fffffe          BL       LISTBOX_UpdateScrollers
000a5e  4630              MOV      r0,r6                 ;881
000a60  f7fffffe          BL       LISTBOX__InvalidateInsideArea
                  |L1.2660|
000a64  2001              MOVS     r0,#1                 ;883
000a66  e7ed              B        |L1.2628|
                  |L1.2664|
000a68  204c              MOVS     r0,#0x4c              ;885
000a6a  5b00              LDRH     r0,[r0,r4]            ;885
000a6c  6c22              LDR      r2,[r4,#0x40]         ;885
000a6e  1a11              SUBS     r1,r2,r0              ;885
000a70  f104003c          ADD      r0,r4,#0x3c           ;885
000a74  f7fffffe          BL       WM_SetScrollValue
000a78  b128              CBZ      r0,|L1.2694|
000a7a  4630              MOV      r0,r6                 ;886
000a7c  f7fffffe          BL       LISTBOX_UpdateScrollers
000a80  4630              MOV      r0,r6                 ;887
000a82  f7fffffe          BL       LISTBOX__InvalidateInsideArea
                  |L1.2694|
000a86  2001              MOVS     r0,#1                 ;889
000a88  e7dc              B        |L1.2628|
                  |L1.2698|
000a8a  4630              MOV      r0,r6                 ;891
000a8c  f7fffffe          BL       LISTBOX_IncSel
000a90  2001              MOVS     r0,#1                 ;892
000a92  e7d7              B        |L1.2628|
                  |L1.2708|
000a94  4630              MOV      r0,r6                 ;894
000a96  f7fffffe          BL       LISTBOX_DecSel
000a9a  2001              MOVS     r0,#1                 ;895
000a9c  e7d2              B        |L1.2628|
                  |L1.2718|
000a9e  4628              MOV      r0,r5                 ;897
000aa0  f7fffffe          BL       _IsAlphaNum
000aa4  b128              CBZ      r0,|L1.2738|
000aa6  4629              MOV      r1,r5                 ;898
000aa8  4630              MOV      r0,r6                 ;898
000aaa  f7fffffe          BL       _SelectByKey
000aae  2001              MOVS     r0,#1                 ;899
000ab0  e7c8              B        |L1.2628|
                  |L1.2738|
000ab2  bf00              NOP                            ;874
000ab4  bf00              NOP                            ;874
000ab6  2000              MOVS     r0,#0                 ;902
000ab8  e7c4              B        |L1.2628|
;;;904    
                          ENDP

                  LISTBOX_AddKey PROC
;;;984    */
;;;985    int LISTBOX_AddKey(LISTBOX_Handle hObj, int Key) {
000aba  b570              PUSH     {r4-r6,lr}
000abc  4604              MOV      r4,r0
000abe  460d              MOV      r5,r1
;;;986      int r = 0;
000ac0  2600              MOVS     r6,#0
;;;987      if (hObj) {
000ac2  b144              CBZ      r4,|L1.2774|
;;;988        WM_LOCK();
000ac4  f7fffffe          BL       GUI_Lock
;;;989        r = _AddKey(hObj, Key);
000ac8  4629              MOV      r1,r5
000aca  4620              MOV      r0,r4
000acc  f7fffffe          BL       _AddKey
000ad0  4606              MOV      r6,r0
;;;990        WM_UNLOCK();
000ad2  f7fffffe          BL       GUI_Unlock
                  |L1.2774|
;;;991      }
;;;992      return r;
000ad6  4630              MOV      r0,r6
;;;993    }
000ad8  bd70              POP      {r4-r6,pc}
;;;994    
                          ENDP

                  _LISTBOX_Callback PROC
;;;750    */
;;;751    static void _LISTBOX_Callback(WM_MESSAGE*pMsg) {
000ada  e92d43fe          PUSH     {r1-r9,lr}
000ade  4604              MOV      r4,r0
;;;752      LISTBOX_Handle hObj = pMsg->hWin;
000ae0  f9b48004          LDRSH    r8,[r4,#4]
;;;753      LISTBOX_Obj* pObj = LISTBOX_H2P(hObj);
000ae4  4640              MOV      r0,r8
000ae6  f7fffffe          BL       GUI_ALLOC_h2p
000aea  4605              MOV      r5,r0
;;;754      WM_SCROLL_STATE ScrollState;
;;;755      /* Let widget handle the standard messages */
;;;756      if (WIDGET_HandleActive(hObj, pMsg) == 0) {
000aec  4621              MOV      r1,r4
000aee  4640              MOV      r0,r8
000af0  f7fffffe          BL       WIDGET_HandleActive
000af4  b950              CBNZ     r0,|L1.2828|
;;;757        /* Owner needs to be informed about focus change */
;;;758        if (pMsg->MsgId == WM_SET_FOCUS) {
000af6  6820              LDR      r0,[r4,#0]
000af8  281f              CMP      r0,#0x1f
000afa  d105              BNE      |L1.2824|
;;;759          if (pMsg->Data.v == 0) {            /* Lost focus ? */
000afc  68a0              LDR      r0,[r4,#8]
000afe  b918              CBNZ     r0,|L1.2824|
;;;760            _NotifyOwner(hObj, LISTBOX_NOTIFICATION_LOST_FOCUS);
000b00  210b              MOVS     r1,#0xb
000b02  4640              MOV      r0,r8
000b04  f7fffffe          BL       _NotifyOwner
                  |L1.2824|
;;;761          }
;;;762        }
;;;763        return;
;;;764      }
;;;765      switch (pMsg->MsgId) {
;;;766      case WM_NOTIFY_PARENT:
;;;767        switch (pMsg->Data.v) {
;;;768        case WM_NOTIFICATION_VALUE_CHANGED:
;;;769          if (pMsg->hWinSrc  == WM_GetScrollbarV(hObj)) {
;;;770            WM_GetScrollState(pMsg->hWinSrc, &ScrollState);
;;;771            pObj->ScrollStateV.v = ScrollState.v;
;;;772            LISTBOX__InvalidateInsideArea(hObj);
;;;773            _NotifyOwner(hObj, WM_NOTIFICATION_SCROLL_CHANGED);
;;;774          } else if (pMsg->hWinSrc == WM_GetScrollbarH(hObj)) {
;;;775            WM_GetScrollState(pMsg->hWinSrc, &ScrollState);
;;;776            pObj->ScrollStateH.v = ScrollState.v;
;;;777            LISTBOX__InvalidateInsideArea(hObj);
;;;778            _NotifyOwner(hObj, WM_NOTIFICATION_SCROLL_CHANGED);
;;;779          }
;;;780          break;
;;;781        case WM_NOTIFICATION_SCROLLBAR_ADDED:
;;;782          LISTBOX_UpdateScrollers(hObj);
;;;783          break;
;;;784        }
;;;785        break;
;;;786      case WM_PAINT:
;;;787        _OnPaint(hObj, pObj, pMsg);
;;;788        break;
;;;789      case WM_PID_STATE_CHANGED:
;;;790        {
;;;791          const WM_PID_STATE_CHANGED_INFO* pInfo = (const WM_PID_STATE_CHANGED_INFO*)pMsg->Data.p;
;;;792          if (pInfo->State) {
;;;793            int Sel;
;;;794            Sel = _GetItemFromPos(hObj, pObj, pInfo->x, pInfo->y);
;;;795            if (Sel >= 0) {
;;;796              _ToggleMultiSel(hObj, pObj, Sel);
;;;797              LISTBOX_SetSel(hObj, Sel);
;;;798            }
;;;799            _NotifyOwner(hObj, WM_NOTIFICATION_CLICKED);
;;;800            return;
;;;801          }
;;;802        }
;;;803        break;
;;;804      case WM_TOUCH:
;;;805        _OnTouch(hObj, pMsg);
;;;806        return;
;;;807    #if GUI_SUPPORT_MOUSE
;;;808      case WM_MOUSEOVER:
;;;809        if (_OnMouseOver(hObj, pObj, pMsg) == 0)
;;;810          return;
;;;811        break;
;;;812    #endif
;;;813      case WM_DELETE:
;;;814        _FreeAttached(pObj);
;;;815        break;       /* No return here ... WM_DefaultProc needs to be called */
;;;816      case WM_KEY:
;;;817        if (((const WM_KEY_INFO*)(pMsg->Data.p))->PressedCnt > 0) {
;;;818          int Key;
;;;819          Key = ((const WM_KEY_INFO*)(pMsg->Data.p))->Key;
;;;820          if (LISTBOX_AddKey(hObj, Key)) {
;;;821            return;
;;;822          }
;;;823        }
;;;824        break;
;;;825      case WM_SIZE:
;;;826        LISTBOX_UpdateScrollers(hObj);
;;;827        WM_InvalidateWindow(hObj);
;;;828        break;
;;;829      }
;;;830      WM_DefaultProc(pMsg);
;;;831    }
000b08  e8bd83fe          POP      {r1-r9,pc}
                  |L1.2828|
000b0c  6820              LDR      r0,[r4,#0]            ;765
000b0e  280e              CMP      r0,#0xe               ;765
000b10  d071              BEQ      |L1.3062|
000b12  dc06              BGT      |L1.2850|
000b14  2805              CMP      r0,#5                 ;765
000b16  d07c              BEQ      |L1.3090|
000b18  280b              CMP      r0,#0xb               ;765
000b1a  d066              BEQ      |L1.3050|
000b1c  280c              CMP      r0,#0xc               ;765
000b1e  d17f              BNE      |L1.3104|
000b20  e05e              B        |L1.3040|
                  |L1.2850|
000b22  280f              CMP      r0,#0xf               ;765
000b24  d03b              BEQ      |L1.2974|
000b26  2811              CMP      r0,#0x11              ;765
000b28  d03f              BEQ      |L1.2986|
000b2a  2826              CMP      r0,#0x26              ;765
000b2c  d178              BNE      |L1.3104|
000b2e  68a0              LDR      r0,[r4,#8]            ;767
000b30  2805              CMP      r0,#5                 ;767
000b32  d002              BEQ      |L1.2874|
000b34  2806              CMP      r0,#6                 ;767
000b36  d130              BNE      |L1.2970|
000b38  e02b              B        |L1.2962|
                  |L1.2874|
000b3a  4640              MOV      r0,r8                 ;769
000b3c  f7fffffe          BL       WM_GetScrollbarV
000b40  f9b41006          LDRSH    r1,[r4,#6]            ;769
000b44  4288              CMP      r0,r1                 ;769
000b46  d10e              BNE      |L1.2918|
000b48  f9b40006          LDRSH    r0,[r4,#6]            ;770
000b4c  4669              MOV      r1,sp                 ;770
000b4e  f7fffffe          BL       WM_GetScrollState
000b52  9901              LDR      r1,[sp,#4]            ;771
000b54  6369              STR      r1,[r5,#0x34]         ;771
000b56  4640              MOV      r0,r8                 ;772
000b58  f7fffffe          BL       LISTBOX__InvalidateInsideArea
000b5c  210a              MOVS     r1,#0xa               ;773
000b5e  4640              MOV      r0,r8                 ;773
000b60  f7fffffe          BL       _NotifyOwner
000b64  e014              B        |L1.2960|
                  |L1.2918|
000b66  4640              MOV      r0,r8                 ;774
000b68  f7fffffe          BL       WM_GetScrollbarH
000b6c  f9b41006          LDRSH    r1,[r4,#6]            ;774
000b70  4288              CMP      r0,r1                 ;774
000b72  d10d              BNE      |L1.2960|
000b74  f9b40006          LDRSH    r0,[r4,#6]            ;775
000b78  4669              MOV      r1,sp                 ;775
000b7a  f7fffffe          BL       WM_GetScrollState
000b7e  9901              LDR      r1,[sp,#4]            ;776
000b80  6429              STR      r1,[r5,#0x40]         ;776
000b82  4640              MOV      r0,r8                 ;777
000b84  f7fffffe          BL       LISTBOX__InvalidateInsideArea
000b88  210a              MOVS     r1,#0xa               ;778
000b8a  4640              MOV      r0,r8                 ;778
000b8c  f7fffffe          BL       _NotifyOwner
                  |L1.2960|
000b90  e003              B        |L1.2970|
                  |L1.2962|
000b92  4640              MOV      r0,r8                 ;782
000b94  f7fffffe          BL       LISTBOX_UpdateScrollers
000b98  bf00              NOP                            ;783
                  |L1.2970|
000b9a  bf00              NOP                            ;780
000b9c  e040              B        |L1.3104|
                  |L1.2974|
000b9e  4622              MOV      r2,r4                 ;787
000ba0  4629              MOV      r1,r5                 ;787
000ba2  4640              MOV      r0,r8                 ;787
000ba4  f7fffffe          BL       _OnPaint
000ba8  e03a              B        |L1.3104|
                  |L1.2986|
000baa  68a6              LDR      r6,[r4,#8]            ;791
000bac  7a30              LDRB     r0,[r6,#8]            ;792
000bae  b1b0              CBZ      r0,|L1.3038|
000bb0  4629              MOV      r1,r5                 ;794
000bb2  4640              MOV      r0,r8                 ;794
000bb4  e9d62300          LDRD     r2,r3,[r6,#0]         ;794
000bb8  f7fffffe          BL       _GetItemFromPos
000bbc  4607              MOV      r7,r0                 ;794
000bbe  2f00              CMP      r7,#0                 ;795
000bc0  db08              BLT      |L1.3028|
000bc2  463a              MOV      r2,r7                 ;796
000bc4  4629              MOV      r1,r5                 ;796
000bc6  4640              MOV      r0,r8                 ;796
000bc8  f7fffffe          BL       _ToggleMultiSel
000bcc  4639              MOV      r1,r7                 ;797
000bce  4640              MOV      r0,r8                 ;797
000bd0  f7fffffe          BL       LISTBOX_SetSel
                  |L1.3028|
000bd4  2101              MOVS     r1,#1                 ;799
000bd6  4640              MOV      r0,r8                 ;799
000bd8  f7fffffe          BL       _NotifyOwner
000bdc  e794              B        |L1.2824|
                  |L1.3038|
000bde  e01f              B        |L1.3104|
                  |L1.3040|
000be0  4621              MOV      r1,r4                 ;805
000be2  4640              MOV      r0,r8                 ;805
000be4  f7fffffe          BL       _OnTouch
000be8  e78e              B        |L1.2824|
                  |L1.3050|
000bea  4628              MOV      r0,r5                 ;814
000bec  f7fffffe          BL       _FreeAttached
000bf0  e016              B        |L1.3104|
000bf2  e000              B        |L1.3062|
000bf4  e00d              B        |L1.3090|
                  |L1.3062|
000bf6  68a0              LDR      r0,[r4,#8]            ;817
000bf8  6840              LDR      r0,[r0,#4]            ;817
000bfa  2800              CMP      r0,#0                 ;817
000bfc  dd08              BLE      |L1.3088|
000bfe  68a0              LDR      r0,[r4,#8]            ;819
000c00  6806              LDR      r6,[r0,#0]            ;819
000c02  4631              MOV      r1,r6                 ;820
000c04  4640              MOV      r0,r8                 ;820
000c06  f7fffffe          BL       LISTBOX_AddKey
000c0a  b100              CBZ      r0,|L1.3086|
000c0c  e77c              B        |L1.2824|
                  |L1.3086|
000c0e  bf00              NOP                            ;823
                  |L1.3088|
000c10  e006              B        |L1.3104|
                  |L1.3090|
000c12  4640              MOV      r0,r8                 ;826
000c14  f7fffffe          BL       LISTBOX_UpdateScrollers
000c18  4640              MOV      r0,r8                 ;827
000c1a  f7fffffe          BL       WM_InvalidateWindow
000c1e  bf00              NOP                            ;828
                  |L1.3104|
000c20  bf00              NOP                            ;785
000c22  4620              MOV      r0,r4                 ;830
000c24  f7fffffe          BL       WM_DefaultProc
000c28  bf00              NOP      
000c2a  e76d              B        |L1.2824|
;;;832    
                          ENDP

                  LISTBOX_InvalidateItem PROC
;;;952    */
;;;953    void LISTBOX_InvalidateItem(LISTBOX_Handle hObj, int Index) {
000c2c  e92d41f0          PUSH     {r4-r8,lr}
000c30  4606              MOV      r6,r0
000c32  460c              MOV      r4,r1
;;;954      if (hObj) {
000c34  b366              CBZ      r6,|L1.3216|
;;;955        LISTBOX_Obj* pObj;
;;;956        int NumItems;
;;;957        WM_LOCK();
000c36  f7fffffe          BL       GUI_Lock
;;;958        pObj = LISTBOX_H2P(hObj);
000c3a  4630              MOV      r0,r6
000c3c  f7fffffe          BL       GUI_ALLOC_h2p
000c40  4680              MOV      r8,r0
;;;959        NumItems = LISTBOX__GetNumItems(pObj);
000c42  4640              MOV      r0,r8
000c44  f7fffffe          BL       LISTBOX__GetNumItems
000c48  4607              MOV      r7,r0
;;;960        if (Index < NumItems) {
000c4a  42bc              CMP      r4,r7
000c4c  da1d              BGE      |L1.3210|
;;;961          if (Index < 0) {
000c4e  2c00              CMP      r4,#0
000c50  da0f              BGE      |L1.3186|
;;;962            int i;
;;;963            for (i = 0; i < NumItems; i++) {
000c52  2500              MOVS     r5,#0
000c54  e004              B        |L1.3168|
                  |L1.3158|
;;;964              LISTBOX__InvalidateItemSize(pObj, i);
000c56  4629              MOV      r1,r5
000c58  4640              MOV      r0,r8
000c5a  f7fffffe          BL       LISTBOX__InvalidateItemSize
000c5e  1c6d              ADDS     r5,r5,#1              ;963
                  |L1.3168|
000c60  42bd              CMP      r5,r7                 ;963
000c62  dbf8              BLT      |L1.3158|
;;;965            }
;;;966            LISTBOX_UpdateScrollers(hObj);
000c64  4630              MOV      r0,r6
000c66  f7fffffe          BL       LISTBOX_UpdateScrollers
;;;967            LISTBOX__InvalidateInsideArea(hObj);
000c6a  4630              MOV      r0,r6
000c6c  f7fffffe          BL       LISTBOX__InvalidateInsideArea
;;;968          } else {
000c70  e00b              B        |L1.3210|
                  |L1.3186|
;;;969            LISTBOX__InvalidateItemSize(pObj, Index);
000c72  4621              MOV      r1,r4
000c74  4640              MOV      r0,r8
000c76  f7fffffe          BL       LISTBOX__InvalidateItemSize
;;;970            LISTBOX_UpdateScrollers(hObj);
000c7a  4630              MOV      r0,r6
000c7c  f7fffffe          BL       LISTBOX_UpdateScrollers
;;;971            LISTBOX__InvalidateItemAndBelow(hObj, pObj, Index);
000c80  4622              MOV      r2,r4
000c82  4641              MOV      r1,r8
000c84  4630              MOV      r0,r6
000c86  f7fffffe          BL       LISTBOX__InvalidateItemAndBelow
                  |L1.3210|
;;;972          }
;;;973        }
;;;974        WM_UNLOCK();
000c8a  f7fffffe          BL       GUI_Unlock
;;;975      }
000c8e  bf00              NOP      
                  |L1.3216|
;;;976    }
000c90  e8bd81f0          POP      {r4-r8,pc}
;;;977    
                          ENDP

                  LISTBOX_AddString PROC
;;;998    */
;;;999    void LISTBOX_AddString(LISTBOX_Handle hObj, const char* s) {
000c94  e92d41fc          PUSH     {r2-r8,lr}
000c98  4606              MOV      r6,r0
000c9a  460d              MOV      r5,r1
;;;1000     if (hObj && s) {
000c9c  b3a6              CBZ      r6,|L1.3336|
000c9e  b39d              CBZ      r5,|L1.3336|
;;;1001       LISTBOX_Obj* pObj;
;;;1002       LISTBOX_ITEM Item = {0, 0};
000ca0  2000              MOVS     r0,#0
000ca2  9000              STR      r0,[sp,#0]
000ca4  9001              STR      r0,[sp,#4]
;;;1003       WM_LOCK();
000ca6  f7fffffe          BL       GUI_Lock
;;;1004       pObj = LISTBOX_H2P(hObj);
000caa  4630              MOV      r0,r6
000cac  f7fffffe          BL       GUI_ALLOC_h2p
000cb0  4604              MOV      r4,r0
;;;1005       if (GUI_ARRAY_AddItem(&pObj->ItemArray, &Item, sizeof(LISTBOX_ITEM) + strlen(s)) == 0) {
000cb2  4628              MOV      r0,r5
000cb4  f7fffffe          BL       strlen
000cb8  1d87              ADDS     r7,r0,#6
000cba  463a              MOV      r2,r7
000cbc  4669              MOV      r1,sp
000cbe  f1040028          ADD      r0,r4,#0x28
000cc2  f7fffffe          BL       GUI_ARRAY_AddItem
000cc6  b9e0              CBNZ     r0,|L1.3330|
;;;1006         unsigned ItemIndex = GUI_ARRAY_GetNumItems(&pObj->ItemArray) - 1;
000cc8  f1040028          ADD      r0,r4,#0x28
000ccc  f7fffffe          BL       GUI_ARRAY_GetNumItems
000cd0  1e47              SUBS     r7,r0,#1
;;;1007         LISTBOX_ITEM* pItem= (LISTBOX_ITEM*)GUI_ARRAY_GetpItem(&pObj->ItemArray, ItemIndex);
000cd2  4639              MOV      r1,r7
000cd4  f1040028          ADD      r0,r4,#0x28
000cd8  f7fffffe          BL       GUI_ARRAY_GetpItem
000cdc  4680              MOV      r8,r0
;;;1008         strcpy(pItem->acText, s);
000cde  4629              MOV      r1,r5
000ce0  f1080005          ADD      r0,r8,#5
000ce4  f7fffffe          BL       strcpy
;;;1009         LISTBOX__InvalidateItemSize(pObj, ItemIndex);
000ce8  4639              MOV      r1,r7
000cea  4620              MOV      r0,r4
000cec  f7fffffe          BL       LISTBOX__InvalidateItemSize
;;;1010         LISTBOX_UpdateScrollers(hObj);
000cf0  4630              MOV      r0,r6
000cf2  f7fffffe          BL       LISTBOX_UpdateScrollers
;;;1011         LISTBOX__InvalidateItem(hObj, pObj, ItemIndex);
000cf6  463a              MOV      r2,r7
000cf8  4621              MOV      r1,r4
000cfa  4630              MOV      r0,r6
000cfc  f7fffffe          BL       LISTBOX__InvalidateItem
;;;1012       }
000d00  bf00              NOP      
                  |L1.3330|
;;;1013       WM_UNLOCK();
000d02  f7fffffe          BL       GUI_Unlock
;;;1014     }
000d06  bf00              NOP      
                  |L1.3336|
;;;1015   }
000d08  e8bd81fc          POP      {r2-r8,pc}
;;;1016   
                          ENDP

                  LISTBOX_SetText PROC
;;;1020   */
;;;1021   void LISTBOX_SetText(LISTBOX_Handle hObj, const GUI_ConstString* ppText) {
000d0c  e92d41f0          PUSH     {r4-r8,lr}
000d10  4606              MOV      r6,r0
000d12  460c              MOV      r4,r1
;;;1022     if (hObj) {
000d14  b1ae              CBZ      r6,|L1.3394|
;;;1023       int i;
;;;1024       const char* s;
;;;1025       WM_LOCK();
000d16  f7fffffe          BL       GUI_Lock
;;;1026       if (ppText) {
000d1a  b154              CBZ      r4,|L1.3378|
;;;1027         for (i = 0; (s = *(ppText+i)) != 0; i++) {
000d1c  2500              MOVS     r5,#0
000d1e  e004              B        |L1.3370|
                  |L1.3360|
;;;1028           LISTBOX_AddString(hObj, s);
000d20  4639              MOV      r1,r7
000d22  4630              MOV      r0,r6
000d24  f7fffffe          BL       LISTBOX_AddString
000d28  1c6d              ADDS     r5,r5,#1              ;1027
                  |L1.3370|
000d2a  f8547025          LDR      r7,[r4,r5,LSL #2]     ;1027
000d2e  2f00              CMP      r7,#0                 ;1027
000d30  d1f6              BNE      |L1.3360|
                  |L1.3378|
;;;1029         }
;;;1030       }
;;;1031       LISTBOX_InvalidateItem(hObj, LISTBOX_ALL_ITEMS);
000d32  f04f31ff          MOV      r1,#0xffffffff
000d36  4630              MOV      r0,r6
000d38  f7fffffe          BL       LISTBOX_InvalidateItem
;;;1032       WM_UNLOCK();
000d3c  f7fffffe          BL       GUI_Unlock
;;;1033     }
000d40  bf00              NOP      
                  |L1.3394|
;;;1034   }
000d42  e8bd81f0          POP      {r4-r8,pc}
;;;1035   
                          ENDP

                  LISTBOX_CreateEx PROC
;;;914    */
;;;915    LISTBOX_Handle LISTBOX_CreateEx(int x0, int y0, int xsize, int ysize, WM_HWIN hParent,
000d46  e92d4fff          PUSH     {r0-r11,lr}
;;;916                                    int WinFlags, int ExFlags, int Id, const GUI_ConstString* ppText)
;;;917    {
000d4a  b085              SUB      sp,sp,#0x14
000d4c  4607              MOV      r7,r0
000d4e  4688              MOV      r8,r1
000d50  4691              MOV      r9,r2
000d52  e9ddab13          LDRD     r10,r11,[sp,#0x4c]
000d56  9c16              LDR      r4,[sp,#0x58]
;;;918      LISTBOX_Handle hObj;
;;;919      GUI_USE_PARA(ExFlags);
000d58  bf00              NOP      
;;;920      hObj = WM_CreateWindowAsChild(x0, y0, xsize, ysize, hParent, WinFlags, _LISTBOX_Callback,
000d5a  2358              MOVS     r3,#0x58
000d5c  4a16              LDR      r2,|L1.3512|
000d5e  fa1ff18a          UXTH     r1,r10
000d62  9812              LDR      r0,[sp,#0x48]
000d64  e88d000f          STM      sp,{r0-r3}
000d68  464a              MOV      r2,r9
000d6a  4641              MOV      r1,r8
000d6c  4638              MOV      r0,r7
000d6e  9b08              LDR      r3,[sp,#0x20]
000d70  f7fffffe          BL       WM_CreateWindowAsChild
000d74  4605              MOV      r5,r0
;;;921                                    sizeof(LISTBOX_Obj) - sizeof(WM_Obj));
;;;922      if (hObj) {
000d76  b1dd              CBZ      r5,|L1.3504|
;;;923        LISTBOX_Obj* pObj;
;;;924        WM_LOCK();
000d78  f7fffffe          BL       GUI_Lock
;;;925        pObj = LISTBOX_H2P(hObj);
000d7c  4628              MOV      r0,r5
000d7e  f7fffffe          BL       GUI_ALLOC_h2p
000d82  4606              MOV      r6,r0
;;;926         /* Init sub-classes */
;;;927        GUI_ARRAY_CREATE(&pObj->ItemArray);
;;;928       /* init widget specific variables */
;;;929        WIDGET__Init(&pObj->Widget, Id, WIDGET_STATE_FOCUSSABLE);
000d84  2210              MOVS     r2,#0x10
000d86  4630              MOV      r0,r6
000d88  9915              LDR      r1,[sp,#0x54]
000d8a  f7fffffe          BL       WIDGET__Init
;;;930        pObj->Props = LISTBOX_DefaultProps;
000d8e  2228              MOVS     r2,#0x28
000d90  490a              LDR      r1,|L1.3516|
000d92  f1060048          ADD      r0,r6,#0x48
000d96  f7fffffe          BL       __aeabi_memcpy4
;;;931        if (ppText) {
000d9a  b11c              CBZ      r4,|L1.3492|
;;;932          /* init member variables */
;;;933          /* Set non-zero attributes */
;;;934          LISTBOX_SetText(hObj, ppText);
000d9c  4621              MOV      r1,r4
000d9e  4628              MOV      r0,r5
000da0  f7fffffe          BL       LISTBOX_SetText
                  |L1.3492|
;;;935        }
;;;936        INIT_ID(pObj);
;;;937        LISTBOX_UpdateScrollers(hObj);
000da4  4628              MOV      r0,r5
000da6  f7fffffe          BL       LISTBOX_UpdateScrollers
;;;938        WM_UNLOCK();
000daa  f7fffffe          BL       GUI_Unlock
;;;939      }
000dae  bf00              NOP      
                  |L1.3504|
;;;940      return hObj;
000db0  4628              MOV      r0,r5
;;;941    }
000db2  b009              ADD      sp,sp,#0x24
000db4  e8bd8ff0          POP      {r4-r11,pc}
;;;942    
                          ENDP

                  |L1.3512|
                          DCD      _LISTBOX_Callback
                  |L1.3516|
                          DCD      LISTBOX_DefaultProps

                          AREA ||.data||, DATA, ALIGN=2

                  LISTBOX_DefaultProps
                          DCD      GUI_Font13_1
000004  000a              DCW      0x000a
000006  0000              DCB      0x00,0x00
                          DCD      0x00ffffff
                          DCD      0x00808080
                          DCD      0x00ff0000
                          DCD      0x00c0c0c0
                          DCD      0x00000000
                          DCD      0x00ffffff
                          DCD      0x00ffffff
                          DCD      0x00808080
