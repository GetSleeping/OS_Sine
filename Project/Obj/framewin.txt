; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [--debug -c --asm --interleave -o.\Obj\framewin.o --depend=.\Obj\framewin.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\Libraries\CMSIS\CM3\CoreSupport -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x\startup\arm -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\User -I..\BaseDrive -I..\Ucosii -I..\Ucosii\Port -I..\Ucosii\Src -I..\Ucosii\Include -I..\Ucgui -I..\Ucgui\Config -I..\Ucgui\GUI_X -I..\Ucgui\GUI -I..\Ucgui\GUI\ConvertColor -I..\Ucgui\GUI\ConvertMono -I..\Ucgui\GUI\Core -I..\Ucgui\GUI\Core -I..\Ucgui\GUI\LCDDriver -I..\Ucgui\GUI\MultiLayer -I..\Ucgui\GUI\Widget -I..\Ucgui\GUI\WM -I..\ExternalDrive\Lcd -I..\ExternalDrive\Touch -I..\Panel -ID:\Keil\ARM\INC -ID:\Keil\ARM\INC\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=.\Obj\framewin.crf ..\Ucgui\GUI\Widget\FRAMEWIN.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  _SetActive PROC
;;;123    */
;;;124    static void _SetActive(FRAMEWIN_Handle hObj, int State) {
000000  b570              PUSH     {r4-r6,lr}
000002  4606              MOV      r6,r0
000004  460d              MOV      r5,r1
;;;125      FRAMEWIN_Obj* pObj;
;;;126      pObj = FRAMEWIN_H2P(hObj);
000006  4630              MOV      r0,r6
000008  f7fffffe          BL       GUI_ALLOC_h2p
00000c  4604              MOV      r4,r0
;;;127      if        (State && !(pObj->Flags & FRAMEWIN_SF_ACTIVE)) {
00000e  b175              CBZ      r5,|L1.46|
000010  f8b4005c          LDRH     r0,[r4,#0x5c]
000014  f0100f08          TST      r0,#8
000018  d109              BNE      |L1.46|
;;;128        pObj->Flags |= FRAMEWIN_CF_ACTIVE;
00001a  f8b4005c          LDRH     r0,[r4,#0x5c]
00001e  f0400008          ORR      r0,r0,#8
000022  f8a4005c          STRH     r0,[r4,#0x5c]
;;;129        FRAMEWIN_Invalidate(hObj);
000026  4630              MOV      r0,r6
000028  f7fffffe          BL       WM_InvalidateWindow
00002c  e00e              B        |L1.76|
                  |L1.46|
;;;130      } else if (!State && (pObj->Flags & FRAMEWIN_SF_ACTIVE)) {
00002e  b96d              CBNZ     r5,|L1.76|
000030  f8b4005c          LDRH     r0,[r4,#0x5c]
000034  f0100f08          TST      r0,#8
000038  d008              BEQ      |L1.76|
;;;131        pObj->Flags &= ~FRAMEWIN_CF_ACTIVE;
00003a  f8b4005c          LDRH     r0,[r4,#0x5c]
00003e  f0200008          BIC      r0,r0,#8
000042  f8a4005c          STRH     r0,[r4,#0x5c]
;;;132        FRAMEWIN_Invalidate(hObj);
000046  4630              MOV      r0,r6
000048  f7fffffe          BL       WM_InvalidateWindow
                  |L1.76|
;;;133      }
;;;134    }
00004c  bd70              POP      {r4-r6,pc}
;;;135    
                          ENDP

                  _OnTouch PROC
;;;139    */
;;;140    static void _OnTouch(FRAMEWIN_Handle hWin, FRAMEWIN_Obj* pObj, WM_MESSAGE* pMsg) {
00004e  e92d41f0          PUSH     {r4-r8,lr}
000052  4607              MOV      r7,r0
000054  460c              MOV      r4,r1
000056  4615              MOV      r5,r2
;;;141      const GUI_PID_STATE* pState;
;;;142      pState = (const GUI_PID_STATE*)pMsg->Data.p;
000058  68ae              LDR      r6,[r5,#8]
;;;143      if (pMsg->Data.p) {  /* Something happened in our area (pressed or released) */
00005a  68a8              LDR      r0,[r5,#8]
00005c  b1c0              CBZ      r0,|L1.144|
;;;144        if (pState->Pressed) {
00005e  7a30              LDRB     r0,[r6,#8]
000060  b1b0              CBZ      r0,|L1.144|
;;;145          if (!(pObj->Flags & FRAMEWIN_SF_ACTIVE)) {
000062  f8b4005c          LDRH     r0,[r4,#0x5c]
000066  f0100f08          TST      r0,#8
00006a  d102              BNE      |L1.114|
;;;146            WM_SetFocus(hWin);
00006c  4638              MOV      r0,r7
00006e  f7fffffe          BL       WM_SetFocus
                  |L1.114|
;;;147          }
;;;148          WM_BringToTop(hWin);
000072  4638              MOV      r0,r7
000074  f7fffffe          BL       WM_BringToTop
;;;149          if (pObj->Flags & FRAMEWIN_SF_MOVEABLE) {
000078  f8b4005c          LDRH     r0,[r4,#0x5c]
00007c  f0100f10          TST      r0,#0x10
000080  d006              BEQ      |L1.144|
;;;150            WM_SetCaptureMove(hWin, pState, FRAMEWIN__MinVisibility);
000082  48fa              LDR      r0,|L1.1132|
000084  f9b02000          LDRSH    r2,[r0,#0]  ; FRAMEWIN__MinVisibility
000088  4631              MOV      r1,r6
00008a  4638              MOV      r0,r7
00008c  f7fffffe          BL       WM_SetCaptureMove
                  |L1.144|
;;;151          }
;;;152        }
;;;153      }
;;;154    }
000090  e8bd81f0          POP      {r4-r8,pc}
;;;155    
                          ENDP

                  FRAMEWIN__CalcTitleHeight PROC
;;;409    */
;;;410    int FRAMEWIN__CalcTitleHeight(FRAMEWIN_Obj* pObj) {
000094  b570              PUSH     {r4-r6,lr}
000096  4604              MOV      r4,r0
;;;411      int r = 0;
000098  2500              MOVS     r5,#0
;;;412      if (pObj->Widget.State & FRAMEWIN_SF_TITLEVIS) {
00009a  8ce0              LDRH     r0,[r4,#0x26]
00009c  f0100f20          TST      r0,#0x20
0000a0  d006              BEQ      |L1.176|
;;;413        r = pObj->Props.TitleHeight;
0000a2  f9b45040          LDRSH    r5,[r4,#0x40]
;;;414        if (r == 0) {
0000a6  b91d              CBNZ     r5,|L1.176|
;;;415          r = 2 + GUI_GetYSizeOfFont(pObj->Props.pFont);
0000a8  6aa0              LDR      r0,[r4,#0x28]
0000aa  f7fffffe          BL       GUI_GetYSizeOfFont
0000ae  1c85              ADDS     r5,r0,#2
                  |L1.176|
;;;416        }
;;;417      }
;;;418      return r;
0000b0  4628              MOV      r0,r5
;;;419    }
0000b2  bd70              POP      {r4-r6,pc}
;;;420    
                          ENDP

                  FRAMEWIN__CalcPositions PROC
;;;424    */
;;;425    void FRAMEWIN__CalcPositions(FRAMEWIN_Obj* pObj, POSITIONS* pPos) {
0000b4  e92d4ff0          PUSH     {r4-r11,lr}
0000b8  b085              SUB      sp,sp,#0x14
0000ba  4605              MOV      r5,r0
0000bc  460c              MOV      r4,r1
;;;426      WM_HWIN hChild;
;;;427      WM_Obj* pChild;
;;;428      int TitleHeight;
;;;429      int MenuHeight = 0;
0000be  2000              MOVS     r0,#0
0000c0  9004              STR      r0,[sp,#0x10]
;;;430      int IBorderSize = 0;
0000c2  9003              STR      r0,[sp,#0xc]
;;;431      int BorderSize;
;;;432      int xsize, ysize;
;;;433      int x0, x1, y0;
;;;434      BorderSize = pObj->Props.BorderSize;
0000c4  f9b56042          LDRSH    r6,[r5,#0x42]
;;;435      xsize = WM__GetWindowSizeX(&pObj->Widget.Win);
0000c8  4628              MOV      r0,r5
0000ca  f7fffffe          BL       WM__GetWindowSizeX
0000ce  9002              STR      r0,[sp,#8]
;;;436      ysize = WM__GetWindowSizeY(&pObj->Widget.Win);
0000d0  4628              MOV      r0,r5
0000d2  f7fffffe          BL       WM__GetWindowSizeY
0000d6  9001              STR      r0,[sp,#4]
;;;437      if (pObj->Widget.State & FRAMEWIN_SF_TITLEVIS) {
0000d8  8ce8              LDRH     r0,[r5,#0x26]
0000da  f0100f20          TST      r0,#0x20
0000de  d002              BEQ      |L1.230|
;;;438        IBorderSize = pObj->Props.IBorderSize;
0000e0  f9b50044          LDRSH    r0,[r5,#0x44]
0000e4  9003              STR      r0,[sp,#0xc]
                  |L1.230|
;;;439      }
;;;440      TitleHeight = FRAMEWIN__CalcTitleHeight(pObj);
0000e6  4628              MOV      r0,r5
0000e8  f7fffffe          BL       FRAMEWIN__CalcTitleHeight
0000ec  4680              MOV      r8,r0
;;;441      if (pObj->hMenu) {
0000ee  f8b5004e          LDRH     r0,[r5,#0x4e]
0000f2  b120              CBZ      r0,|L1.254|
;;;442        MenuHeight = WM_GetWindowSizeY(pObj->hMenu);
0000f4  f9b5004e          LDRSH    r0,[r5,#0x4e]
0000f8  f7fffffe          BL       WM_GetWindowSizeY
0000fc  9004              STR      r0,[sp,#0x10]
                  |L1.254|
;;;443      }
;;;444      pPos->TitleHeight = TitleHeight;
0000fe  fa0ff088          SXTH     r0,r8
000102  8020              STRH     r0,[r4,#0]
;;;445      pPos->MenuHeight  = MenuHeight;
000104  9804              LDR      r0,[sp,#0x10]
000106  b200              SXTH     r0,r0
000108  8060              STRH     r0,[r4,#2]
;;;446      /* Set object properties accordingly */
;;;447      pPos->rClient.x0  =         BorderSize;
00010a  b230              SXTH     r0,r6
00010c  80a0              STRH     r0,[r4,#4]
;;;448      pPos->rClient.x1  = xsize - BorderSize - 1;
00010e  9802              LDR      r0,[sp,#8]
000110  1b80              SUBS     r0,r0,r6
000112  1e40              SUBS     r0,r0,#1
000114  b201              SXTH     r1,r0
000116  8121              STRH     r1,[r4,#8]
;;;449      pPos->rClient.y0  =         BorderSize + IBorderSize + TitleHeight + MenuHeight;
000118  9803              LDR      r0,[sp,#0xc]
00011a  4430              ADD      r0,r0,r6
00011c  eb000108          ADD      r1,r0,r8
000120  9804              LDR      r0,[sp,#0x10]
000122  4408              ADD      r0,r0,r1
000124  b201              SXTH     r1,r0
000126  80e1              STRH     r1,[r4,#6]
;;;450      pPos->rClient.y1  = ysize - BorderSize - 1;
000128  9801              LDR      r0,[sp,#4]
00012a  1b80              SUBS     r0,r0,r6
00012c  1e40              SUBS     r0,r0,#1
00012e  b201              SXTH     r1,r0
000130  8161              STRH     r1,[r4,#0xa]
;;;451      /* Calculate title rect */
;;;452      pPos->rTitleText.x0 =         BorderSize;
000132  b230              SXTH     r0,r6
000134  81a0              STRH     r0,[r4,#0xc]
;;;453      pPos->rTitleText.x1 = xsize - BorderSize - 1;
000136  9802              LDR      r0,[sp,#8]
000138  1b80              SUBS     r0,r0,r6
00013a  1e40              SUBS     r0,r0,#1
00013c  b201              SXTH     r1,r0
00013e  8221              STRH     r1,[r4,#0x10]
;;;454      pPos->rTitleText.y0 =         BorderSize;
000140  b231              SXTH     r1,r6
000142  81e1              STRH     r1,[r4,#0xe]
;;;455      pPos->rTitleText.y1 =         BorderSize + TitleHeight - 1;
000144  eb060008          ADD      r0,r6,r8
000148  1e40              SUBS     r0,r0,#1
00014a  b201              SXTH     r1,r0
00014c  8261              STRH     r1,[r4,#0x12]
;;;456      /* Iterate over all children */
;;;457      for (hChild = pObj->Widget.Win.hFirstChild; hChild; hChild = pChild->hNext) {
00014e  f9b59018          LDRSH    r9,[r5,#0x18]
000152  e02f              B        |L1.436|
                  |L1.340|
;;;458        pChild = WM_H2P(hChild);
000154  4648              MOV      r0,r9
000156  f7fffffe          BL       GUI_ALLOC_h2p
00015a  4607              MOV      r7,r0
;;;459        x0 = pChild->Rect.x0 - pObj->Widget.Win.Rect.x0;
00015c  f9b70000          LDRSH    r0,[r7,#0]
000160  f9b51000          LDRSH    r1,[r5,#0]
000164  eba00a01          SUB      r10,r0,r1
;;;460        x1 = pChild->Rect.x1 - pObj->Widget.Win.Rect.x0;
000168  f9b70004          LDRSH    r0,[r7,#4]
00016c  f9b51000          LDRSH    r1,[r5,#0]
000170  eba00b01          SUB      r11,r0,r1
;;;461        y0 = pChild->Rect.y0 - pObj->Widget.Win.Rect.y0;
000174  f9b70002          LDRSH    r0,[r7,#2]
000178  f9b51002          LDRSH    r1,[r5,#2]
00017c  1a40              SUBS     r0,r0,r1
00017e  9000              STR      r0,[sp,#0]
;;;462        if (y0 == BorderSize) {
000180  9800              LDR      r0,[sp,#0]
000182  42b0              CMP      r0,r6
000184  d114              BNE      |L1.432|
;;;463          if (pChild->Status & WM_SF_ANCHOR_RIGHT) {
000186  8bb8              LDRH     r0,[r7,#0x1c]
000188  f0100f80          TST      r0,#0x80
00018c  d008              BEQ      |L1.416|
;;;464            if (x0 <= pPos->rTitleText.x1) {
00018e  f9b40010          LDRSH    r0,[r4,#0x10]
000192  4550              CMP      r0,r10
000194  db0c              BLT      |L1.432|
;;;465              pPos->rTitleText.x1 = x0 - 1;
000196  f1aa0001          SUB      r0,r10,#1
00019a  b201              SXTH     r1,r0
00019c  8221              STRH     r1,[r4,#0x10]
00019e  e007              B        |L1.432|
                  |L1.416|
;;;466            }
;;;467          } else {
;;;468            if (x1 >= pPos->rTitleText.x0) {
0001a0  f9b4000c          LDRSH    r0,[r4,#0xc]
0001a4  4558              CMP      r0,r11
0001a6  dc03              BGT      |L1.432|
;;;469              pPos->rTitleText.x0 = x1 + 1;
0001a8  f10b0001          ADD      r0,r11,#1
0001ac  b200              SXTH     r0,r0
0001ae  81a0              STRH     r0,[r4,#0xc]
                  |L1.432|
0001b0  f9b7901a          LDRSH    r9,[r7,#0x1a]         ;457
                  |L1.436|
0001b4  f1b90f00          CMP      r9,#0                 ;457
0001b8  d1cc              BNE      |L1.340|
;;;470            }
;;;471          }
;;;472        }
;;;473      }
;;;474    }
0001ba  b005              ADD      sp,sp,#0x14
0001bc  e8bd8ff0          POP      {r4-r11,pc}
;;;475    
                          ENDP

                  _Paint PROC
;;;160    */
;;;161    static void _Paint(FRAMEWIN_Obj* pObj) {
0001c0  e92d4ff0          PUSH     {r4-r11,lr}
0001c4  b089              SUB      sp,sp,#0x24
0001c6  4604              MOV      r4,r0
;;;162      WM_HWIN hWin = WM_GetActiveWindow();
0001c8  f7fffffe          BL       WM_GetActiveWindow
0001cc  4683              MOV      r11,r0
;;;163      const char* pText = NULL;
0001ce  f04f0a00          MOV      r10,#0
;;;164      int xsize = WM_GetWindowSizeX(hWin);
0001d2  4658              MOV      r0,r11
0001d4  f7fffffe          BL       WM_GetWindowSizeX
0001d8  4605              MOV      r5,r0
;;;165      int ysize = WM_GetWindowSizeY(hWin);
0001da  4658              MOV      r0,r11
0001dc  f7fffffe          BL       WM_GetWindowSizeY
0001e0  4606              MOV      r6,r0
;;;166      int BorderSize = pObj->Props.BorderSize;
0001e2  f9b48042          LDRSH    r8,[r4,#0x42]
;;;167      int y0, Index;
;;;168      POSITIONS Pos;
;;;169      GUI_RECT r, rText;
;;;170    
;;;171      /* Perform computations */
;;;172      FRAMEWIN__CalcPositions(pObj, &Pos);
0001e6  a904              ADD      r1,sp,#0x10
0001e8  4620              MOV      r0,r4
0001ea  f7fffffe          BL       FRAMEWIN__CalcPositions
;;;173      Index = (pObj->Flags & FRAMEWIN_SF_ACTIVE) ? 1 : 0;
0001ee  f8b4005c          LDRH     r0,[r4,#0x5c]
0001f2  f3c009c0          UBFX     r9,r0,#3,#1
;;;174    
;;;175      if (pObj->hText) {
0001f6  f8b40050          LDRH     r0,[r4,#0x50]
0001fa  b120              CBZ      r0,|L1.518|
;;;176        pText = (const char*) GUI_ALLOC_h2p(pObj->hText);
0001fc  f9b40050          LDRSH    r0,[r4,#0x50]
000200  f7fffffe          BL       GUI_ALLOC_h2p
000204  4682              MOV      r10,r0
                  |L1.518|
;;;177      }
;;;178      r.x0 = Pos.rClient.x0;
000206  f8bd0014          LDRH     r0,[sp,#0x14]
00020a  f8ad0008          STRH     r0,[sp,#8]
;;;179      r.x1 = Pos.rClient.x1;
00020e  f8bd0018          LDRH     r0,[sp,#0x18]
000212  f8ad000c          STRH     r0,[sp,#0xc]
;;;180      r.y0 = Pos.rTitleText.y0;
000216  f8bd001e          LDRH     r0,[sp,#0x1e]
00021a  f8ad000a          STRH     r0,[sp,#0xa]
;;;181      r.y1 = Pos.rTitleText.y1;
00021e  f8bd0022          LDRH     r0,[sp,#0x22]
000222  f8ad000e          STRH     r0,[sp,#0xe]
;;;182      Pos.rTitleText.y0++;
000226  f8bd001e          LDRH     r0,[sp,#0x1e]
00022a  1c40              ADDS     r0,r0,#1
00022c  b201              SXTH     r1,r0
00022e  f8ad101e          STRH     r1,[sp,#0x1e]
;;;183      Pos.rTitleText.x0++;
000232  f8bd001c          LDRH     r0,[sp,#0x1c]
000236  1c40              ADDS     r0,r0,#1
000238  b200              SXTH     r0,r0
00023a  f8ad001c          STRH     r0,[sp,#0x1c]
;;;184      Pos.rTitleText.x1--;
00023e  f8bd0020          LDRH     r0,[sp,#0x20]
000242  1e40              SUBS     r0,r0,#1
000244  b201              SXTH     r1,r0
000246  f8ad1020          STRH     r1,[sp,#0x20]
;;;185      GUI_SetFont(pObj->Props.pFont);
00024a  6aa0              LDR      r0,[r4,#0x28]
00024c  f7fffffe          BL       GUI_SetFont
;;;186      GUI__CalcTextRect(pText, &Pos.rTitleText, &rText, pObj->TextAlign);
000250  f9b4305a          LDRSH    r3,[r4,#0x5a]
000254  466a              MOV      r2,sp
000256  a907              ADD      r1,sp,#0x1c
000258  4650              MOV      r0,r10
00025a  f7fffffe          BL       GUI__CalcTextRect
;;;187      y0 = Pos.TitleHeight + BorderSize;
00025e  f9bd0010          LDRSH    r0,[sp,#0x10]
000262  eb000708          ADD      r7,r0,r8
;;;188    
;;;189      /* Perform drawing operations */
;;;190      WM_ITERATE_START(NULL) {
000266  2000              MOVS     r0,#0
000268  f7fffffe          BL       WM__InitIVRSearch
00026c  b3f0              CBZ      r0,|L1.748|
00026e  bf00              NOP      
                  |L1.624|
;;;191        /* Draw Title */
;;;192        LCD_SetBkColor(pObj->Props.aBarColor[Index]);
000270  f104012c          ADD      r1,r4,#0x2c
000274  f8510029          LDR      r0,[r1,r9,LSL #2]
000278  f7fffffe          BL       LCD_SetBkColor
;;;193        LCD_SetColor(pObj->Props.aTextColor[Index]);
00027c  f1040134          ADD      r1,r4,#0x34
000280  f8510029          LDR      r0,[r1,r9,LSL #2]
000284  f7fffffe          BL       LCD_SetColor
;;;194        WIDGET__FillStringInRect(pText, &r, &Pos.rTitleText, &rText);
000288  466b              MOV      r3,sp
00028a  aa07              ADD      r2,sp,#0x1c
00028c  a902              ADD      r1,sp,#8
00028e  4650              MOV      r0,r10
000290  f7fffffe          BL       WIDGET__FillStringInRect
;;;195        /* Draw Frame */
;;;196        LCD_SetColor(FRAMEWIN_FRAMECOLOR_DEFAULT);
000294  4876              LDR      r0,|L1.1136|
000296  f7fffffe          BL       LCD_SetColor
;;;197        GUI_FillRect(0, 0, xsize-1, BorderSize-1);
00029a  f1a80301          SUB      r3,r8,#1
00029e  1e6a              SUBS     r2,r5,#1
0002a0  2100              MOVS     r1,#0
0002a2  4608              MOV      r0,r1
0002a4  f7fffffe          BL       GUI_FillRect
;;;198    	  GUI_FillRect(0, 0, Pos.rClient.x0-1, ysize-1);
0002a8  1e73              SUBS     r3,r6,#1
0002aa  f9bd0014          LDRSH    r0,[sp,#0x14]
0002ae  1e42              SUBS     r2,r0,#1
0002b0  2100              MOVS     r1,#0
0002b2  4608              MOV      r0,r1
0002b4  f7fffffe          BL       GUI_FillRect
;;;199    	  GUI_FillRect(Pos.rClient.x1+1, 0, xsize-1, ysize-1);
0002b8  1e73              SUBS     r3,r6,#1
0002ba  1e6a              SUBS     r2,r5,#1
0002bc  f9bd1018          LDRSH    r1,[sp,#0x18]
0002c0  1c48              ADDS     r0,r1,#1
0002c2  2100              MOVS     r1,#0
0002c4  f7fffffe          BL       GUI_FillRect
;;;200        GUI_FillRect(0, Pos.rClient.y1+1, xsize-1, ysize-1);
0002c8  1e73              SUBS     r3,r6,#1
0002ca  1e6a              SUBS     r2,r5,#1
0002cc  f9bd001a          LDRSH    r0,[sp,#0x1a]
0002d0  1c41              ADDS     r1,r0,#1
0002d2  2000              MOVS     r0,#0
0002d4  f7fffffe          BL       GUI_FillRect
;;;201        GUI_FillRect(0, y0, xsize - 1, y0 + pObj->Props.IBorderSize - 1);
0002d8  f9b40044          LDRSH    r0,[r4,#0x44]
0002dc  4438              ADD      r0,r0,r7
0002de  1e43              SUBS     r3,r0,#1
0002e0  1e6a              SUBS     r2,r5,#1
0002e2  4639              MOV      r1,r7
0002e4  2000              MOVS     r0,#0
0002e6  f7fffffe          BL       GUI_FillRect
;;;202        /* Draw the 3D effect (if configured) */
;;;203        if (pObj->Props.BorderSize >= 2) {
0002ea  e000              B        |L1.750|
                  |L1.748|
0002ec  e009              B        |L1.770|
                  |L1.750|
0002ee  f9b40042          LDRSH    r0,[r4,#0x42]
0002f2  2802              CMP      r0,#2
0002f4  db01              BLT      |L1.762|
;;;204          WIDGET_EFFECT_3D_DrawUp();  /* pObj->Widget.pEffect->pfDrawUp(); */
0002f6  f7fffffe          BL       WIDGET_EFFECT_3D_DrawUp
                  |L1.762|
;;;205        }
;;;206    
;;;207      } WM_ITERATE_END();
0002fa  f7fffffe          BL       WM__GetNextIVR
0002fe  2800              CMP      r0,#0
000300  d1b6              BNE      |L1.624|
                  |L1.770|
;;;208    
;;;209    
;;;210    }
000302  b009              ADD      sp,sp,#0x24
000304  e8bd8ff0          POP      {r4-r11,pc}
;;;211    
                          ENDP

                  _OnChildHasFocus PROC
;;;225    */
;;;226    static void _OnChildHasFocus(FRAMEWIN_Handle hWin, FRAMEWIN_Obj* pObj, WM_MESSAGE *pMsg) {
000308  e92d41f0          PUSH     {r4-r8,lr}
00030c  4606              MOV      r6,r0
00030e  460f              MOV      r7,r1
000310  4614              MOV      r4,r2
;;;227      if (pMsg->Data.p) {
000312  68a0              LDR      r0,[r4,#8]
000314  b1e0              CBZ      r0,|L1.848|
;;;228        const WM_NOTIFY_CHILD_HAS_FOCUS_INFO * pInfo = (const WM_NOTIFY_CHILD_HAS_FOCUS_INFO *)pMsg->Data.p;
000316  68a5              LDR      r5,[r4,#8]
;;;229        int IsDesc = WM__IsAncestorOrSelf(pInfo->hNew, hWin);
000318  f9b50002          LDRSH    r0,[r5,#2]
00031c  4631              MOV      r1,r6
00031e  f7fffffe          BL       WM__IsAncestorOrSelf
000322  4680              MOV      r8,r0
;;;230        if (IsDesc) {                         /* A child has received the focus, Framewindow needs to be activated */
000324  f1b80f00          CMP      r8,#0
000328  d004              BEQ      |L1.820|
;;;231          _SetActive(hWin, 1);
00032a  2101              MOVS     r1,#1
00032c  4630              MOV      r0,r6
00032e  f7fffffe          BL       _SetActive
000332  e00c              B        |L1.846|
                  |L1.820|
;;;232        } else {                  /* A child has lost the focus, we need to deactivate */
;;;233          _SetActive(hWin, 0);
000334  2100              MOVS     r1,#0
000336  4630              MOV      r0,r6
000338  f7fffffe          BL       _SetActive
;;;234          /* Remember the child which had the focus so we can reactive this child */
;;;235          if (WM__IsAncestor(pInfo->hOld, hWin)) {
00033c  f9b50000          LDRSH    r0,[r5,#0]
000340  4631              MOV      r1,r6
000342  f7fffffe          BL       WM__IsAncestor
000346  b110              CBZ      r0,|L1.846|
;;;236            pObj->hFocussedChild = pInfo->hOld;
000348  8828              LDRH     r0,[r5,#0]
00034a  f8a7005e          STRH     r0,[r7,#0x5e]
                  |L1.846|
;;;237          }
;;;238        }
;;;239      }
00034e  bf00              NOP      
                  |L1.848|
;;;240    }
000350  e8bd81f0          POP      {r4-r8,pc}
;;;241    
                          ENDP

                  FRAMEWIN_SetActive PROC
;;;610    */
;;;611    void FRAMEWIN_SetActive(FRAMEWIN_Handle hObj, int State) {
000354  b570              PUSH     {r4-r6,lr}
000356  4604              MOV      r4,r0
000358  460d              MOV      r5,r1
;;;612      if (hObj) {
00035a  b13c              CBZ      r4,|L1.876|
;;;613        WM_LOCK();
00035c  f7fffffe          BL       GUI_Lock
;;;614        _SetActive(hObj, State);
000360  4629              MOV      r1,r5
000362  4620              MOV      r0,r4
000364  f7fffffe          BL       _SetActive
;;;615        WM_UNLOCK();
000368  f7fffffe          BL       GUI_Unlock
                  |L1.876|
;;;616      }
;;;617    }
00036c  bd70              POP      {r4-r6,pc}
;;;618    
                          ENDP

                  _FRAMEWIN_Callback PROC
;;;245    */
;;;246    static void _FRAMEWIN_Callback (WM_MESSAGE *pMsg) {
00036e  e92d47f0          PUSH     {r4-r10,lr}
000372  b088              SUB      sp,sp,#0x20
000374  4604              MOV      r4,r0
;;;247      FRAMEWIN_Handle hWin = (FRAMEWIN_Handle)(pMsg->hWin);
000376  f9b47004          LDRSH    r7,[r4,#4]
;;;248      FRAMEWIN_Obj* pObj = FRAMEWIN_H2P(hWin);
00037a  4638              MOV      r0,r7
00037c  f7fffffe          BL       GUI_ALLOC_h2p
000380  4605              MOV      r5,r0
;;;249      GUI_RECT* pRect = (GUI_RECT*)(pMsg->Data.p);
000382  f8d49008          LDR      r9,[r4,#8]
;;;250      POSITIONS Pos;
;;;251      GUI_HOOK* pHook;
;;;252      /* Call hook functions */
;;;253      for (pHook = pObj->pFirstHook; pHook; pHook = pHook->pNext) {
000386  6e6e              LDR      r6,[r5,#0x64]
000388  e00a              B        |L1.928|
                  |L1.906|
;;;254        int r;
;;;255        r = (*pHook->pHookFunc)(pMsg);
00038a  4620              MOV      r0,r4
00038c  6871              LDR      r1,[r6,#4]
00038e  4788              BLX      r1
000390  4680              MOV      r8,r0
;;;256        if (r) {
000392  f1b80f00          CMP      r8,#0
000396  d002              BEQ      |L1.926|
                  |L1.920|
;;;257          return;   /* Message handled */
;;;258        }
;;;259      }
;;;260      switch (pMsg->MsgId) {
;;;261      case WM_HANDLE_DIALOG_STATUS:
;;;262        if (pMsg->Data.p) {                           /* set pointer to Dialog status */
;;;263          pObj->pDialogStatus = (WM_DIALOG_STATUS*)pMsg->Data.p;
;;;264        } else {                                      /* return pointer to Dialog status */
;;;265          pMsg->Data.p = pObj->pDialogStatus;      
;;;266        }
;;;267        return;
;;;268      case WM_PAINT:
;;;269        _Paint(pObj);
;;;270        break;
;;;271      case WM_TOUCH:
;;;272        _OnTouch(hWin, pObj, pMsg);
;;;273        return;                       /* Return here ... Message handled */
;;;274      case WM_GET_INSIDE_RECT:
;;;275        FRAMEWIN__CalcPositions(pObj, &Pos);
;;;276    		*pRect = Pos.rClient;
;;;277        return;                       /* Return here ... Message handled */
;;;278      case WM_GET_CLIENT_WINDOW:      /* return handle to client window. For most windows, there is no seperate client window, so it is the same handle */
;;;279        pMsg->Data.v = (int)pObj->hClient;
;;;280        return;                       /* Return here ... Message handled */
;;;281      case WM_NOTIFY_PARENT:
;;;282        if (pMsg->Data.v == WM_NOTIFICATION_RELEASED) {
;;;283          WM_MESSAGE Msg;
;;;284          Msg.hWinSrc = hWin;
;;;285          Msg.Data    = pMsg->Data;
;;;286          Msg.MsgId   = WM_NOTIFY_PARENT_REFLECTION;
;;;287          WM_SendMessage(pMsg->hWinSrc, &Msg);
;;;288        }
;;;289        return;
;;;290      case WM_SET_FOCUS:                 /* We have received or lost focus */
;;;291        if (pMsg->Data.v == 1) {
;;;292          if (WM_IsWindow(pObj->hFocussedChild)) {
;;;293            WM_SetFocus(pObj->hFocussedChild);
;;;294          } else {
;;;295            pObj->hFocussedChild = WM_SetFocusOnNextChild(pObj->hClient);
;;;296          }
;;;297          FRAMEWIN_SetActive(hWin, 1);
;;;298          pMsg->Data.v = 0;              /* Focus could be accepted */
;;;299        } else {
;;;300          FRAMEWIN_SetActive(hWin, 0);
;;;301        }
;;;302        return;
;;;303      case WM_TOUCH_CHILD:
;;;304        /* If a child of this framewindow has been touched and the frame window was not active,
;;;305           the framewindow will receive the focus.
;;;306         */
;;;307        if (!(pObj->Flags & FRAMEWIN_SF_ACTIVE)) {
;;;308          const WM_MESSAGE * pMsgOrg;
;;;309          const GUI_PID_STATE * pState;
;;;310          pMsgOrg = (const WM_MESSAGE*)pMsg->Data.p;      /* The original touch message */
;;;311          pState = (const GUI_PID_STATE*)pMsgOrg->Data.p;
;;;312          if (pState) {          /* Message may not have a valid pointer (moved out) ! */
;;;313            if (pState->Pressed) {
;;;314              WM_SetFocus(hWin);
;;;315            }
;;;316          }
;;;317        }
;;;318        break;
;;;319      case WM_NOTIFY_CHILD_HAS_FOCUS:
;;;320        _OnChildHasFocus(hWin, pObj, pMsg);
;;;321        break;
;;;322      case WM_DELETE:
;;;323        GUI_DEBUG_LOG("FRAMEWIN: _FRAMEWIN_Callback(WM_DELETE)\n");
;;;324        GUI_ALLOC_FreePtr(&pObj->hText);
;;;325        break;
;;;326      }
;;;327      /* Let widget handle the standard messages */
;;;328      if (WIDGET_HandleActive(hWin, pMsg) == 0) {
;;;329        return;
;;;330      }
;;;331      WM_DefaultProc(pMsg);
;;;332    }
000398  b008              ADD      sp,sp,#0x20
00039a  e8bd87f0          POP      {r4-r10,pc}
                  |L1.926|
00039e  6836              LDR      r6,[r6,#0]            ;253
                  |L1.928|
0003a0  2e00              CMP      r6,#0                 ;253
0003a2  d1f2              BNE      |L1.906|
0003a4  6820              LDR      r0,[r4,#0]            ;260
0003a6  2817              CMP      r0,#0x17              ;260
0003a8  d032              BEQ      |L1.1040|
0003aa  dc0c              BGT      |L1.966|
0003ac  280d              CMP      r0,#0xd               ;260
0003ae  d066              BEQ      |L1.1150|
0003b0  dc04              BGT      |L1.956|
0003b2  280b              CMP      r0,#0xb               ;260
0003b4  d07f              BEQ      |L1.1206|
0003b6  280c              CMP      r0,#0xc               ;260
0003b8  d118              BNE      |L1.1004|
0003ba  e018              B        |L1.1006|
                  |L1.956|
0003bc  280f              CMP      r0,#0xf               ;260
0003be  d012              BEQ      |L1.998|
0003c0  2814              CMP      r0,#0x14              ;260
0003c2  d17d              BNE      |L1.1216|
0003c4  e019              B        |L1.1018|
                  |L1.966|
0003c6  281f              CMP      r0,#0x1f              ;260
0003c8  d036              BEQ      |L1.1080|
0003ca  2821              CMP      r0,#0x21              ;260
0003cc  d06d              BEQ      |L1.1194|
0003ce  2826              CMP      r0,#0x26              ;260
0003d0  d022              BEQ      |L1.1048|
0003d2  282a              CMP      r0,#0x2a              ;260
0003d4  d174              BNE      |L1.1216|
0003d6  68a0              LDR      r0,[r4,#8]            ;262
0003d8  b110              CBZ      r0,|L1.992|
0003da  68a0              LDR      r0,[r4,#8]            ;263
0003dc  6628              STR      r0,[r5,#0x60]         ;263
0003de  e001              B        |L1.996|
                  |L1.992|
0003e0  6e28              LDR      r0,[r5,#0x60]         ;265
0003e2  60a0              STR      r0,[r4,#8]            ;265
                  |L1.996|
0003e4  e7d8              B        |L1.920|
                  |L1.998|
0003e6  4628              MOV      r0,r5                 ;269
0003e8  f7fffffe          BL       _Paint
                  |L1.1004|
0003ec  e068              B        |L1.1216|
                  |L1.1006|
0003ee  4622              MOV      r2,r4                 ;272
0003f0  4629              MOV      r1,r5                 ;272
0003f2  4638              MOV      r0,r7                 ;272
0003f4  f7fffffe          BL       _OnTouch
0003f8  e7ce              B        |L1.920|
                  |L1.1018|
0003fa  a903              ADD      r1,sp,#0xc            ;275
0003fc  4628              MOV      r0,r5                 ;275
0003fe  f7fffffe          BL       FRAMEWIN__CalcPositions
000402  9804              LDR      r0,[sp,#0x10]         ;276
000404  f8c90000          STR      r0,[r9,#0]            ;276
000408  9805              LDR      r0,[sp,#0x14]         ;276
00040a  f8c90004          STR      r0,[r9,#4]            ;276
00040e  e7c3              B        |L1.920|
                  |L1.1040|
000410  f9b5004c          LDRSH    r0,[r5,#0x4c]         ;279
000414  60a0              STR      r0,[r4,#8]            ;279
000416  e7bf              B        |L1.920|
                  |L1.1048|
000418  68a0              LDR      r0,[r4,#8]            ;282
00041a  2802              CMP      r0,#2                 ;282
00041c  d10b              BNE      |L1.1078|
00041e  f8ad7006          STRH     r7,[sp,#6]            ;284
000422  68a0              LDR      r0,[r4,#8]            ;285
000424  9002              STR      r0,[sp,#8]            ;285
000426  2027              MOVS     r0,#0x27              ;286
000428  9000              STR      r0,[sp,#0]            ;286
00042a  f9b40006          LDRSH    r0,[r4,#6]            ;287
00042e  4669              MOV      r1,sp                 ;287
000430  f7fffffe          BL       WM_SendMessage
000434  bf00              NOP                            ;288
                  |L1.1078|
000436  e7af              B        |L1.920|
                  |L1.1080|
000438  68a0              LDR      r0,[r4,#8]            ;291
00043a  2801              CMP      r0,#1                 ;291
00043c  d11a              BNE      |L1.1140|
00043e  f9b5005e          LDRSH    r0,[r5,#0x5e]         ;292
000442  f7fffffe          BL       WM_IsWindow
000446  b120              CBZ      r0,|L1.1106|
000448  f9b5005e          LDRSH    r0,[r5,#0x5e]         ;293
00044c  f7fffffe          BL       WM_SetFocus
000450  e005              B        |L1.1118|
                  |L1.1106|
000452  f9b5004c          LDRSH    r0,[r5,#0x4c]         ;295
000456  f7fffffe          BL       WM_SetFocusOnNextChild
00045a  f8a5005e          STRH     r0,[r5,#0x5e]         ;295
                  |L1.1118|
00045e  2101              MOVS     r1,#1                 ;297
000460  4638              MOV      r0,r7                 ;297
000462  f7fffffe          BL       FRAMEWIN_SetActive
000466  2000              MOVS     r0,#0                 ;298
000468  60a0              STR      r0,[r4,#8]            ;298
00046a  e007              B        |L1.1148|
                  |L1.1132|
                          DCD      FRAMEWIN__MinVisibility
                  |L1.1136|
                          DCD      0x00aaaaaa
                  |L1.1140|
000474  2100              MOVS     r1,#0                 ;300
000476  4638              MOV      r0,r7                 ;300
000478  f7fffffe          BL       FRAMEWIN_SetActive
                  |L1.1148|
00047c  e78c              B        |L1.920|
                  |L1.1150|
00047e  f8b5005c          LDRH     r0,[r5,#0x5c]         ;307
000482  f0100f08          TST      r0,#8                 ;307
000486  d10d              BNE      |L1.1188|
000488  f8d4a008          LDR      r10,[r4,#8]           ;310
00048c  f8da8008          LDR      r8,[r10,#8]           ;311
000490  f1b80f00          CMP      r8,#0                 ;312
000494  d005              BEQ      |L1.1186|
000496  f8980008          LDRB     r0,[r8,#8]            ;313
00049a  b110              CBZ      r0,|L1.1186|
00049c  4638              MOV      r0,r7                 ;314
00049e  f7fffffe          BL       WM_SetFocus
                  |L1.1186|
0004a2  bf00              NOP                            ;317
                  |L1.1188|
0004a4  e00c              B        |L1.1216|
0004a6  e006              B        |L1.1206|
0004a8  e7ff              B        |L1.1194|
                  |L1.1194|
0004aa  4622              MOV      r2,r4                 ;320
0004ac  4629              MOV      r1,r5                 ;320
0004ae  4638              MOV      r0,r7                 ;320
0004b0  f7fffffe          BL       _OnChildHasFocus
0004b4  e004              B        |L1.1216|
                  |L1.1206|
0004b6  f1050050          ADD      r0,r5,#0x50           ;324
0004ba  f7fffffe          BL       GUI_ALLOC_FreePtr
0004be  bf00              NOP                            ;325
                  |L1.1216|
0004c0  bf00              NOP                            ;270
0004c2  4621              MOV      r1,r4                 ;328
0004c4  4638              MOV      r0,r7                 ;328
0004c6  f7fffffe          BL       WIDGET_HandleActive
0004ca  b900              CBNZ     r0,|L1.1230|
0004cc  e764              B        |L1.920|
                  |L1.1230|
0004ce  4620              MOV      r0,r4                 ;331
0004d0  f7fffffe          BL       WM_DefaultProc
0004d4  bf00              NOP      
0004d6  e75f              B        |L1.920|
;;;333    
                          ENDP

                  FRAMEWIN__cbClient PROC
;;;337    */
;;;338    static void FRAMEWIN__cbClient(WM_MESSAGE* pMsg) {
0004d8  e92d43fe          PUSH     {r1-r9,lr}
0004dc  4604              MOV      r4,r0
;;;339      WM_HWIN hWin    = pMsg->hWin;
0004de  f9b47004          LDRSH    r7,[r4,#4]
;;;340      WM_HWIN hParent = WM_GetParent(pMsg->hWin);
0004e2  f9b40004          LDRSH    r0,[r4,#4]
0004e6  f7fffffe          BL       WM_GetParent
0004ea  4680              MOV      r8,r0
;;;341      FRAMEWIN_Obj* pObj = FRAMEWIN_H2P(hParent);
0004ec  4640              MOV      r0,r8
0004ee  f7fffffe          BL       GUI_ALLOC_h2p
0004f2  4605              MOV      r5,r0
;;;342      WM_CALLBACK* cb = pObj->cb;
0004f4  6cae              LDR      r6,[r5,#0x48]
;;;343      switch (pMsg->MsgId) {
0004f6  6820              LDR      r0,[r4,#0]
0004f8  2817              CMP      r0,#0x17
0004fa  d058              BEQ      |L1.1454|
0004fc  dc08              BGT      |L1.1296|
0004fe  280e              CMP      r0,#0xe
000500  d03e              BEQ      |L1.1408|
000502  280f              CMP      r0,#0xf
000504  d00b              BEQ      |L1.1310|
000506  2814              CMP      r0,#0x14
000508  d04f              BEQ      |L1.1450|
00050a  2815              CMP      r0,#0x15
00050c  d153              BNE      |L1.1462|
00050e  e04d              B        |L1.1452|
                  |L1.1296|
000510  281f              CMP      r0,#0x1f
000512  d01a              BEQ      |L1.1354|
000514  2820              CMP      r0,#0x20
000516  d02e              BEQ      |L1.1398|
000518  2822              CMP      r0,#0x22
00051a  d14c              BNE      |L1.1462|
00051c  e042              B        |L1.1444|
                  |L1.1310|
;;;344      case WM_PAINT:
;;;345        if (pObj->Props.ClientColor != GUI_INVALID_COLOR) {
00051e  f06f4170          MVN      r1,#0xf0000000
000522  6be8              LDR      r0,[r5,#0x3c]
000524  4288              CMP      r0,r1
000526  d004              BEQ      |L1.1330|
;;;346          LCD_SetBkColor(pObj->Props.ClientColor);
000528  6be8              LDR      r0,[r5,#0x3c]
00052a  f7fffffe          BL       LCD_SetBkColor
;;;347          GUI_Clear();
00052e  f7fffffe          BL       GUI_Clear
                  |L1.1330|
;;;348        }
;;;349        /* Give the user callback  a chance to draw.
;;;350         * Note that we can not run into the bottom part, as this passes the parents handle
;;;351         */
;;;352        if (cb) {
000532  b146              CBZ      r6,|L1.1350|
;;;353    	    WM_MESSAGE Msg;
;;;354          Msg      = *pMsg;
000534  e8940007          LDM      r4,{r0-r2}
000538  e88d0007          STM      sp,{r0-r2}
;;;355          Msg.hWin = hWin;
00053c  f8ad7004          STRH     r7,[sp,#4]
;;;356          (*cb)(&Msg);
000540  4668              MOV      r0,sp
000542  47b0              BLX      r6
;;;357        }
000544  bf00              NOP      
                  |L1.1350|
;;;358        return;
;;;359      case WM_SET_FOCUS:
;;;360        if (pMsg->Data.v) {     /* Focus received */
;;;361          if (pObj->hFocussedChild && (pObj->hFocussedChild != hWin)) {
;;;362            WM_SetFocus(pObj->hFocussedChild);
;;;363          } else {
;;;364            pObj->hFocussedChild = WM_SetFocusOnNextChild(hWin);
;;;365          }
;;;366          pMsg->Data.v = 0;     /* Focus change accepted */
;;;367        }
;;;368        return;
;;;369      case WM_GET_ACCEPT_FOCUS:
;;;370        WIDGET_HandleActive(hParent, pMsg);
;;;371        return;
;;;372      case WM_KEY:
;;;373        if (((const WM_KEY_INFO*)(pMsg->Data.p))->PressedCnt > 0) {
;;;374          int Key = ((const WM_KEY_INFO*)(pMsg->Data.p))->Key;
;;;375          switch (Key) {
;;;376          case GUI_KEY_TAB:
;;;377            pObj->hFocussedChild = WM_SetFocusOnNextChild(hWin);
;;;378            return;
;;;379          }
;;;380        }
;;;381        break;	                       /* Send to parent by not doing anything */
;;;382      case WM_GET_BKCOLOR:
;;;383        pMsg->Data.Color = pObj->Props.ClientColor;
;;;384        return;                       /* Message handled */
;;;385      case WM_GET_INSIDE_RECT:        /* This should not be passed to parent ... (We do not want parents coordinates)*/
;;;386      case WM_GET_ID:                 /* This should not be passed to parent ... (Possible recursion problem)*/
;;;387      case WM_GET_CLIENT_WINDOW:      /* return handle to client window. For most windows, there is no seperate client window, so it is the same handle */
;;;388        WM_DefaultProc(pMsg);
;;;389        return;                       /* We are done ! */
;;;390      }
;;;391      /* Call user callback. Note that the user callback gets the handle of the Framewindow itself, NOT the Client. */
;;;392      if (cb) {
;;;393        pMsg->hWin = hParent;
;;;394        (*cb)(pMsg);
;;;395      } else {
;;;396        WM_DefaultProc(pMsg);
;;;397      }
;;;398    }
000546  e8bd83fe          POP      {r1-r9,pc}
                  |L1.1354|
00054a  68a0              LDR      r0,[r4,#8]            ;360
00054c  b190              CBZ      r0,|L1.1396|
00054e  f8b5005e          LDRH     r0,[r5,#0x5e]         ;361
000552  b140              CBZ      r0,|L1.1382|
000554  f9b5005e          LDRSH    r0,[r5,#0x5e]         ;361
000558  42b8              CMP      r0,r7                 ;361
00055a  d004              BEQ      |L1.1382|
00055c  f9b5005e          LDRSH    r0,[r5,#0x5e]         ;362
000560  f7fffffe          BL       WM_SetFocus
000564  e004              B        |L1.1392|
                  |L1.1382|
000566  4638              MOV      r0,r7                 ;364
000568  f7fffffe          BL       WM_SetFocusOnNextChild
00056c  f8a5005e          STRH     r0,[r5,#0x5e]         ;364
                  |L1.1392|
000570  2000              MOVS     r0,#0                 ;366
000572  60a0              STR      r0,[r4,#8]            ;366
                  |L1.1396|
000574  e7e7              B        |L1.1350|
                  |L1.1398|
000576  4621              MOV      r1,r4                 ;370
000578  4640              MOV      r0,r8                 ;370
00057a  f7fffffe          BL       WIDGET_HandleActive
00057e  e7e2              B        |L1.1350|
                  |L1.1408|
000580  68a0              LDR      r0,[r4,#8]            ;373
000582  6840              LDR      r0,[r0,#4]            ;373
000584  2800              CMP      r0,#0                 ;373
000586  dd0c              BLE      |L1.1442|
000588  68a0              LDR      r0,[r4,#8]            ;374
00058a  f8d09000          LDR      r9,[r0,#0]            ;374
00058e  f1b90f09          CMP      r9,#9                 ;375
000592  d105              BNE      |L1.1440|
000594  4638              MOV      r0,r7                 ;377
000596  f7fffffe          BL       WM_SetFocusOnNextChild
00059a  f8a5005e          STRH     r0,[r5,#0x5e]         ;377
00059e  e7d2              B        |L1.1350|
                  |L1.1440|
0005a0  bf00              NOP                            ;380
                  |L1.1442|
0005a2  e008              B        |L1.1462|
                  |L1.1444|
0005a4  6be8              LDR      r0,[r5,#0x3c]         ;383
0005a6  60a0              STR      r0,[r4,#8]            ;383
0005a8  e7cd              B        |L1.1350|
                  |L1.1450|
0005aa  bf00              NOP                            ;386
                  |L1.1452|
0005ac  bf00              NOP                            ;387
                  |L1.1454|
0005ae  4620              MOV      r0,r4                 ;388
0005b0  f7fffffe          BL       WM_DefaultProc
0005b4  e7c7              B        |L1.1350|
                  |L1.1462|
0005b6  bf00              NOP                            ;381
0005b8  b126              CBZ      r6,|L1.1476|
0005ba  f8a48004          STRH     r8,[r4,#4]            ;393
0005be  4620              MOV      r0,r4                 ;394
0005c0  47b0              BLX      r6                    ;394
0005c2  e002              B        |L1.1482|
                  |L1.1476|
0005c4  4620              MOV      r0,r4                 ;396
0005c6  f7fffffe          BL       WM_DefaultProc
                  |L1.1482|
0005ca  bf00              NOP      
0005cc  e7bb              B        |L1.1350|
;;;399    
                          ENDP

                  FRAMEWIN__UpdatePositions PROC
;;;479    */
;;;480    void FRAMEWIN__UpdatePositions(FRAMEWIN_Obj* pObj) {
0005ce  b530              PUSH     {r4,r5,lr}
0005d0  b085              SUB      sp,sp,#0x14
0005d2  4604              MOV      r4,r0
;;;481      /* Move client window accordingly */
;;;482      if (pObj->hClient || pObj->hMenu) {
0005d4  f8b4004c          LDRH     r0,[r4,#0x4c]
0005d8  b910              CBNZ     r0,|L1.1504|
0005da  f8b4004e          LDRH     r0,[r4,#0x4e]
0005de  b368              CBZ      r0,|L1.1596|
                  |L1.1504|
;;;483        POSITIONS Pos;
;;;484        FRAMEWIN__CalcPositions(pObj, &Pos);
0005e0  4669              MOV      r1,sp
0005e2  4620              MOV      r0,r4
0005e4  f7fffffe          BL       FRAMEWIN__CalcPositions
;;;485        if (pObj->hClient) {
0005e8  f8b4004c          LDRH     r0,[r4,#0x4c]
0005ec  b1b8              CBZ      r0,|L1.1566|
;;;486          WM_MoveChildTo(pObj->hClient, Pos.rClient.x0, Pos.rClient.y0);
0005ee  f9bd2006          LDRSH    r2,[sp,#6]
0005f2  f9bd1004          LDRSH    r1,[sp,#4]
0005f6  f9b4004c          LDRSH    r0,[r4,#0x4c]
0005fa  f7fffffe          BL       WM_MoveChildTo
;;;487          WM_SetSize(pObj->hClient, 
0005fe  f9bd500a          LDRSH    r5,[sp,#0xa]
000602  f9bd3006          LDRSH    r3,[sp,#6]
000606  1aeb              SUBS     r3,r5,r3
000608  1c5a              ADDS     r2,r3,#1
00060a  f9bd3008          LDRSH    r3,[sp,#8]
00060e  f9bd5004          LDRSH    r5,[sp,#4]
000612  1b5b              SUBS     r3,r3,r5
000614  1c59              ADDS     r1,r3,#1
000616  f9b4004c          LDRSH    r0,[r4,#0x4c]
00061a  f7fffffe          BL       WM_SetSize
                  |L1.1566|
;;;488                     Pos.rClient.x1 - Pos.rClient.x0 + 1, 
;;;489                     Pos.rClient.y1 - Pos.rClient.y0 + 1);
;;;490        }
;;;491        if (pObj->hMenu) {
00061e  f8b4004e          LDRH     r0,[r4,#0x4e]
000622  b150              CBZ      r0,|L1.1594|
;;;492          WM_MoveChildTo(pObj->hMenu, Pos.rClient.x0, Pos.rClient.y0 - Pos.MenuHeight);
000624  f9bd3006          LDRSH    r3,[sp,#6]
000628  f9bd5002          LDRSH    r5,[sp,#2]
00062c  1b5a              SUBS     r2,r3,r5
00062e  f9bd1004          LDRSH    r1,[sp,#4]
000632  f9b4004e          LDRSH    r0,[r4,#0x4e]
000636  f7fffffe          BL       WM_MoveChildTo
                  |L1.1594|
;;;493        }
;;;494      }
00063a  bf00              NOP      
                  |L1.1596|
;;;495    }
00063c  b005              ADD      sp,sp,#0x14
00063e  bd30              POP      {r4,r5,pc}
;;;496    
                          ENDP

                  FRAMEWIN_SetText PROC
;;;559    */
;;;560    void FRAMEWIN_SetText(FRAMEWIN_Handle hObj, const char* s) {
000640  b570              PUSH     {r4-r6,lr}
000642  4604              MOV      r4,r0
000644  460d              MOV      r5,r1
;;;561      if (hObj) {
000646  b18c              CBZ      r4,|L1.1644|
;;;562        FRAMEWIN_Obj* pObj;
;;;563        GUI_LOCK();
000648  f7fffffe          BL       GUI_Lock
;;;564        pObj = FRAMEWIN_H2P(hObj);
00064c  4620              MOV      r0,r4
00064e  f7fffffe          BL       GUI_ALLOC_h2p
000652  4606              MOV      r6,r0
;;;565        if (GUI__SetText(&pObj->hText, s)) {
000654  4629              MOV      r1,r5
000656  f1060050          ADD      r0,r6,#0x50
00065a  f7fffffe          BL       GUI__SetText
00065e  b110              CBZ      r0,|L1.1638|
;;;566          FRAMEWIN_Invalidate(hObj);
000660  4620              MOV      r0,r4
000662  f7fffffe          BL       WM_InvalidateWindow
                  |L1.1638|
;;;567        }
;;;568        GUI_UNLOCK();
000666  f7fffffe          BL       GUI_Unlock
;;;569      }
00066a  bf00              NOP      
                  |L1.1644|
;;;570    }
00066c  bd70              POP      {r4-r6,pc}
;;;571    
                          ENDP

                  FRAMEWIN_CreateEx PROC
;;;506    */
;;;507    FRAMEWIN_Handle FRAMEWIN_CreateEx(int x0, int y0, int xsize, int ysize, WM_HWIN hParent,
00066e  e92d4fff          PUSH     {r0-r11,lr}
;;;508                                      int WinFlags, int ExFlags, int Id, const char* pTitle, WM_CALLBACK* cb)
;;;509    {
000672  b089              SUB      sp,sp,#0x24
000674  4607              MOV      r7,r0
000676  4688              MOV      r8,r1
000678  4693              MOV      r11,r2
00067a  f8dda06c          LDR      r10,[sp,#0x6c]
00067e  e9dd5917          LDRD     r5,r9,[sp,#0x5c]
;;;510      FRAMEWIN_Handle hObj;
;;;511      /* Create the window */
;;;512      WinFlags |= WM_CF_LATE_CLIP;    /* Always use late clipping since widget is optimized for it. */
000682  f4455580          ORR      r5,r5,#0x1000
;;;513      hObj = WM_CreateWindowAsChild(x0, y0, xsize, ysize, hParent, WinFlags, _FRAMEWIN_Callback,
000686  2348              MOVS     r3,#0x48
000688  4a4a              LDR      r2,|L1.1972|
00068a  b2a9              UXTH     r1,r5
00068c  9816              LDR      r0,[sp,#0x58]
00068e  e88d000f          STM      sp,{r0-r3}
000692  465a              MOV      r2,r11
000694  4641              MOV      r1,r8
000696  4638              MOV      r0,r7
000698  9b0c              LDR      r3,[sp,#0x30]
00069a  f7fffffe          BL       WM_CreateWindowAsChild
00069e  4606              MOV      r6,r0
;;;514                                    sizeof(FRAMEWIN_Obj) - sizeof(WM_Obj));
;;;515      if (hObj) {
0006a0  b3ee              CBZ      r6,|L1.1822|
;;;516        FRAMEWIN_Obj* pObj;
;;;517        POSITIONS Pos;
;;;518        GUI_LOCK();
0006a2  f7fffffe          BL       GUI_Lock
;;;519        pObj = FRAMEWIN_H2P(hObj);
0006a6  4630              MOV      r0,r6
0006a8  f7fffffe          BL       GUI_ALLOC_h2p
0006ac  4604              MOV      r4,r0
;;;520        /* init widget specific variables */
;;;521        WIDGET__Init(&pObj->Widget, Id, WIDGET_STATE_FOCUSSABLE | FRAMEWIN_SF_TITLEVIS);
0006ae  2230              MOVS     r2,#0x30
0006b0  4620              MOV      r0,r4
0006b2  9919              LDR      r1,[sp,#0x64]
0006b4  f7fffffe          BL       WIDGET__Init
;;;522        /* init member variables */
;;;523        pObj->Props = FRAMEWIN__DefaultProps;
0006b8  2220              MOVS     r2,#0x20
0006ba  493f              LDR      r1,|L1.1976|
0006bc  f1040028          ADD      r0,r4,#0x28
0006c0  f7fffffe          BL       __aeabi_memcpy4
;;;524        pObj->TextAlign      = GUI_TA_LEFT;
0006c4  2000              MOVS     r0,#0
0006c6  f1040448          ADD      r4,r4,#0x48
0006ca  8260              STRH     r0,[r4,#0x12]
;;;525        pObj->cb             = cb;
0006cc  f8c4a000          STR      r10,[r4,#0]
;;;526        pObj->Flags          = ExFlags;
0006d0  f8a49014          STRH     r9,[r4,#0x14]
;;;527        pObj->hFocussedChild = 0;
0006d4  82e0              STRH     r0,[r4,#0x16]
;;;528        pObj->hMenu          = 0;
0006d6  80e0              STRH     r0,[r4,#6]
;;;529        pObj->pFirstHook     = NULL;
0006d8  61e0              STR      r0,[r4,#0x1c]
0006da  f1a40448          SUB      r4,r4,#0x48
;;;530        FRAMEWIN__CalcPositions(pObj, &Pos);
0006de  a904              ADD      r1,sp,#0x10
0006e0  4620              MOV      r0,r4
0006e2  f7fffffe          BL       FRAMEWIN__CalcPositions
;;;531        pObj->hClient = WM_CreateWindowAsChild(Pos.rClient.x0,Pos.rClient.y0,
0006e6  2300              MOVS     r3,#0
0006e8  4a34              LDR      r2,|L1.1980|
0006ea  f2417182          MOV      r1,#0x1782
0006ee  e9cd6100          STRD     r6,r1,[sp,#0]
0006f2  e9cd2302          STRD     r2,r3,[sp,#8]
0006f6  f9bde01a          LDRSH    lr,[sp,#0x1a]
0006fa  f9bdc016          LDRSH    r12,[sp,#0x16]
0006fe  ebae0c0c          SUB      r12,lr,r12
000702  f10c0301          ADD      r3,r12,#1
000706  f9bdc018          LDRSH    r12,[sp,#0x18]
00070a  f9bde014          LDRSH    lr,[sp,#0x14]
00070e  ebac0c0e          SUB      r12,r12,lr
000712  f10c0201          ADD      r2,r12,#1
000716  f9bd1016          LDRSH    r1,[sp,#0x16]
00071a  4670              MOV      r0,lr
00071c  e000              B        |L1.1824|
                  |L1.1822|
00071e  e011              B        |L1.1860|
                  |L1.1824|
000720  f7fffffe          BL       WM_CreateWindowAsChild
000724  f8a4004c          STRH     r0,[r4,#0x4c]
;;;532                                               Pos.rClient.x1 - Pos.rClient.x0 +1,
;;;533                                               Pos.rClient.y1 - Pos.rClient.y0 +1,
;;;534                                               hObj, 
;;;535                                               WM_CF_ANCHOR_RIGHT | WM_CF_ANCHOR_LEFT | WM_CF_ANCHOR_TOP | WM_CF_ANCHOR_BOTTOM | WM_CF_SHOW | WM_CF_LATE_CLIP, 
;;;536                                               FRAMEWIN__cbClient, 0);
;;;537        /* Normally we disable memory devices for the frame window:
;;;538         * The frame window does not flicker, and not using memory devices is usually faster.
;;;539         * You can still use memory by explicitly specifying the flag
;;;540         */
;;;541        if ((WinFlags & (WM_CF_MEMDEV | (WM_CF_MEMDEV_ON_REDRAW))) == 0) {
000728  f2420004          MOV      r0,#0x2004
00072c  4205              TST      r5,r0
00072e  d102              BNE      |L1.1846|
;;;542          WM_DisableMemdev(hObj);
000730  4630              MOV      r0,r6
000732  f7fffffe          BL       WM_DisableMemdev
                  |L1.1846|
;;;543        }
;;;544        FRAMEWIN_SetText(hObj, pTitle);
000736  4630              MOV      r0,r6
000738  991a              LDR      r1,[sp,#0x68]
00073a  f7fffffe          BL       FRAMEWIN_SetText
;;;545        GUI_UNLOCK();
00073e  f7fffffe          BL       GUI_Unlock
;;;546      }
000742  bf00              NOP      
                  |L1.1860|
;;;547      return hObj;
000744  4630              MOV      r0,r6
;;;548    }
000746  b00d              ADD      sp,sp,#0x34
000748  e8bd8ff0          POP      {r4-r11,pc}
;;;549    
                          ENDP

                  FRAMEWIN_SetTextAlign PROC
;;;575    */
;;;576    void FRAMEWIN_SetTextAlign(FRAMEWIN_Handle hObj, int Align) {
00074c  b570              PUSH     {r4-r6,lr}
00074e  4605              MOV      r5,r0
000750  460c              MOV      r4,r1
;;;577      if (hObj) {
000752  b195              CBZ      r5,|L1.1914|
;;;578        FRAMEWIN_Obj* pObj;
;;;579        GUI_LOCK();
000754  f7fffffe          BL       GUI_Lock
;;;580        pObj = FRAMEWIN_H2P(hObj);
000758  4628              MOV      r0,r5
00075a  f7fffffe          BL       GUI_ALLOC_h2p
00075e  4606              MOV      r6,r0
;;;581        if (pObj->TextAlign != Align) {
000760  f9b6005a          LDRSH    r0,[r6,#0x5a]
000764  42a0              CMP      r0,r4
000766  d005              BEQ      |L1.1908|
;;;582          pObj->TextAlign = Align;
000768  b220              SXTH     r0,r4
00076a  f8a6005a          STRH     r0,[r6,#0x5a]
;;;583          FRAMEWIN_Invalidate(hObj);
00076e  4628              MOV      r0,r5
000770  f7fffffe          BL       WM_InvalidateWindow
                  |L1.1908|
;;;584        }
;;;585        GUI_UNLOCK();
000774  f7fffffe          BL       GUI_Unlock
;;;586      }
000778  bf00              NOP      
                  |L1.1914|
;;;587    }
00077a  bd70              POP      {r4-r6,pc}
;;;588    
                          ENDP

                  FRAMEWIN_SetMoveable PROC
;;;592    */
;;;593    void FRAMEWIN_SetMoveable(FRAMEWIN_Handle hObj, int State) {
00077c  b570              PUSH     {r4-r6,lr}
00077e  4605              MOV      r5,r0
000780  460e              MOV      r6,r1
;;;594      if (hObj) {
000782  b1b5              CBZ      r5,|L1.1970|
;;;595        FRAMEWIN_Obj* pObj;
;;;596        GUI_LOCK();
000784  f7fffffe          BL       GUI_Lock
;;;597        pObj = FRAMEWIN_H2P(hObj);
000788  4628              MOV      r0,r5
00078a  f7fffffe          BL       GUI_ALLOC_h2p
00078e  4604              MOV      r4,r0
;;;598        if (State) {
000790  b136              CBZ      r6,|L1.1952|
;;;599          pObj->Flags |= FRAMEWIN_CF_MOVEABLE;
000792  f8b4005c          LDRH     r0,[r4,#0x5c]
000796  f0400010          ORR      r0,r0,#0x10
00079a  f8a4005c          STRH     r0,[r4,#0x5c]
00079e  e005              B        |L1.1964|
                  |L1.1952|
;;;600        } else {
;;;601          pObj->Flags &= ~FRAMEWIN_CF_MOVEABLE;
0007a0  f8b4005c          LDRH     r0,[r4,#0x5c]
0007a4  f0200010          BIC      r0,r0,#0x10
0007a8  f8a4005c          STRH     r0,[r4,#0x5c]
                  |L1.1964|
;;;602        }
;;;603        GUI_UNLOCK();
0007ac  f7fffffe          BL       GUI_Unlock
;;;604      }
0007b0  bf00              NOP      
                  |L1.1970|
;;;605    }
0007b2  bd70              POP      {r4-r6,pc}
;;;606    
                          ENDP

                  |L1.1972|
                          DCD      _FRAMEWIN_Callback
                  |L1.1976|
                          DCD      FRAMEWIN__DefaultProps
                  |L1.1980|
                          DCD      FRAMEWIN__cbClient

                          AREA ||.data||, DATA, ALIGN=2

                  FRAMEWIN__DefaultProps
                          DCD      GUI_Font8_1
                          DCD      0x00404040
                          DCD      0x00ff0000
                          DCD      0x00ffffff
                          DCD      0x00ffffff
                          DCD      0x00c0c0c0
000018  00000003          DCW      0x0000,0x0003
00001c  0001              DCW      0x0001
00001e  0000              DCB      0x00,0x00
                  FRAMEWIN__MinVisibility
000020  0005              DCW      0x0005
