; generated by ARM C/C++ Compiler, 4.1 [Build 894]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\Obj\edit.o --asm_dir=.\List\ --list_dir=.\List\ --depend=.\Obj\edit.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\Libraries\CMSIS\CM3\CoreSupport -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x\startup\arm -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\User -I..\BaseDrive -I..\Ucosii -I..\Ucosii\Port -I..\Ucosii\Src -I..\Ucosii\Include -I..\Ucgui -I..\Ucgui\Config -I..\Ucgui\GUI_X -I..\Ucgui\GUI -I..\Ucgui\GUI\ConvertColor -I..\Ucgui\GUI\ConvertMono -I..\Ucgui\GUI\Core -I..\Ucgui\GUI\Core -I..\Ucgui\GUI\LCDDriver -I..\Ucgui\GUI\MultiLayer -I..\Ucgui\GUI\Widget -I..\Ucgui\GUI\WM -I..\ExternalDrive\Lcd -I..\ExternalDrive\Touch -I..\Panel -I"D:\Program files\Keil\ARM\RV31\Inc" -I"D:\Program files\Keil\ARM\CMSIS\Include" -I"D:\Program files\Keil\ARM\Inc\ST\STM32F10x" -D__MICROLIB -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=.\Obj\edit.crf ..\Ucgui\GUI\Widget\EDIT.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  _Paint PROC
;;;151    */
;;;152    static void _Paint(EDIT_Obj* pObj, EDIT_Handle hObj) {
000000  e92d4ff0          PUSH     {r4-r11,lr}
000004  b08d              SUB      sp,sp,#0x34
000006  4604              MOV      r4,r0
000008  4689              MOV      r9,r1
;;;153      GUI_RECT rFillRect, rInside, r, rText, rInvert;
;;;154      const char GUI_UNI_PTR * pText = NULL;
00000a  2600              MOVS     r6,#0
;;;155      int IsEnabled, CursorWidth;
;;;156      IsEnabled = WM__IsEnabled(hObj);
00000c  4648              MOV      r0,r9
00000e  f7fffffe          BL       WM__IsEnabled
000012  4682              MOV      r10,r0
;;;157      /* Set colors and font */
;;;158      LCD_SetBkColor(pObj->Props.aBkColor[IsEnabled]);
000014  f1040168          ADD      r1,r4,#0x68
000018  f851002a          LDR      r0,[r1,r10,LSL #2]
00001c  f7fffffe          BL       LCD_SetBkColor
;;;159      LCD_SetColor(pObj->Props.aTextColor[0]);
000020  6e20              LDR      r0,[r4,#0x60]
000022  f7fffffe          BL       LCD_SetColor
;;;160      GUI_SetFont(pObj->Props.pFont);
000026  6de0              LDR      r0,[r4,#0x5c]
000028  f7fffffe          BL       GUI_SetFont
;;;161      /* Calculate size */
;;;162      WM__GetClientRectWin(&pObj->Widget.Win, &r);
00002c  a907              ADD      r1,sp,#0x1c
00002e  4620              MOV      r0,r4
000030  f7fffffe          BL       WM__GetClientRectWin
;;;163      WIDGET__GetInsideRect(&pObj->Widget, &rFillRect);
000034  a90b              ADD      r1,sp,#0x2c
000036  4620              MOV      r0,r4
000038  f7fffffe          BL       WIDGET__GetInsideRect
;;;164      if (pObj->hpText) {
00003c  8d20              LDRH     r0,[r4,#0x28]
00003e  b120              CBZ      r0,|L1.74|
;;;165        pText = (const char*) GUI_ALLOC_h2p(pObj->hpText);
000040  f9b40028          LDRSH    r0,[r4,#0x28]
000044  f7fffffe          BL       GUI_ALLOC_h2p
000048  4606              MOV      r6,r0
                  |L1.74|
;;;166      }
;;;167      rInside = rFillRect;
00004a  e9dd010b          LDRD     r0,r1,[sp,#0x2c]
00004e  e9cd0109          STRD     r0,r1,[sp,#0x24]
;;;168      rInside.x0 += pObj->Props.Border + EDIT_XOFF;
000052  f8bd1024          LDRH     r1,[sp,#0x24]
000056  6da0              LDR      r0,[r4,#0x58]
000058  1c40              ADDS     r0,r0,#1
00005a  4408              ADD      r0,r0,r1
00005c  b200              SXTH     r0,r0
00005e  f8ad0024          STRH     r0,[sp,#0x24]
;;;169      rInside.x1 -= pObj->Props.Border + EDIT_XOFF;
000062  f8bd1028          LDRH     r1,[sp,#0x28]
000066  6da0              LDR      r0,[r4,#0x58]
000068  1c40              ADDS     r0,r0,#1
00006a  1a08              SUBS     r0,r1,r0
00006c  b200              SXTH     r0,r0
00006e  f8ad0028          STRH     r0,[sp,#0x28]
;;;170      GUI__CalcTextRect(pText, &rInside, &rText, pObj->Props.Align);
000072  aa05              ADD      r2,sp,#0x14
000074  a909              ADD      r1,sp,#0x24
000076  4630              MOV      r0,r6
000078  6d63              LDR      r3,[r4,#0x54]
00007a  f7fffffe          BL       GUI__CalcTextRect
;;;171      /* Calculate position and size of cursor */
;;;172      if (pObj->Widget.State & WIDGET_STATE_FOCUS) {
00007e  8ce0              LDRH     r0,[r4,#0x26]
000080  f0100f01          TST      r0,#1
000084  d05c              BEQ      |L1.320|
;;;173        const char GUI_UNI_PTR * p = pText;
000086  9602              STR      r6,[sp,#8]
;;;174        CursorWidth = ((pObj->XSizeCursor > 0) ? (pObj->XSizeCursor) : (1));
000088  f8940049          LDRB     r0,[r4,#0x49]
00008c  2800              CMP      r0,#0
00008e  dd02              BLE      |L1.150|
000090  f8940049          LDRB     r0,[r4,#0x49]
000094  e000              B        |L1.152|
                  |L1.150|
000096  2001              MOVS     r0,#1
                  |L1.152|
000098  4607              MOV      r7,r0
;;;175        if (pText) {
00009a  2e00              CMP      r6,#0
00009c  d04f              BEQ      |L1.318|
;;;176          U16 Char;
;;;177          int i;
;;;178    	//  pObj->SelSize = 3;	//houhh 20061023...
;;;179          if ((pObj->EditMode != GUI_EDIT_MODE_INSERT) || (pObj->SelSize)) {
00009e  f8940048          LDRB     r0,[r4,#0x48]
0000a2  b910              CBNZ     r0,|L1.170|
0000a4  6c60              LDR      r0,[r4,#0x44]
0000a6  2800              CMP      r0,#0
0000a8  d031              BEQ      |L1.270|
                  |L1.170|
;;;180            int NumChars, CursorOffset;
;;;181            NumChars = GUI__GetNumChars(pText);
0000aa  4630              MOV      r0,r6
0000ac  f7fffffe          BL       GUI__GetNumChars
0000b0  4683              MOV      r11,r0
;;;182            if (pObj->CursorPos < NumChars) {
0000b2  6c20              LDR      r0,[r4,#0x40]
0000b4  4558              CMP      r0,r11
0000b6  da29              BGE      |L1.268|
;;;183              if (pObj->SelSize) {
0000b8  6c60              LDR      r0,[r4,#0x44]
0000ba  b1c8              CBZ      r0,|L1.240|
;;;184                CursorWidth = 0;
0000bc  2700              MOVS     r7,#0
;;;185                for (i = pObj->CursorPos; i < (int)(pObj->CursorPos + pObj->SelSize); i++) {
0000be  6c25              LDR      r5,[r4,#0x40]
0000c0  e00e              B        |L1.224|
                  |L1.194|
;;;186                  CursorOffset = GUI_UC__NumChars2NumBytes(pText, i);
0000c2  4629              MOV      r1,r5
0000c4  4630              MOV      r0,r6
0000c6  f7fffffe          BL       GUI_UC__NumChars2NumBytes
0000ca  4680              MOV      r8,r0
;;;187                  Char         = GUI_UC_GetCharCode      (pText + CursorOffset);
0000cc  eb060008          ADD      r0,r6,r8
0000d0  f7fffffe          BL       GUI_UC_GetCharCode
0000d4  9001              STR      r0,[sp,#4]
;;;188                  CursorWidth += GUI_GetCharDistX        (Char);
0000d6  9801              LDR      r0,[sp,#4]
0000d8  f7fffffe          BL       GUI_GetCharDistX
0000dc  4407              ADD      r7,r7,r0
0000de  1c6d              ADDS     r5,r5,#1              ;185
                  |L1.224|
0000e0  e9d40110          LDRD     r0,r1,[r4,#0x40]      ;185
0000e4  4408              ADD      r0,r0,r1              ;185
0000e6  42a8              CMP      r0,r5                 ;185
0000e8  dceb              BGT      |L1.194|
;;;189                }
;;;190                if (!CursorWidth) {
0000ea  b97f              CBNZ     r7,|L1.268|
;;;191                  CursorWidth = 1;
0000ec  2701              MOVS     r7,#1
0000ee  e00d              B        |L1.268|
                  |L1.240|
;;;192                }
;;;193              } else {
;;;194                CursorOffset = GUI_UC__NumChars2NumBytes(pText, pObj->CursorPos);
0000f0  4630              MOV      r0,r6
0000f2  6c21              LDR      r1,[r4,#0x40]
0000f4  f7fffffe          BL       GUI_UC__NumChars2NumBytes
0000f8  4680              MOV      r8,r0
;;;195                Char = GUI_UC_GetCharCode(pText + CursorOffset);
0000fa  eb060008          ADD      r0,r6,r8
0000fe  f7fffffe          BL       GUI_UC_GetCharCode
000102  9001              STR      r0,[sp,#4]
;;;196                CursorWidth = GUI_GetCharDistX(Char);
000104  9801              LDR      r0,[sp,#4]
000106  f7fffffe          BL       GUI_GetCharDistX
00010a  4607              MOV      r7,r0
                  |L1.268|
;;;197              }
;;;198            }
;;;199          }
00010c  bf00              NOP      
                  |L1.270|
;;;200          rInvert = rText;
00010e  e9dd0105          LDRD     r0,r1,[sp,#0x14]
000112  e9cd0103          STRD     r0,r1,[sp,#0xc]
;;;201          for (i = 0; i != pObj->CursorPos; i++) {
000116  2500              MOVS     r5,#0
000118  e00d              B        |L1.310|
                  |L1.282|
;;;202            Char = GUI_UC__GetCharCodeInc(&p);
00011a  a802              ADD      r0,sp,#8
00011c  f7fffffe          BL       GUI_UC__GetCharCodeInc
000120  9001              STR      r0,[sp,#4]
;;;203            rInvert.x0 += GUI_GetCharDistX(Char);
000122  9801              LDR      r0,[sp,#4]
000124  f7fffffe          BL       GUI_GetCharDistX
000128  f8bd100c          LDRH     r1,[sp,#0xc]
00012c  4408              ADD      r0,r0,r1
00012e  b200              SXTH     r0,r0
000130  f8ad000c          STRH     r0,[sp,#0xc]
000134  1c6d              ADDS     r5,r5,#1              ;201
                  |L1.310|
000136  6c20              LDR      r0,[r4,#0x40]         ;201
000138  42a8              CMP      r0,r5                 ;201
00013a  d1ee              BNE      |L1.282|
;;;204          }
;;;205        }
00013c  bf00              NOP      
                  |L1.318|
;;;206      }
00013e  bf00              NOP      
                  |L1.320|
;;;207      /* WM loop */
;;;208      WM_ITERATE_START(NULL) {
000140  2000              MOVS     r0,#0
000142  f7fffffe          BL       WM__InitIVRSearch
000146  2800              CMP      r0,#0
000148  d059              BEQ      |L1.510|
00014a  bf00              NOP      
                  |L1.332|
;;;209        /* Set clipping rectangle */
;;;210        WM_SetUserClipRect(&rFillRect);
00014c  a80b              ADD      r0,sp,#0x2c
00014e  f7fffffe          BL       WM_SetUserClipRect
;;;211        /* Display text */
;;;212        WIDGET__FillStringInRect(pText, &rFillRect, &rInside, &rText);
000152  ab05              ADD      r3,sp,#0x14
000154  aa09              ADD      r2,sp,#0x24
000156  a90b              ADD      r1,sp,#0x2c
000158  4630              MOV      r0,r6
00015a  f7fffffe          BL       WIDGET__FillStringInRect
;;;213        /* Display cursor if needed */
;;;214        if (pObj->Widget.State & WIDGET_STATE_FOCUS) {
00015e  8ce0              LDRH     r0,[r4,#0x26]
000160  f0100f01          TST      r0,#1
000164  d041              BEQ      |L1.490|
;;;215    		///////////////houhh 20061020...
;;;216    		//  static GUI_TIMER_HANDLE Timer1 = NULL;	//houhh 20061018...
;;;217    		if(!Timer1){
000166  48f7              LDR      r0,|L1.1348|
000168  8800              LDRH     r0,[r0,#0]  ; Timer1
00016a  b9b0              CBNZ     r0,|L1.410|
;;;218    			  Timer1 = GUI_TIMER_Create((GUI_TIMER_CALLBACK*)ShowCurrsor, 1000*2, 0, 0);	//houhh 20061018...
00016c  2300              MOVS     r3,#0
00016e  461a              MOV      r2,r3
000170  f44f61fa          MOV      r1,#0x7d0
000174  48f4              LDR      r0,|L1.1352|
000176  f7fffffe          BL       GUI_TIMER_Create
00017a  49f2              LDR      r1,|L1.1348|
00017c  8008              STRH     r0,[r1,#0]
;;;219    			  GUI_TIMER_SetTime(Timer1, 1000*2);
00017e  f44f61fa          MOV      r1,#0x7d0
000182  48f0              LDR      r0,|L1.1348|
000184  f9b00000          LDRSH    r0,[r0,#0]  ; Timer1
000188  f7fffffe          BL       GUI_TIMER_SetTime
;;;220    			  GUI_TIMER_SetPeriod(Timer1, 500);
00018c  f44f71fa          MOV      r1,#0x1f4
000190  48ec              LDR      r0,|L1.1348|
000192  f9b00000          LDRSH    r0,[r0,#0]  ; Timer1
000196  f7fffffe          BL       GUI_TIMER_SetPeriod
                  |L1.410|
;;;221    		  }
;;;222    		if(Timer1) GUI_TIMER_Context(Timer1, hObj);
00019a  48ea              LDR      r0,|L1.1348|
00019c  8800              LDRH     r0,[r0,#0]  ; Timer1
00019e  b128              CBZ      r0,|L1.428|
0001a0  4649              MOV      r1,r9
0001a2  48e8              LDR      r0,|L1.1348|
0001a4  f9b00000          LDRSH    r0,[r0,#0]  ; Timer1
0001a8  f7fffffe          BL       GUI_TIMER_Context
                  |L1.428|
;;;223    		if(pObj->CurrsorShow%2) //houhh 20061022...
0001ac  6f20              LDR      r0,[r4,#0x70]
0001ae  eb0071d0          ADD      r1,r0,r0,LSR #31
0001b2  1049              ASRS     r1,r1,#1
0001b4  ebb00141          SUBS     r1,r0,r1,LSL #1
0001b8  d00b              BEQ      |L1.466|
;;;224    		  GUI_InvertRect(rInvert.x0, rInvert.y0, rInvert.x0 + CursorWidth - 1, rInvert.y1);
0001ba  f9bd3012          LDRSH    r3,[sp,#0x12]
0001be  f9bd500c          LDRSH    r5,[sp,#0xc]
0001c2  443d              ADD      r5,r5,r7
0001c4  1e6a              SUBS     r2,r5,#1
0001c6  f9bd100e          LDRSH    r1,[sp,#0xe]
0001ca  f9bd000c          LDRSH    r0,[sp,#0xc]
0001ce  f7fffffe          BL       GUI_InvertRect
                  |L1.466|
;;;225    		/////////////
;;;226    		GUI_InvertRect(rInvert.x0, rInvert.y0, rInvert.x0 + CursorWidth - 1, rInvert.y1);
0001d2  f9bd3012          LDRSH    r3,[sp,#0x12]
0001d6  f9bd500c          LDRSH    r5,[sp,#0xc]
0001da  443d              ADD      r5,r5,r7
0001dc  1e6a              SUBS     r2,r5,#1
0001de  f9bd100e          LDRSH    r1,[sp,#0xe]
0001e2  f9bd000c          LDRSH    r0,[sp,#0xc]
0001e6  f7fffffe          BL       GUI_InvertRect
                  |L1.490|
;;;227        }
;;;228        WM_SetUserClipRect(NULL);
0001ea  2000              MOVS     r0,#0
0001ec  f7fffffe          BL       WM_SetUserClipRect
;;;229        /* Draw the 3D effect (if configured) */
;;;230        WIDGET__EFFECT_DrawDown(&pObj->Widget);
0001f0  4620              MOV      r0,r4
0001f2  f7fffffe          BL       WIDGET__EFFECT_DrawDown
;;;231      } WM_ITERATE_END();
0001f6  f7fffffe          BL       WM__GetNextIVR
0001fa  2800              CMP      r0,#0
0001fc  d1a6              BNE      |L1.332|
                  |L1.510|
;;;232    }
0001fe  b00d              ADD      sp,sp,#0x34
000200  e8bd8ff0          POP      {r4-r11,pc}
;;;233    
                          ENDP

                  ShowCurrsor PROC
;;;132    
;;;133    void ShowCurrsor(GUI_TIMER_MESSAGE* TimeMsg)
000204  e92d41f0          PUSH     {r4-r8,lr}
;;;134    {
000208  4605              MOV      r5,r0
;;;135    	EDIT_Handle hObj = (EDIT_Handle) TimeMsg->Context;
00020a  6868              LDR      r0,[r5,#4]
00020c  b206              SXTH     r6,r0
;;;136    	EDIT_Obj*   pObj = (EDIT_Obj*) GUI_ALLOC_h2p(hObj);
00020e  4630              MOV      r0,r6
000210  f7fffffe          BL       GUI_ALLOC_h2p
000214  4604              MOV      r4,r0
;;;137    
;;;138        WM_Obj* pWin = WM_H2P(hObj);
000216  4630              MOV      r0,r6
000218  f7fffffe          BL       GUI_ALLOC_h2p
00021c  4607              MOV      r7,r0
;;;139    	GUI_DEBUG_LOG("EDIT: _Callback(WM_PAINT)\n");
;;;140        WM_SelectWindow(hObj);
00021e  4630              MOV      r0,r6
000220  f7fffffe          BL       WM_SelectWindow
;;;141    	_Paint(pObj, hObj);
000224  4631              MOV      r1,r6
000226  4620              MOV      r0,r4
000228  f7fffffe          BL       _Paint
;;;142    	pObj->CurrsorShow++;
00022c  6f20              LDR      r0,[r4,#0x70]
00022e  1c40              ADDS     r0,r0,#1
000230  6720              STR      r0,[r4,#0x70]
;;;143    	GUI_TIMER_Restart(Timer1);
000232  48c4              LDR      r0,|L1.1348|
000234  f9b00000          LDRSH    r0,[r0,#0]  ; Timer1
000238  f7fffffe          BL       GUI_TIMER_Restart
;;;144    
;;;145    }
00023c  e8bd81f0          POP      {r4-r8,pc}
;;;146    ///////
                          ENDP

                  _Delete PROC
;;;237    */
;;;238    static void _Delete(EDIT_Obj* pObj) {
000240  b510              PUSH     {r4,lr}
000242  4604              MOV      r4,r0
;;;239      GUI_ALLOC_FreePtr(&pObj->hpText);
000244  f1040028          ADD      r0,r4,#0x28
000248  f7fffffe          BL       GUI_ALLOC_FreePtr
;;;240    }
00024c  bd10              POP      {r4,pc}
;;;241    
                          ENDP

                  EDIT__SetCursorPos PROC
;;;433    */
;;;434    void EDIT__SetCursorPos(EDIT_Obj* pObj, int CursorPos) {
00024e  e92d41f0          PUSH     {r4-r8,lr}
000252  4604              MOV      r4,r0
000254  460d              MOV      r5,r1
;;;435      if (pObj->hpText) {
000256  8d20              LDRH     r0,[r4,#0x28]
000258  b320              CBZ      r0,|L1.676|
;;;436        char* pText;
;;;437        int NumChars, Offset;
;;;438        pText    = (char*) GUI_ALLOC_h2p(pObj->hpText);
00025a  f9b40028          LDRSH    r0,[r4,#0x28]
00025e  f7fffffe          BL       GUI_ALLOC_h2p
000262  4680              MOV      r8,r0
;;;439        NumChars = GUI__GetNumChars(pText);
000264  4640              MOV      r0,r8
000266  f7fffffe          BL       GUI__GetNumChars
00026a  4606              MOV      r6,r0
;;;440        Offset   = (pObj->EditMode == GUI_EDIT_MODE_INSERT) ? 0 : 1;
00026c  f8940048          LDRB     r0,[r4,#0x48]
000270  b108              CBZ      r0,|L1.630|
000272  2001              MOVS     r0,#1
000274  e000              B        |L1.632|
                  |L1.630|
000276  2000              MOVS     r0,#0
                  |L1.632|
000278  4607              MOV      r7,r0
;;;441        if (CursorPos < 0) {
00027a  2d00              CMP      r5,#0
00027c  da00              BGE      |L1.640|
;;;442          CursorPos = 0;
00027e  2500              MOVS     r5,#0
                  |L1.640|
;;;443        }
;;;444        if (CursorPos > NumChars) {
000280  42b5              CMP      r5,r6
000282  dd00              BLE      |L1.646|
;;;445          CursorPos = NumChars;
000284  4635              MOV      r5,r6
                  |L1.646|
;;;446        }
;;;447        if (CursorPos > (pObj->MaxLen - Offset)) {
000286  f9b4002a          LDRSH    r0,[r4,#0x2a]
00028a  1bc0              SUBS     r0,r0,r7
00028c  42a8              CMP      r0,r5
00028e  da02              BGE      |L1.662|
;;;448          CursorPos = pObj->MaxLen - Offset;
000290  f9b4002a          LDRSH    r0,[r4,#0x2a]
000294  1bc5              SUBS     r5,r0,r7
                  |L1.662|
;;;449        }
;;;450        if (pObj->CursorPos != CursorPos) {
000296  6c20              LDR      r0,[r4,#0x40]
000298  42a8              CMP      r0,r5
00029a  d000              BEQ      |L1.670|
;;;451          pObj->CursorPos = CursorPos;
00029c  6425              STR      r5,[r4,#0x40]
                  |L1.670|
;;;452        }
;;;453        pObj->SelSize = 0;
00029e  2000              MOVS     r0,#0
0002a0  6460              STR      r0,[r4,#0x44]
;;;454      }
0002a2  bf00              NOP      
                  |L1.676|
;;;455    }
0002a4  e8bd81f0          POP      {r4-r8,pc}
;;;456    
                          ENDP

                  EDIT_SetCursorAtPixel PROC
;;;245    */
;;;246    void EDIT_SetCursorAtPixel(EDIT_Handle hObj, int xPos) {
0002a8  e92d4ff3          PUSH     {r0,r1,r4-r11,lr}
0002ac  b083              SUB      sp,sp,#0xc
0002ae  460c              MOV      r4,r1
;;;247      if (hObj) {
0002b0  9803              LDR      r0,[sp,#0xc]
0002b2  2800              CMP      r0,#0
0002b4  d071              BEQ      |L1.922|
;;;248        EDIT_Obj* pObj;
;;;249        WM_LOCK();
0002b6  f7fffffe          BL       GUI_Lock
;;;250        pObj = EDIT_H2P(hObj);
0002ba  9803              LDR      r0,[sp,#0xc]
0002bc  f7fffffe          BL       GUI_ALLOC_h2p
0002c0  4605              MOV      r5,r0
;;;251        if (pObj->hpText) {    
0002c2  8d28              LDRH     r0,[r5,#0x28]
0002c4  2800              CMP      r0,#0
0002c6  d065              BEQ      |L1.916|
;;;252          const GUI_FONT GUI_UNI_PTR *pOldFont;
;;;253          int xSize, TextWidth, NumChars;
;;;254          const char GUI_UNI_PTR * pText;
;;;255          pText = (char*) GUI_ALLOC_h2p(pObj->hpText);
0002c8  f9b50028          LDRSH    r0,[r5,#0x28]
0002cc  f7fffffe          BL       GUI_ALLOC_h2p
0002d0  9001              STR      r0,[sp,#4]
;;;256          pOldFont = GUI_SetFont(pObj->Props.pFont);
0002d2  6de8              LDR      r0,[r5,#0x5c]
0002d4  f7fffffe          BL       GUI_SetFont
0002d8  9002              STR      r0,[sp,#8]
;;;257          xSize = WM_GetWindowSizeX(hObj);
0002da  9803              LDR      r0,[sp,#0xc]
0002dc  f7fffffe          BL       WM_GetWindowSizeX
0002e0  4683              MOV      r11,r0
;;;258          TextWidth = GUI_GetStringDistX(pText);
0002e2  9801              LDR      r0,[sp,#4]
0002e4  f7fffffe          BL       GUI_GetStringDistX
0002e8  4680              MOV      r8,r0
;;;259          switch (pObj->Props.Align & GUI_TA_HORIZONTAL) {
0002ea  6d68              LDR      r0,[r5,#0x54]
0002ec  f0000003          AND      r0,r0,#3
0002f0  2801              CMP      r0,#1
0002f2  d009              BEQ      |L1.776|
0002f4  2802              CMP      r0,#2
0002f6  d10e              BNE      |L1.790|
;;;260          case GUI_TA_HCENTER:
;;;261            xPos -= (xSize - TextWidth + 1) / 2;
0002f8  ebab0108          SUB      r1,r11,r8
0002fc  1c48              ADDS     r0,r1,#1
0002fe  eb0071d0          ADD      r1,r0,r0,LSR #31
000302  eba40461          SUB      r4,r4,r1,ASR #1
;;;262            break;
000306  e00d              B        |L1.804|
                  |L1.776|
;;;263          case GUI_TA_RIGHT:
;;;264            xPos -= xSize - TextWidth - (pObj->Props.Border + EDIT_XOFF);
000308  ebab0108          SUB      r1,r11,r8
00030c  6da8              LDR      r0,[r5,#0x58]
00030e  1c40              ADDS     r0,r0,#1
000310  1a08              SUBS     r0,r1,r0
000312  1a24              SUBS     r4,r4,r0
;;;265            break;
000314  e006              B        |L1.804|
                  |L1.790|
;;;266          default:
;;;267            xPos -= (pObj->Props.Border + EDIT_XOFF) + pObj->Widget.pEffect->EffectSize;
000316  6da8              LDR      r0,[r5,#0x58]
000318  1c40              ADDS     r0,r0,#1
00031a  6a29              LDR      r1,[r5,#0x20]
00031c  6949              LDR      r1,[r1,#0x14]
00031e  4408              ADD      r0,r0,r1
000320  1a24              SUBS     r4,r4,r0
000322  bf00              NOP                            ;259
                  |L1.804|
000324  bf00              NOP                            ;262
;;;268          }
;;;269          NumChars = GUI__GetNumChars(pText);
000326  9801              LDR      r0,[sp,#4]
000328  f7fffffe          BL       GUI__GetNumChars
00032c  4606              MOV      r6,r0
;;;270          if (xPos < 0) {
00032e  2c00              CMP      r4,#0
000330  da04              BGE      |L1.828|
;;;271            EDIT__SetCursorPos(pObj, 0);
000332  2100              MOVS     r1,#0
000334  4628              MOV      r0,r5
000336  f7fffffe          BL       EDIT__SetCursorPos
00033a  e024              B        |L1.902|
                  |L1.828|
;;;272          } else if (xPos > TextWidth) {
00033c  4544              CMP      r4,r8
00033e  dd04              BLE      |L1.842|
;;;273            EDIT__SetCursorPos(pObj, NumChars);
000340  4631              MOV      r1,r6
000342  4628              MOV      r0,r5
000344  f7fffffe          BL       EDIT__SetCursorPos
000348  e01d              B        |L1.902|
                  |L1.842|
;;;274          } else {
;;;275            int i, x, xLenChar;
;;;276            U16 Char;
;;;277            for (i = 0, x = 0; (i < NumChars) && (x < xPos); i++) {
00034a  f04f0900          MOV      r9,#0
00034e  46ca              MOV      r10,r9
000350  e00f              B        |L1.882|
                  |L1.850|
;;;278              Char     = GUI_UC__GetCharCodeInc(&pText);
000352  a801              ADD      r0,sp,#4
000354  f7fffffe          BL       GUI_UC__GetCharCodeInc
000358  9000              STR      r0,[sp,#0]
;;;279              xLenChar = GUI_GetCharDistX(Char);
00035a  9800              LDR      r0,[sp,#0]
00035c  f7fffffe          BL       GUI_GetCharDistX
000360  4607              MOV      r7,r0
;;;280              if (xPos < (x + xLenChar))
000362  eb0a0007          ADD      r0,r10,r7
000366  42a0              CMP      r0,r4
000368  dd00              BLE      |L1.876|
;;;281                break;
00036a  e006              B        |L1.890|
                  |L1.876|
;;;282              x += xLenChar;
00036c  44ba              ADD      r10,r10,r7
00036e  f1090901          ADD      r9,r9,#1              ;277
                  |L1.882|
000372  45b1              CMP      r9,r6                 ;277
000374  da01              BGE      |L1.890|
000376  45a2              CMP      r10,r4                ;277
000378  dbeb              BLT      |L1.850|
                  |L1.890|
00037a  bf00              NOP                            ;281
;;;283            }
;;;284            EDIT__SetCursorPos(pObj, i);
00037c  4649              MOV      r1,r9
00037e  4628              MOV      r0,r5
000380  f7fffffe          BL       EDIT__SetCursorPos
;;;285          }
000384  bf00              NOP      
                  |L1.902|
;;;286          GUI_SetFont(pOldFont);
000386  9802              LDR      r0,[sp,#8]
000388  f7fffffe          BL       GUI_SetFont
;;;287          EDIT_Invalidate(hObj);
00038c  9803              LDR      r0,[sp,#0xc]
00038e  f7fffffe          BL       WM_InvalidateWindow
;;;288        }
000392  bf00              NOP      
                  |L1.916|
;;;289        WM_UNLOCK();
000394  f7fffffe          BL       GUI_Unlock
;;;290      }
000398  bf00              NOP      
                  |L1.922|
;;;291    }
00039a  b005              ADD      sp,sp,#0x14
00039c  e8bd8ff0          POP      {r4-r11,pc}
;;;292    
                          ENDP

                  _IncrementBuffer PROC
;;;298    */
;;;299    static int _IncrementBuffer(EDIT_Obj* pObj, unsigned AddBytes) {
0003a0  e92d41f0          PUSH     {r4-r8,lr}
0003a4  4604              MOV      r4,r0
0003a6  460e              MOV      r6,r1
;;;300      WM_HMEM hNew;
;;;301      int NewSize;
;;;302      NewSize = pObj->BufferSize + AddBytes;
0003a8  8da0              LDRH     r0,[r4,#0x2c]
0003aa  1987              ADDS     r7,r0,r6
;;;303      hNew    = GUI_ALLOC_Realloc(pObj->hpText, NewSize);
0003ac  f9b40028          LDRSH    r0,[r4,#0x28]
0003b0  4639              MOV      r1,r7
0003b2  f7fffffe          BL       GUI_ALLOC_Realloc
0003b6  4605              MOV      r5,r0
;;;304      if (hNew) {
0003b8  b175              CBZ      r5,|L1.984|
;;;305        if (!(pObj->hpText)) {
0003ba  8d20              LDRH     r0,[r4,#0x28]
0003bc  b938              CBNZ     r0,|L1.974|
;;;306          char* pText;
;;;307          pText  = (char*) GUI_ALLOC_h2p(hNew);
0003be  4628              MOV      r0,r5
0003c0  f7fffffe          BL       GUI_ALLOC_h2p
0003c4  4680              MOV      r8,r0
;;;308          *pText = 0;
0003c6  2000              MOVS     r0,#0
0003c8  f8880000          STRB     r0,[r8,#0]
;;;309        }
0003cc  bf00              NOP      
                  |L1.974|
;;;310        pObj->BufferSize = NewSize;
0003ce  85a7              STRH     r7,[r4,#0x2c]
;;;311        pObj->hpText     = hNew;
0003d0  8525              STRH     r5,[r4,#0x28]
;;;312        return 1;
0003d2  2001              MOVS     r0,#1
                  |L1.980|
;;;313      }
;;;314      return 0;
;;;315    }
0003d4  e8bd81f0          POP      {r4-r8,pc}
                  |L1.984|
0003d8  2000              MOVS     r0,#0                 ;314
0003da  e7fb              B        |L1.980|
;;;316    
                          ENDP

                  _IsSpaceInBuffer PROC
;;;327    */
;;;328    static int _IsSpaceInBuffer(EDIT_Obj* pObj, int BytesNeeded) {
0003dc  e92d41f0          PUSH     {r4-r8,lr}
0003e0  4604              MOV      r4,r0
0003e2  460d              MOV      r5,r1
;;;329      int NumBytes = 0;
0003e4  2600              MOVS     r6,#0
;;;330      if (pObj->hpText) {
0003e6  8d20              LDRH     r0,[r4,#0x28]
0003e8  b138              CBZ      r0,|L1.1018|
;;;331        NumBytes = strlen((char*)GUI_ALLOC_h2p(pObj->hpText));
0003ea  f9b40028          LDRSH    r0,[r4,#0x28]
0003ee  f7fffffe          BL       GUI_ALLOC_h2p
0003f2  4607              MOV      r7,r0
0003f4  f7fffffe          BL       strlen
0003f8  4606              MOV      r6,r0
                  |L1.1018|
;;;332      }
;;;333      BytesNeeded = (BytesNeeded + NumBytes + 1) - pObj->BufferSize;
0003fa  19a8              ADDS     r0,r5,r6
0003fc  1c40              ADDS     r0,r0,#1
0003fe  8da1              LDRH     r1,[r4,#0x2c]
000400  1a45              SUBS     r5,r0,r1
;;;334      if (BytesNeeded > 0) {
000402  2d00              CMP      r5,#0
000404  dd08              BLE      |L1.1048|
;;;335        if (!_IncrementBuffer(pObj, BytesNeeded + EDIT_REALLOC_SIZE)) {
000406  f1050110          ADD      r1,r5,#0x10
00040a  4620              MOV      r0,r4
00040c  f7fffffe          BL       _IncrementBuffer
000410  b910              CBNZ     r0,|L1.1048|
;;;336          return 0;
000412  2000              MOVS     r0,#0
                  |L1.1044|
;;;337        }
;;;338      }
;;;339      return 1;
;;;340    }
000414  e8bd81f0          POP      {r4-r8,pc}
                  |L1.1048|
000418  2001              MOVS     r0,#1                 ;339
00041a  e7fb              B        |L1.1044|
;;;341    
                          ENDP

                  _IsCharsAvailable PROC
;;;351    */
;;;352    static int _IsCharsAvailable(EDIT_Obj* pObj, int CharsNeeded) {
00041c  e92d41f0          PUSH     {r4-r8,lr}
000420  4604              MOV      r4,r0
000422  460d              MOV      r5,r1
;;;353      if ((CharsNeeded > 0) && (pObj->MaxLen > 0)) {
000424  2d00              CMP      r5,#0
000426  dd17              BLE      |L1.1112|
000428  f9b4002a          LDRSH    r0,[r4,#0x2a]
00042c  2800              CMP      r0,#0
00042e  dd13              BLE      |L1.1112|
;;;354        int NumChars = 0;
000430  2600              MOVS     r6,#0
;;;355        if (pObj->hpText) {
000432  8d20              LDRH     r0,[r4,#0x28]
000434  b138              CBZ      r0,|L1.1094|
;;;356          NumChars = GUI__GetNumChars((char*)GUI_ALLOC_h2p(pObj->hpText));
000436  f9b40028          LDRSH    r0,[r4,#0x28]
00043a  f7fffffe          BL       GUI_ALLOC_h2p
00043e  4607              MOV      r7,r0
000440  f7fffffe          BL       GUI__GetNumChars
000444  4606              MOV      r6,r0
                  |L1.1094|
;;;357        }
;;;358        if ((CharsNeeded + NumChars) > pObj->MaxLen) {
000446  19a8              ADDS     r0,r5,r6
000448  f9b4102a          LDRSH    r1,[r4,#0x2a]
00044c  4288              CMP      r0,r1
00044e  dd02              BLE      |L1.1110|
;;;359          return 0;
000450  2000              MOVS     r0,#0
                  |L1.1106|
;;;360        }
;;;361      }
;;;362      return 1;
;;;363    }
000452  e8bd81f0          POP      {r4-r8,pc}
                  |L1.1110|
000456  bf00              NOP                            ;361
                  |L1.1112|
000458  2001              MOVS     r0,#1                 ;362
00045a  e7fa              B        |L1.1106|
;;;364    
                          ENDP

                  _DeleteChar PROC
;;;371    */
;;;372    static void _DeleteChar(EDIT_Handle hObj, EDIT_Obj* pObj) {
00045c  e92d41f0          PUSH     {r4-r8,lr}
000460  4607              MOV      r7,r0
000462  460c              MOV      r4,r1
;;;373      if (pObj->hpText) {
000464  8d20              LDRH     r0,[r4,#0x28]
000466  b1f0              CBZ      r0,|L1.1190|
;;;374        unsigned CursorOffset;
;;;375        char* pText;
;;;376        pText = (char*) GUI_ALLOC_h2p(pObj->hpText);
000468  f9b40028          LDRSH    r0,[r4,#0x28]
00046c  f7fffffe          BL       GUI_ALLOC_h2p
000470  4605              MOV      r5,r0
;;;377        CursorOffset = GUI_UC__NumChars2NumBytes(pText, pObj->CursorPos);
000472  4628              MOV      r0,r5
000474  6c21              LDR      r1,[r4,#0x40]
000476  f7fffffe          BL       GUI_UC__NumChars2NumBytes
00047a  4606              MOV      r6,r0
;;;378        if (CursorOffset < strlen(pText)) {
00047c  4628              MOV      r0,r5
00047e  f7fffffe          BL       strlen
000482  42b0              CMP      r0,r6
000484  d90e              BLS      |L1.1188|
;;;379          int NumBytes;
;;;380          pText += CursorOffset;
000486  4435              ADD      r5,r5,r6
;;;381          NumBytes = GUI_UC_GetCharSize(pText);
000488  4628              MOV      r0,r5
00048a  f7fffffe          BL       GUI_UC_GetCharSize
00048e  4680              MOV      r8,r0
;;;382          strcpy(pText, pText + NumBytes);
000490  eb050108          ADD      r1,r5,r8
000494  4628              MOV      r0,r5
000496  f7fffffe          BL       strcpy
;;;383          WM_NotifyParent(hObj, WM_NOTIFICATION_VALUE_CHANGED);
00049a  2105              MOVS     r1,#5
00049c  4638              MOV      r0,r7
00049e  f7fffffe          BL       WM_NotifyParent
;;;384        }
0004a2  bf00              NOP      
                  |L1.1188|
;;;385      }
0004a4  bf00              NOP      
                  |L1.1190|
;;;386    }
0004a6  e8bd81f0          POP      {r4-r8,pc}
;;;387    
                          ENDP

                  _InsertChar PROC
;;;393    */
;;;394    static int _InsertChar(EDIT_Handle hObj, EDIT_Obj* pObj, U16 Char) {
0004aa  e92d47f0          PUSH     {r4-r10,lr}
0004ae  4680              MOV      r8,r0
0004b0  460c              MOV      r4,r1
0004b2  4616              MOV      r6,r2
;;;395      if (_IsCharsAvailable(pObj, 1)) {
0004b4  2101              MOVS     r1,#1
0004b6  4620              MOV      r0,r4
0004b8  f7fffffe          BL       _IsCharsAvailable
0004bc  b348              CBZ      r0,|L1.1298|
;;;396        int BytesNeeded;
;;;397        BytesNeeded = GUI_UC__CalcSizeOfChar(Char);
0004be  4630              MOV      r0,r6
0004c0  f7fffffe          BL       GUI_UC__CalcSizeOfChar
0004c4  4607              MOV      r7,r0
;;;398        if (_IsSpaceInBuffer(pObj, BytesNeeded)) {
0004c6  4639              MOV      r1,r7
0004c8  4620              MOV      r0,r4
0004ca  f7fffffe          BL       _IsSpaceInBuffer
0004ce  b1f8              CBZ      r0,|L1.1296|
;;;399          int CursorOffset;
;;;400          char* pText;
;;;401          pText = (char*) GUI_ALLOC_h2p(pObj->hpText);
0004d0  f9b40028          LDRSH    r0,[r4,#0x28]
0004d4  f7fffffe          BL       GUI_ALLOC_h2p
0004d8  4605              MOV      r5,r0
;;;402          CursorOffset = GUI_UC__NumChars2NumBytes(pText, pObj->CursorPos);
0004da  4628              MOV      r0,r5
0004dc  6c21              LDR      r1,[r4,#0x40]
0004de  f7fffffe          BL       GUI_UC__NumChars2NumBytes
0004e2  4681              MOV      r9,r0
;;;403          pText += CursorOffset;
0004e4  444d              ADD      r5,r5,r9
;;;404          memmove(pText + BytesNeeded, pText, strlen(pText) + 1);
0004e6  4628              MOV      r0,r5
0004e8  f7fffffe          BL       strlen
0004ec  f1000a01          ADD      r10,r0,#1
0004f0  19e8              ADDS     r0,r5,r7
0004f2  4652              MOV      r2,r10
0004f4  4629              MOV      r1,r5
0004f6  f7fffffe          BL       __aeabi_memmove
;;;405          GUI_UC_Encode(pText, Char);
0004fa  4631              MOV      r1,r6
0004fc  4628              MOV      r0,r5
0004fe  f7fffffe          BL       GUI_UC_Encode
;;;406          WM_NotifyParent(hObj, WM_NOTIFICATION_VALUE_CHANGED);
000502  2105              MOVS     r1,#5
000504  4640              MOV      r0,r8
000506  f7fffffe          BL       WM_NotifyParent
;;;407          return 1;
00050a  2001              MOVS     r0,#1
                  |L1.1292|
;;;408        }
;;;409      }
;;;410      return 0;
;;;411    }
00050c  e8bd87f0          POP      {r4-r10,pc}
                  |L1.1296|
000510  bf00              NOP                            ;409
                  |L1.1298|
000512  2000              MOVS     r0,#0                 ;410
000514  e7fa              B        |L1.1292|
;;;412    
                          ENDP

                  EDIT__GetCurrentChar PROC
;;;416    */
;;;417    U16 EDIT__GetCurrentChar(EDIT_Obj* pObj) {
000516  b570              PUSH     {r4-r6,lr}
000518  4604              MOV      r4,r0
;;;418      U16 Char = 0;
00051a  2600              MOVS     r6,#0
;;;419      if (pObj->hpText) {
00051c  8d20              LDRH     r0,[r4,#0x28]
00051e  b170              CBZ      r0,|L1.1342|
;;;420        const char* pText;
;;;421        pText  = (const char*) GUI_ALLOC_h2p(pObj->hpText);
000520  f9b40028          LDRSH    r0,[r4,#0x28]
000524  f7fffffe          BL       GUI_ALLOC_h2p
000528  4605              MOV      r5,r0
;;;422        pText += GUI_UC__NumChars2NumBytes(pText, pObj->CursorPos);
00052a  4628              MOV      r0,r5
00052c  6c21              LDR      r1,[r4,#0x40]
00052e  f7fffffe          BL       GUI_UC__NumChars2NumBytes
000532  4405              ADD      r5,r5,r0
;;;423        Char   = GUI_UC_GetCharCode(pText);
000534  4628              MOV      r0,r5
000536  f7fffffe          BL       GUI_UC_GetCharCode
00053a  4606              MOV      r6,r0
;;;424      }
00053c  bf00              NOP      
                  |L1.1342|
;;;425      return Char;
00053e  4630              MOV      r0,r6
;;;426    }
000540  bd70              POP      {r4-r6,pc}
000542  0000              DCW      0x0000
                  |L1.1348|
                          DCD      Timer1
                  |L1.1352|
                          DCD      ShowCurrsor
                          ENDP

                  _OnTouch PROC
;;;460    */
;;;461    static void _OnTouch(EDIT_Handle hObj, EDIT_Obj* pObj, WM_MESSAGE*pMsg) {
00054c  e92d41f0          PUSH     {r4-r8,lr}
000550  4607              MOV      r7,r0
000552  460c              MOV      r4,r1
000554  4615              MOV      r5,r2
;;;462      const GUI_PID_STATE* pState = (const GUI_PID_STATE*)pMsg->Data.p;
000556  68ae              LDR      r6,[r5,#8]
;;;463      GUI_USE_PARA(pObj);
000558  bf00              NOP      
;;;464      if (pMsg->Data.p) {  /* Something happened in our area (pressed or released) */
00055a  68a8              LDR      r0,[r5,#8]
00055c  b140              CBZ      r0,|L1.1392|
;;;465    	  static int StartPress = 0;	//houhh 20061023...
;;;466        if (pState->Pressed) {
00055e  7a30              LDRB     r0,[r6,#8]
000560  b130              CBZ      r0,|L1.1392|
;;;467          GUI_DEBUG_LOG1("EDIT__Callback(WM_TOUCH, Pressed, Handle %d)\n",1);
;;;468          EDIT_SetCursorAtPixel(hObj, pState->x);
000562  4638              MOV      r0,r7
000564  6831              LDR      r1,[r6,#0]
000566  f7fffffe          BL       EDIT_SetCursorAtPixel
;;;469    	  StartPress = pObj->CursorPos;	//houhh 20061023...
00056a  49fa              LDR      r1,|L1.2388|
00056c  6c20              LDR      r0,[r4,#0x40]
00056e  6008              STR      r0,[r1,#0]  ; StartPress
                  |L1.1392|
;;;470        } else {
;;;471          GUI_DEBUG_LOG1("EDIT__Callback(WM_TOUCH, Released, Handle %d)\n",1);
;;;472        }
;;;473      } else {
;;;474        GUI_DEBUG_LOG1("_EDIT_Callback(WM_TOUCH, Moved out, Handle %d)\n",1);
;;;475      }
;;;476    }
000570  e8bd81f0          POP      {r4-r8,pc}
;;;477    
                          ENDP

                  EDIT_AddKey PROC
;;;572    */
;;;573    void EDIT_AddKey(EDIT_Handle hObj, int Key) {
000574  e92d41f0          PUSH     {r4-r8,lr}
000578  4607              MOV      r7,r0
00057a  460d              MOV      r5,r1
;;;574      if (hObj) {
00057c  2f00              CMP      r7,#0
00057e  d071              BEQ      |L1.1636|
;;;575        EDIT_Obj* pObj;
;;;576        WM_LOCK();
000580  f7fffffe          BL       GUI_Lock
;;;577        pObj = EDIT_H2P(hObj);
000584  4638              MOV      r0,r7
000586  f7fffffe          BL       GUI_ALLOC_h2p
00058a  4604              MOV      r4,r0
;;;578        if (pObj) {
00058c  2c00              CMP      r4,#0
00058e  d06a              BEQ      |L1.1638|
;;;579          if (pObj->pfAddKeyEx) {
000590  6ce0              LDR      r0,[r4,#0x4c]
000592  b120              CBZ      r0,|L1.1438|
;;;580            pObj->pfAddKeyEx(hObj, Key);
000594  4629              MOV      r1,r5
000596  4638              MOV      r0,r7
000598  6ce2              LDR      r2,[r4,#0x4c]
00059a  4790              BLX      r2
00059c  e094              B        |L1.1736|
                  |L1.1438|
;;;581          } else {
;;;582            switch (Key) {
00059e  2d12              CMP      r5,#0x12
0005a0  d04a              BEQ      |L1.1592|
0005a2  dc08              BGT      |L1.1462|
0005a4  2d08              CMP      r5,#8
0005a6  d053              BEQ      |L1.1616|
0005a8  2d0d              CMP      r5,#0xd
0005aa  d075              BEQ      |L1.1688|
0005ac  2d10              CMP      r5,#0x10
0005ae  d049              BEQ      |L1.1604|
0005b0  2d11              CMP      r5,#0x11
0005b2  d173              BNE      |L1.1692|
0005b4  e008              B        |L1.1480|
                  |L1.1462|
0005b6  2d13              CMP      r5,#0x13
0005b8  d022              BEQ      |L1.1536|
0005ba  2d1b              CMP      r5,#0x1b
0005bc  d06d              BEQ      |L1.1690|
0005be  2d1d              CMP      r5,#0x1d
0005c0  d057              BEQ      |L1.1650|
0005c2  2d1e              CMP      r5,#0x1e
0005c4  d16a              BNE      |L1.1692|
0005c6  e04f              B        |L1.1640|
                  |L1.1480|
;;;583            case GUI_KEY_UP:
;;;584              if (pObj->hpText) {
0005c8  8d20              LDRH     r0,[r4,#0x28]
0005ca  b1c0              CBZ      r0,|L1.1534|
;;;585                char* pText;
;;;586                U16 Char;
;;;587                pText  = (char*) GUI_ALLOC_h2p(pObj->hpText);
0005cc  f9b40028          LDRSH    r0,[r4,#0x28]
0005d0  f7fffffe          BL       GUI_ALLOC_h2p
0005d4  4606              MOV      r6,r0
;;;588                pText += GUI_UC__NumChars2NumBytes(pText, pObj->CursorPos);
0005d6  4630              MOV      r0,r6
0005d8  6c21              LDR      r1,[r4,#0x40]
0005da  f7fffffe          BL       GUI_UC__NumChars2NumBytes
0005de  4406              ADD      r6,r6,r0
;;;589                Char   = GUI_UC_GetCharCode(pText);
0005e0  4630              MOV      r0,r6
0005e2  f7fffffe          BL       GUI_UC_GetCharCode
0005e6  4680              MOV      r8,r0
;;;590                if (Char < 0x7f) {  
0005e8  f1b80f7f          CMP      r8,#0x7f
0005ec  da06              BGE      |L1.1532|
;;;591                  *pText = Char + 1;
0005ee  f1080001          ADD      r0,r8,#1
0005f2  7030              STRB     r0,[r6,#0]
;;;592                  WM_NotifyParent(hObj, WM_NOTIFICATION_VALUE_CHANGED);
0005f4  2105              MOVS     r1,#5
0005f6  4638              MOV      r0,r7
0005f8  f7fffffe          BL       WM_NotifyParent
                  |L1.1532|
;;;593                }
;;;594              }
0005fc  bf00              NOP      
                  |L1.1534|
;;;595              break;
0005fe  e062              B        |L1.1734|
                  |L1.1536|
;;;596            case GUI_KEY_DOWN:
;;;597              if (pObj->hpText) {
000600  8d20              LDRH     r0,[r4,#0x28]
000602  b1c0              CBZ      r0,|L1.1590|
;;;598                char* pText;
;;;599                U16 Char;
;;;600                pText  = (char*) GUI_ALLOC_h2p(pObj->hpText);
000604  f9b40028          LDRSH    r0,[r4,#0x28]
000608  f7fffffe          BL       GUI_ALLOC_h2p
00060c  4606              MOV      r6,r0
;;;601                pText += GUI_UC__NumChars2NumBytes(pText, pObj->CursorPos);
00060e  4630              MOV      r0,r6
000610  6c21              LDR      r1,[r4,#0x40]
000612  f7fffffe          BL       GUI_UC__NumChars2NumBytes
000616  4406              ADD      r6,r6,r0
;;;602                Char   = GUI_UC_GetCharCode(pText);
000618  4630              MOV      r0,r6
00061a  f7fffffe          BL       GUI_UC_GetCharCode
00061e  4680              MOV      r8,r0
;;;603                if (Char > 0x20) {  
000620  f1b80f20          CMP      r8,#0x20
000624  dd06              BLE      |L1.1588|
;;;604                  *pText = Char - 1;
000626  f1a80001          SUB      r0,r8,#1
00062a  7030              STRB     r0,[r6,#0]
;;;605                  WM_NotifyParent(hObj, WM_NOTIFICATION_VALUE_CHANGED);
00062c  2105              MOVS     r1,#5
00062e  4638              MOV      r0,r7
000630  f7fffffe          BL       WM_NotifyParent
                  |L1.1588|
;;;606                }
;;;607              }
000634  bf00              NOP      
                  |L1.1590|
;;;608              break;
000636  e046              B        |L1.1734|
                  |L1.1592|
;;;609            case GUI_KEY_RIGHT:
;;;610              EDIT__SetCursorPos(pObj, pObj->CursorPos + 1);
000638  6c20              LDR      r0,[r4,#0x40]
00063a  1c41              ADDS     r1,r0,#1
00063c  4620              MOV      r0,r4
00063e  f7fffffe          BL       EDIT__SetCursorPos
;;;611              break;
000642  e040              B        |L1.1734|
                  |L1.1604|
;;;612            case GUI_KEY_LEFT:
;;;613              EDIT__SetCursorPos(pObj, pObj->CursorPos - 1);
000644  6c20              LDR      r0,[r4,#0x40]
000646  1e41              SUBS     r1,r0,#1
000648  4620              MOV      r0,r4
00064a  f7fffffe          BL       EDIT__SetCursorPos
;;;614              break;
00064e  e03a              B        |L1.1734|
                  |L1.1616|
;;;615            case GUI_KEY_BACKSPACE:
;;;616              EDIT__SetCursorPos(pObj, pObj->CursorPos - 1);
000650  6c20              LDR      r0,[r4,#0x40]
000652  1e41              SUBS     r1,r0,#1
000654  4620              MOV      r0,r4
000656  f7fffffe          BL       EDIT__SetCursorPos
;;;617              _DeleteChar(hObj, pObj);
00065a  4621              MOV      r1,r4
00065c  4638              MOV      r0,r7
00065e  f7fffffe          BL       _DeleteChar
;;;618              break;
000662  e030              B        |L1.1734|
                  |L1.1636|
000664  e036              B        |L1.1748|
                  |L1.1638|
000666  e032              B        |L1.1742|
                  |L1.1640|
;;;619            case GUI_KEY_DELETE:
;;;620              _DeleteChar(hObj, pObj);
000668  4621              MOV      r1,r4
00066a  4638              MOV      r0,r7
00066c  f7fffffe          BL       _DeleteChar
;;;621              break;
000670  e029              B        |L1.1734|
                  |L1.1650|
;;;622            case GUI_KEY_INSERT:
;;;623              if (pObj->EditMode == GUI_EDIT_MODE_OVERWRITE) {
000672  f8940048          LDRB     r0,[r4,#0x48]
000676  2801              CMP      r0,#1
000678  d103              BNE      |L1.1666|
;;;624                pObj->EditMode = GUI_EDIT_MODE_INSERT;
00067a  2000              MOVS     r0,#0
00067c  f8840048          STRB     r0,[r4,#0x48]
000680  e006              B        |L1.1680|
                  |L1.1666|
;;;625              } else {
;;;626                pObj->EditMode = GUI_EDIT_MODE_OVERWRITE;
000682  2001              MOVS     r0,#1
000684  f8840048          STRB     r0,[r4,#0x48]
;;;627                EDIT__SetCursorPos(pObj, pObj->CursorPos);
000688  4620              MOV      r0,r4
00068a  6c21              LDR      r1,[r4,#0x40]
00068c  f7fffffe          BL       EDIT__SetCursorPos
                  |L1.1680|
;;;628              }
;;;629              break;
000690  e019              B        |L1.1734|
000692  e001              B        |L1.1688|
000694  e002              B        |L1.1692|
000696  e000              B        |L1.1690|
                  |L1.1688|
;;;630            case GUI_KEY_ENTER:
;;;631            case GUI_KEY_ESCAPE:
000698  bf00              NOP      
                  |L1.1690|
;;;632              break;
00069a  e014              B        |L1.1734|
                  |L1.1692|
;;;633            default:
;;;634              if (Key >= 0x20) {
00069c  2d20              CMP      r5,#0x20
00069e  db11              BLT      |L1.1732|
;;;635                if (pObj->EditMode != GUI_EDIT_MODE_INSERT) {
0006a0  f8940048          LDRB     r0,[r4,#0x48]
0006a4  b118              CBZ      r0,|L1.1710|
;;;636                  _DeleteChar(hObj, pObj);
0006a6  4621              MOV      r1,r4
0006a8  4638              MOV      r0,r7
0006aa  f7fffffe          BL       _DeleteChar
                  |L1.1710|
;;;637                }
;;;638                if (_InsertChar(hObj, pObj, Key)) {
0006ae  b2aa              UXTH     r2,r5
0006b0  4621              MOV      r1,r4
0006b2  4638              MOV      r0,r7
0006b4  f7fffffe          BL       _InsertChar
0006b8  b120              CBZ      r0,|L1.1732|
;;;639                  EDIT__SetCursorPos(pObj, pObj->CursorPos + 1);
0006ba  6c20              LDR      r0,[r4,#0x40]
0006bc  1c41              ADDS     r1,r0,#1
0006be  4620              MOV      r0,r4
0006c0  f7fffffe          BL       EDIT__SetCursorPos
                  |L1.1732|
0006c4  bf00              NOP                            ;582
                  |L1.1734|
0006c6  bf00              NOP                            ;595
                  |L1.1736|
;;;640                }
;;;641              }
;;;642            }
;;;643          }
;;;644          EDIT_Invalidate(hObj);
0006c8  4638              MOV      r0,r7
0006ca  f7fffffe          BL       WM_InvalidateWindow
                  |L1.1742|
;;;645        }
;;;646        WM_UNLOCK();
0006ce  f7fffffe          BL       GUI_Unlock
;;;647      }
0006d2  bf00              NOP      
                  |L1.1748|
;;;648    }
0006d4  e8bd81f0          POP      {r4-r8,pc}
;;;649    
                          ENDP

                  EDIT__Callback PROC
;;;481    */
;;;482    static void EDIT__Callback (WM_MESSAGE * pMsg) {
0006d8  e92d41f0          PUSH     {r4-r8,lr}
0006dc  4604              MOV      r4,r0
;;;483      int IsEnabled;
;;;484      EDIT_Handle hObj = (EDIT_Handle) pMsg->hWin;
0006de  f9b45004          LDRSH    r5,[r4,#4]
;;;485      EDIT_Obj*   pObj = (EDIT_Obj*) GUI_ALLOC_h2p(hObj);
0006e2  4628              MOV      r0,r5
0006e4  f7fffffe          BL       GUI_ALLOC_h2p
0006e8  4680              MOV      r8,r0
;;;486      IsEnabled = WM__IsEnabled(hObj);
0006ea  4628              MOV      r0,r5
0006ec  f7fffffe          BL       WM__IsEnabled
0006f0  4607              MOV      r7,r0
;;;487      /* Let widget handle the standard messages */
;;;488      if (WIDGET_HandleActive(hObj, pMsg) == 0) {
0006f2  4621              MOV      r1,r4
0006f4  4628              MOV      r0,r5
0006f6  f7fffffe          BL       WIDGET_HandleActive
0006fa  b908              CBNZ     r0,|L1.1792|
                  |L1.1788|
;;;489        return;
;;;490      }
;;;491      switch (pMsg->MsgId) {
;;;492      case WM_TOUCH:
;;;493        _OnTouch(hObj, pObj, pMsg);
;;;494        break;
;;;495      case WM_PAINT:
;;;496        GUI_DEBUG_LOG("EDIT: _Callback(WM_PAINT)\n");
;;;497        _Paint(pObj, hObj);
;;;498        return;
;;;499      case WM_DELETE:
;;;500        GUI_DEBUG_LOG("EDIT: _Callback(WM_DELETE)\n");
;;;501        _Delete(pObj);
;;;502        break;       /* No return here ... WM_DefaultProc needs to be called */
;;;503      case WM_KEY:
;;;504        if (IsEnabled) {
;;;505          if ( ((const WM_KEY_INFO*)(pMsg->Data.p))->PressedCnt >0) {
;;;506            int Key = ((const WM_KEY_INFO*)(pMsg->Data.p))->Key;
;;;507            switch (Key) {
;;;508              case GUI_KEY_TAB:
;;;509                break;                    /* Send to parent by not doing anything */
;;;510              default:
;;;511                EDIT_AddKey(hObj, Key);
;;;512                return;
;;;513            }
;;;514          }
;;;515        }
;;;516        break;
;;;517      }
;;;518      WM_DefaultProc(pMsg);
;;;519    }
0006fc  e8bd81f0          POP      {r4-r8,pc}
                  |L1.1792|
000700  6820              LDR      r0,[r4,#0]            ;491
000702  280b              CMP      r0,#0xb               ;491
000704  d011              BEQ      |L1.1834|
000706  280c              CMP      r0,#0xc               ;491
000708  d004              BEQ      |L1.1812|
00070a  280e              CMP      r0,#0xe               ;491
00070c  d011              BEQ      |L1.1842|
00070e  280f              CMP      r0,#0xf               ;491
000710  d121              BNE      |L1.1878|
000712  e005              B        |L1.1824|
                  |L1.1812|
000714  4622              MOV      r2,r4                 ;493
000716  4641              MOV      r1,r8                 ;493
000718  4628              MOV      r0,r5                 ;493
00071a  f7fffffe          BL       _OnTouch
00071e  e01a              B        |L1.1878|
                  |L1.1824|
000720  4629              MOV      r1,r5                 ;497
000722  4640              MOV      r0,r8                 ;497
000724  f7fffffe          BL       _Paint
000728  e7e8              B        |L1.1788|
                  |L1.1834|
00072a  4640              MOV      r0,r8                 ;501
00072c  f7fffffe          BL       _Delete
000730  e011              B        |L1.1878|
                  |L1.1842|
000732  b17f              CBZ      r7,|L1.1876|
000734  68a0              LDR      r0,[r4,#8]            ;505
000736  6840              LDR      r0,[r0,#4]            ;505
000738  2800              CMP      r0,#0                 ;505
00073a  dd0b              BLE      |L1.1876|
00073c  68a0              LDR      r0,[r4,#8]            ;506
00073e  6806              LDR      r6,[r0,#0]            ;506
000740  2e09              CMP      r6,#9                 ;507
000742  d100              BNE      |L1.1862|
000744  e004              B        |L1.1872|
                  |L1.1862|
000746  4631              MOV      r1,r6                 ;511
000748  4628              MOV      r0,r5                 ;511
00074a  f7fffffe          BL       EDIT_AddKey
00074e  e7d5              B        |L1.1788|
                  |L1.1872|
000750  bf00              NOP                            ;509
000752  bf00              NOP                            ;514
                  |L1.1876|
000754  bf00              NOP                            ;516
                  |L1.1878|
000756  bf00              NOP                            ;494
000758  4620              MOV      r0,r4                 ;518
00075a  f7fffffe          BL       WM_DefaultProc
00075e  bf00              NOP      
000760  e7cc              B        |L1.1788|
;;;520    
                          ENDP

                  EDIT_CreateEx PROC
;;;530    */
;;;531    EDIT_Handle EDIT_CreateEx(int x0, int y0, int xsize, int ysize, WM_HWIN hParent, int WinFlags, int ExFlags,
000762  e92d4fff          PUSH     {r0-r11,lr}
;;;532                              int Id, int MaxLen)
;;;533    {
000766  b085              SUB      sp,sp,#0x14
000768  4607              MOV      r7,r0
00076a  4688              MOV      r8,r1
00076c  4691              MOV      r9,r2
00076e  f8ddb058          LDR      r11,[sp,#0x58]
000772  e9dd5a13          LDRD     r5,r10,[sp,#0x4c]
;;;534      EDIT_Handle hObj;
;;;535      GUI_USE_PARA(ExFlags);
000776  bf00              NOP      
;;;536      /* Alloc memory for obj */
;;;537      WinFlags |= WM_CF_LATE_CLIP;    /* Always use late clipping since widget is optimized for it. */
000778  f4455580          ORR      r5,r5,#0x1000
;;;538      hObj = WM_CreateWindowAsChild(x0, y0, xsize, ysize, hParent, WM_CF_SHOW | WinFlags, EDIT__Callback,
00077c  2254              MOVS     r2,#0x54
00077e  4b76              LDR      r3,|L1.2392|
000780  b2a8              UXTH     r0,r5
000782  f0400002          ORR      r0,r0,#2
000786  9912              LDR      r1,[sp,#0x48]
000788  e9cd3202          STRD     r3,r2,[sp,#8]
00078c  e9cd1000          STRD     r1,r0,[sp,#0]
000790  464a              MOV      r2,r9
000792  4641              MOV      r1,r8
000794  4638              MOV      r0,r7
000796  9b08              LDR      r3,[sp,#0x20]
000798  f7fffffe          BL       WM_CreateWindowAsChild
00079c  4606              MOV      r6,r0
;;;539                                    sizeof(EDIT_Obj) - sizeof(WM_Obj));
;;;540      if (hObj) {
00079e  b366              CBZ      r6,|L1.2042|
;;;541        EDIT_Obj* pObj;
;;;542        WM_LOCK();
0007a0  f7fffffe          BL       GUI_Lock
;;;543        pObj = (EDIT_Obj*)GUI_ALLOC_h2p(hObj);
0007a4  4630              MOV      r0,r6
0007a6  f7fffffe          BL       GUI_ALLOC_h2p
0007aa  4604              MOV      r4,r0
;;;544        /* init widget specific variables */
;;;545        WIDGET__Init(&pObj->Widget, Id, WIDGET_STATE_FOCUSSABLE);
0007ac  2210              MOVS     r2,#0x10
0007ae  4620              MOV      r0,r4
0007b0  9915              LDR      r1,[sp,#0x54]
0007b2  f7fffffe          BL       WIDGET__Init
;;;546        /* init member variables */
;;;547        INIT_ID(pObj);
;;;548        pObj->Props         = EDIT__DefaultProps;
0007b6  221c              MOVS     r2,#0x1c
0007b8  4968              LDR      r1,|L1.2396|
0007ba  f1040054          ADD      r0,r4,#0x54
0007be  f7fffffe          BL       __aeabi_memcpy4
;;;549        pObj->XSizeCursor   = 1;
0007c2  2001              MOVS     r0,#1
0007c4  f8840049          STRB     r0,[r4,#0x49]
;;;550        pObj->MaxLen        = (MaxLen == 0) ? 8 : MaxLen;
0007c8  f1bb0f00          CMP      r11,#0
0007cc  d101              BNE      |L1.2002|
0007ce  2008              MOVS     r0,#8
0007d0  e000              B        |L1.2004|
                  |L1.2002|
0007d2  4658              MOV      r0,r11
                  |L1.2004|
0007d4  b200              SXTH     r0,r0
0007d6  8560              STRH     r0,[r4,#0x2a]
;;;551        pObj->BufferSize    = 0;
0007d8  2000              MOVS     r0,#0
0007da  85a0              STRH     r0,[r4,#0x2c]
;;;552        pObj->hpText        = 0;
0007dc  8520              STRH     r0,[r4,#0x28]
;;;553        if (_IncrementBuffer(pObj, pObj->MaxLen + 1) == 0) {
0007de  f9b4002a          LDRSH    r0,[r4,#0x2a]
0007e2  1c41              ADDS     r1,r0,#1
0007e4  4620              MOV      r0,r4
0007e6  f7fffffe          BL       _IncrementBuffer
0007ea  b918              CBNZ     r0,|L1.2036|
;;;554          GUI_DEBUG_ERROROUT("EDIT_Create failed to alloc buffer");
;;;555          EDIT_Delete(hObj);
0007ec  4630              MOV      r0,r6
0007ee  f7fffffe          BL       WM_DeleteWindow
;;;556          hObj = 0;
0007f2  2600              MOVS     r6,#0
                  |L1.2036|
;;;557        }
;;;558        WM_UNLOCK();
0007f4  f7fffffe          BL       GUI_Unlock
;;;559      }
0007f8  bf00              NOP      
                  |L1.2042|
;;;560      return hObj;
0007fa  4630              MOV      r0,r6
;;;561    }
0007fc  b009              ADD      sp,sp,#0x24
0007fe  e8bd8ff0          POP      {r4-r11,pc}
;;;562    
                          ENDP

                  EDIT_SetFont PROC
;;;653    */
;;;654    void EDIT_SetFont(EDIT_Handle hObj, const GUI_FONT GUI_UNI_PTR * pfont) {
000802  b570              PUSH     {r4-r6,lr}
000804  4605              MOV      r5,r0
000806  460e              MOV      r6,r1
;;;655      EDIT_Obj* pObj;
;;;656      if (hObj == 0)
000808  b905              CBNZ     r5,|L1.2060|
                  |L1.2058|
;;;657        return;
;;;658      WM_LOCK();
;;;659      pObj = EDIT_H2P(hObj);
;;;660      if (pObj) {
;;;661        pObj->Props.pFont = pfont;
;;;662        EDIT_Invalidate(hObj);
;;;663      }
;;;664      WM_UNLOCK();
;;;665    }
00080a  bd70              POP      {r4-r6,pc}
                  |L1.2060|
00080c  f7fffffe          BL       GUI_Lock
000810  4628              MOV      r0,r5                 ;659
000812  f7fffffe          BL       GUI_ALLOC_h2p
000816  4604              MOV      r4,r0                 ;659
000818  b11c              CBZ      r4,|L1.2082|
00081a  65e6              STR      r6,[r4,#0x5c]         ;661
00081c  4628              MOV      r0,r5                 ;662
00081e  f7fffffe          BL       WM_InvalidateWindow
                  |L1.2082|
000822  f7fffffe          BL       GUI_Unlock
000826  bf00              NOP      
000828  e7ef              B        |L1.2058|
;;;666    
                          ENDP

                  EDIT_SetBkColor PROC
;;;670    */
;;;671    void EDIT_SetBkColor(EDIT_Handle hObj, unsigned int Index, GUI_COLOR color) {
00082a  e92d41f0          PUSH     {r4-r8,lr}
00082e  4606              MOV      r6,r0
000830  460d              MOV      r5,r1
000832  4617              MOV      r7,r2
;;;672      EDIT_Obj* pObj;
;;;673      if (hObj == 0)
000834  b90e              CBNZ     r6,|L1.2106|
                  |L1.2102|
;;;674        return;
;;;675      WM_LOCK();
;;;676      pObj = EDIT_H2P(hObj);
;;;677      if (pObj) {
;;;678        if (Index < GUI_COUNTOF(pObj->Props.aBkColor)) {
;;;679          pObj->Props.aBkColor[Index] = color;
;;;680          EDIT_Invalidate(hObj);
;;;681        }
;;;682      }
;;;683      WM_UNLOCK();
;;;684    }
000836  e8bd81f0          POP      {r4-r8,pc}
                  |L1.2106|
00083a  f7fffffe          BL       GUI_Lock
00083e  4630              MOV      r0,r6                 ;676
000840  f7fffffe          BL       GUI_ALLOC_h2p
000844  4604              MOV      r4,r0                 ;676
000846  b144              CBZ      r4,|L1.2138|
000848  2d02              CMP      r5,#2                 ;678
00084a  d206              BCS      |L1.2138|
00084c  f1040068          ADD      r0,r4,#0x68           ;679
000850  f8407025          STR      r7,[r0,r5,LSL #2]     ;679
000854  4630              MOV      r0,r6                 ;680
000856  f7fffffe          BL       WM_InvalidateWindow
                  |L1.2138|
00085a  f7fffffe          BL       GUI_Unlock
00085e  bf00              NOP      
000860  e7e9              B        |L1.2102|
;;;685    
                          ENDP

                  EDIT_SetTextColor PROC
;;;689    */
;;;690    void EDIT_SetTextColor(EDIT_Handle hObj, unsigned int Index, GUI_COLOR color) {
000862  e92d41f0          PUSH     {r4-r8,lr}
000866  4606              MOV      r6,r0
000868  460d              MOV      r5,r1
00086a  4617              MOV      r7,r2
;;;691      EDIT_Obj* pObj;
;;;692      if (hObj == 0)
00086c  b90e              CBNZ     r6,|L1.2162|
                  |L1.2158|
;;;693        return;
;;;694      WM_LOCK();
;;;695      pObj = EDIT_H2P(hObj);
;;;696      if (pObj) {
;;;697        if (Index < GUI_COUNTOF(pObj->Props.aTextColor)) {
;;;698          pObj->Props.aTextColor[Index] = color;
;;;699          EDIT_Invalidate(hObj);
;;;700        }
;;;701      }
;;;702      WM_UNLOCK();
;;;703    }
00086e  e8bd81f0          POP      {r4-r8,pc}
                  |L1.2162|
000872  f7fffffe          BL       GUI_Lock
000876  4630              MOV      r0,r6                 ;695
000878  f7fffffe          BL       GUI_ALLOC_h2p
00087c  4604              MOV      r4,r0                 ;695
00087e  b144              CBZ      r4,|L1.2194|
000880  2d02              CMP      r5,#2                 ;697
000882  d206              BCS      |L1.2194|
000884  f1040060          ADD      r0,r4,#0x60           ;698
000888  f8407025          STR      r7,[r0,r5,LSL #2]     ;698
00088c  4630              MOV      r0,r6                 ;699
00088e  f7fffffe          BL       WM_InvalidateWindow
                  |L1.2194|
000892  f7fffffe          BL       GUI_Unlock
000896  bf00              NOP      
000898  e7e9              B        |L1.2158|
;;;704    
                          ENDP

                  EDIT_SetText PROC
;;;708    */
;;;709    void EDIT_SetText(EDIT_Handle hObj, const char* s) {
00089a  e92d47f0          PUSH     {r4-r10,lr}
00089e  4680              MOV      r8,r0
0008a0  460f              MOV      r7,r1
;;;710      if (hObj) {
0008a2  f1b80f00          CMP      r8,#0
0008a6  d052              BEQ      |L1.2382|
;;;711        EDIT_Obj* pObj;
;;;712        WM_LOCK();
0008a8  f7fffffe          BL       GUI_Lock
;;;713        pObj = EDIT_H2P(hObj);
0008ac  4640              MOV      r0,r8
0008ae  f7fffffe          BL       GUI_ALLOC_h2p
0008b2  4604              MOV      r4,r0
;;;714        if (s) {
0008b4  2f00              CMP      r7,#0
0008b6  d03d              BEQ      |L1.2356|
;;;715          int NumBytesNew, NumBytesOld = 0;
0008b8  f04f0900          MOV      r9,#0
;;;716          int NumCharsNew;
;;;717          if (pObj->hpText) {
0008bc  8d20              LDRH     r0,[r4,#0x28]
0008be  b150              CBZ      r0,|L1.2262|
;;;718            char* pText;
;;;719            pText       = (char*) GUI_ALLOC_h2p(pObj->hpText);
0008c0  f9b40028          LDRSH    r0,[r4,#0x28]
0008c4  f7fffffe          BL       GUI_ALLOC_h2p
0008c8  4682              MOV      r10,r0
;;;720            NumBytesOld = strlen(pText) + 1;
0008ca  4650              MOV      r0,r10
0008cc  f7fffffe          BL       strlen
0008d0  f1000901          ADD      r9,r0,#1
;;;721          }
0008d4  bf00              NOP      
                  |L1.2262|
;;;722          NumCharsNew = GUI__GetNumChars(s);
0008d6  4638              MOV      r0,r7
0008d8  f7fffffe          BL       GUI__GetNumChars
0008dc  4606              MOV      r6,r0
;;;723          if (NumCharsNew > pObj->MaxLen) {
0008de  f9b4102a          LDRSH    r1,[r4,#0x2a]
0008e2  42b1              CMP      r1,r6
0008e4  da01              BGE      |L1.2282|
;;;724            NumCharsNew = pObj->MaxLen;
0008e6  f9b4602a          LDRSH    r6,[r4,#0x2a]
                  |L1.2282|
;;;725          }
;;;726          NumBytesNew = GUI_UC__NumChars2NumBytes(s, NumCharsNew) + 1;
0008ea  4631              MOV      r1,r6
0008ec  4638              MOV      r0,r7
0008ee  f7fffffe          BL       GUI_UC__NumChars2NumBytes
0008f2  1c45              ADDS     r5,r0,#1
;;;727          if (_IsSpaceInBuffer(pObj, NumBytesNew - NumBytesOld)) {
0008f4  eba50109          SUB      r1,r5,r9
0008f8  4620              MOV      r0,r4
0008fa  f7fffffe          BL       _IsSpaceInBuffer
0008fe  b1c0              CBZ      r0,|L1.2354|
;;;728            char* pText;
;;;729            pText = (char*) GUI_ALLOC_h2p(pObj->hpText);
000900  f9b40028          LDRSH    r0,[r4,#0x28]
000904  f7fffffe          BL       GUI_ALLOC_h2p
000908  4682              MOV      r10,r0
;;;730            memcpy(pText, s, NumBytesNew);
00090a  462a              MOV      r2,r5
00090c  4639              MOV      r1,r7
00090e  4650              MOV      r0,r10
000910  f7fffffe          BL       __aeabi_memcpy
;;;731            pObj->CursorPos = NumBytesNew - 1;
000914  1e68              SUBS     r0,r5,#1
000916  6420              STR      r0,[r4,#0x40]
;;;732            if (pObj->CursorPos == pObj->MaxLen) {
000918  f9b4102a          LDRSH    r1,[r4,#0x2a]
00091c  6c20              LDR      r0,[r4,#0x40]
00091e  4288              CMP      r0,r1
000920  d106              BNE      |L1.2352|
;;;733              if (pObj->EditMode == GUI_EDIT_MODE_OVERWRITE) {
000922  f8940048          LDRB     r0,[r4,#0x48]
000926  2801              CMP      r0,#1
000928  d102              BNE      |L1.2352|
;;;734                pObj->CursorPos--;
00092a  6c20              LDR      r0,[r4,#0x40]
00092c  1e40              SUBS     r0,r0,#1
00092e  6420              STR      r0,[r4,#0x40]
                  |L1.2352|
;;;735              }
;;;736            }
;;;737          }
000930  bf00              NOP      
                  |L1.2354|
;;;738        } else {
000932  e006              B        |L1.2370|
                  |L1.2356|
;;;739          GUI_ALLOC_FreePtr(&pObj->hpText);
000934  f1040028          ADD      r0,r4,#0x28
000938  f7fffffe          BL       GUI_ALLOC_FreePtr
;;;740          pObj->BufferSize = 0;
00093c  2000              MOVS     r0,#0
00093e  85a0              STRH     r0,[r4,#0x2c]
;;;741          pObj->CursorPos  = 0;
000940  6420              STR      r0,[r4,#0x40]
                  |L1.2370|
;;;742        }
;;;743        EDIT_Invalidate(hObj);
000942  4640              MOV      r0,r8
000944  f7fffffe          BL       WM_InvalidateWindow
;;;744        WM_UNLOCK();
000948  f7fffffe          BL       GUI_Unlock
;;;745      }
00094c  bf00              NOP      
                  |L1.2382|
;;;746    }
00094e  e8bd87f0          POP      {r4-r10,pc}
000952  0000              DCW      0x0000
                  |L1.2388|
                          DCD      StartPress
                  |L1.2392|
                          DCD      EDIT__Callback
                  |L1.2396|
                          DCD      EDIT__DefaultProps
                          ENDP

                  EDIT_GetText PROC
;;;751    */
;;;752    void EDIT_GetText(EDIT_Handle hObj, char* sDest, int MaxLen) {
000960  e92d47f0          PUSH     {r4-r10,lr}
000964  4607              MOV      r7,r0
000966  460c              MOV      r4,r1
000968  4615              MOV      r5,r2
;;;753      if (sDest) {
00096a  b33c              CBZ      r4,|L1.2492|
;;;754        *sDest = 0;
00096c  2000              MOVS     r0,#0
00096e  7020              STRB     r0,[r4,#0]
;;;755        if (hObj) {
000970  b327              CBZ      r7,|L1.2492|
;;;756          EDIT_Obj* pObj;
;;;757          WM_LOCK();
000972  f7fffffe          BL       GUI_Lock
;;;758          pObj = EDIT_H2P(hObj);
000976  4638              MOV      r0,r7
000978  f7fffffe          BL       GUI_ALLOC_h2p
00097c  4680              MOV      r8,r0
;;;759          if (pObj->hpText) {
00097e  f8b80028          LDRH     r0,[r8,#0x28]
000982  b1c0              CBZ      r0,|L1.2486|
;;;760            char* pText;
;;;761            int NumChars, NumBytes;
;;;762            pText = (char*) GUI_ALLOC_h2p(pObj->hpText);
000984  f9b80028          LDRSH    r0,[r8,#0x28]
000988  f7fffffe          BL       GUI_ALLOC_h2p
00098c  4682              MOV      r10,r0
;;;763            NumChars = GUI__GetNumChars(pText);
00098e  4650              MOV      r0,r10
000990  f7fffffe          BL       GUI__GetNumChars
000994  4681              MOV      r9,r0
;;;764            if (NumChars > MaxLen) {
000996  45a9              CMP      r9,r5
000998  dd00              BLE      |L1.2460|
;;;765              NumChars = MaxLen;
00099a  46a9              MOV      r9,r5
                  |L1.2460|
;;;766            }
;;;767            NumBytes = GUI_UC__NumChars2NumBytes(pText, NumChars);
00099c  4649              MOV      r1,r9
00099e  4650              MOV      r0,r10
0009a0  f7fffffe          BL       GUI_UC__NumChars2NumBytes
0009a4  4606              MOV      r6,r0
;;;768            memcpy(sDest, pText, NumBytes);
0009a6  4632              MOV      r2,r6
0009a8  4651              MOV      r1,r10
0009aa  4620              MOV      r0,r4
0009ac  f7fffffe          BL       __aeabi_memcpy
;;;769            *(sDest + NumBytes) = 0;
0009b0  2000              MOVS     r0,#0
0009b2  55a0              STRB     r0,[r4,r6]
;;;770          }
0009b4  bf00              NOP      
                  |L1.2486|
;;;771          WM_UNLOCK();
0009b6  f7fffffe          BL       GUI_Unlock
;;;772        }
0009ba  bf00              NOP      
                  |L1.2492|
;;;773      }
;;;774    }
0009bc  e8bd87f0          POP      {r4-r10,pc}
;;;775    
                          ENDP

                  EDIT_GetValue PROC
;;;779    */
;;;780    I32  EDIT_GetValue(EDIT_Handle hObj) {
0009c0  b570              PUSH     {r4-r6,lr}
0009c2  4604              MOV      r4,r0
;;;781      EDIT_Obj* pObj;
;;;782      I32 r = 0;
0009c4  2600              MOVS     r6,#0
;;;783      if (hObj) {
0009c6  b144              CBZ      r4,|L1.2522|
;;;784        WM_LOCK();
0009c8  f7fffffe          BL       GUI_Lock
;;;785        pObj = EDIT_H2P(hObj);
0009cc  4620              MOV      r0,r4
0009ce  f7fffffe          BL       GUI_ALLOC_h2p
0009d2  4605              MOV      r5,r0
;;;786        r = pObj->CurrentValue;
0009d4  6bee              LDR      r6,[r5,#0x3c]
;;;787        WM_UNLOCK();
0009d6  f7fffffe          BL       GUI_Unlock
                  |L1.2522|
;;;788      }
;;;789      return r;
0009da  4630              MOV      r0,r6
;;;790    }
0009dc  bd70              POP      {r4-r6,pc}
;;;791    
                          ENDP

                  EDIT_SetValue PROC
;;;795    */
;;;796    void EDIT_SetValue(EDIT_Handle hObj, I32 Value) {
0009de  b570              PUSH     {r4-r6,lr}
0009e0  4606              MOV      r6,r0
0009e2  460d              MOV      r5,r1
;;;797      EDIT_Obj* pObj;
;;;798      if (hObj) {
0009e4  b1fe              CBZ      r6,|L1.2598|
;;;799        WM_LOCK();
0009e6  f7fffffe          BL       GUI_Lock
;;;800        pObj = EDIT_H2P(hObj);
0009ea  4630              MOV      r0,r6
0009ec  f7fffffe          BL       GUI_ALLOC_h2p
0009f0  4604              MOV      r4,r0
;;;801        /* Put in min/max range */
;;;802        if (Value < pObj->Min) {
0009f2  6b20              LDR      r0,[r4,#0x30]
0009f4  42a8              CMP      r0,r5
0009f6  dd00              BLE      |L1.2554|
;;;803          Value = pObj->Min;
0009f8  6b25              LDR      r5,[r4,#0x30]
                  |L1.2554|
;;;804        }
;;;805        if (Value > pObj->Max) {
0009fa  6b60              LDR      r0,[r4,#0x34]
0009fc  42a8              CMP      r0,r5
0009fe  da00              BGE      |L1.2562|
;;;806          Value = pObj->Max;
000a00  6b65              LDR      r5,[r4,#0x34]
                  |L1.2562|
;;;807        }
;;;808        if (pObj->CurrentValue != (U32)Value) {
000a02  6be0              LDR      r0,[r4,#0x3c]
000a04  42a8              CMP      r0,r5
000a06  d00c              BEQ      |L1.2594|
;;;809          pObj->CurrentValue = Value;
000a08  63e5              STR      r5,[r4,#0x3c]
;;;810          if (pObj->pfUpdateBuffer) {
000a0a  6d20              LDR      r0,[r4,#0x50]
000a0c  b110              CBZ      r0,|L1.2580|
;;;811            pObj->pfUpdateBuffer(hObj);
000a0e  4630              MOV      r0,r6
000a10  6d21              LDR      r1,[r4,#0x50]
000a12  4788              BLX      r1
                  |L1.2580|
;;;812          }
;;;813          WM_InvalidateWindow(hObj);
000a14  4630              MOV      r0,r6
000a16  f7fffffe          BL       WM_InvalidateWindow
;;;814          WM_NotifyParent(hObj, WM_NOTIFICATION_VALUE_CHANGED);
000a1a  2105              MOVS     r1,#5
000a1c  4630              MOV      r0,r6
000a1e  f7fffffe          BL       WM_NotifyParent
                  |L1.2594|
;;;815        }
;;;816        WM_UNLOCK();
000a22  f7fffffe          BL       GUI_Unlock
                  |L1.2598|
;;;817      }
;;;818    }
000a26  bd70              POP      {r4-r6,pc}
;;;819    
                          ENDP

                  EDIT_SetMaxLen PROC
;;;823    */
;;;824    void EDIT_SetMaxLen(EDIT_Handle  hObj, int MaxLen) {
000a28  e92d47f0          PUSH     {r4-r10,lr}
000a2c  4606              MOV      r6,r0
000a2e  460d              MOV      r5,r1
;;;825      if (hObj) {
000a30  b396              CBZ      r6,|L1.2712|
;;;826        EDIT_Obj* pObj;
;;;827        WM_LOCK();
000a32  f7fffffe          BL       GUI_Lock
;;;828        pObj = EDIT_H2P(hObj);
000a36  4630              MOV      r0,r6
000a38  f7fffffe          BL       GUI_ALLOC_h2p
000a3c  4604              MOV      r4,r0
;;;829        if (MaxLen != pObj->MaxLen) {
000a3e  f9b4002a          LDRSH    r0,[r4,#0x2a]
000a42  42a8              CMP      r0,r5
000a44  d025              BEQ      |L1.2706|
;;;830          if (MaxLen < pObj->MaxLen) {
000a46  f9b4002a          LDRSH    r0,[r4,#0x2a]
000a4a  42a8              CMP      r0,r5
000a4c  dd16              BLE      |L1.2684|
;;;831            if (pObj->hpText) {
000a4e  8d20              LDRH     r0,[r4,#0x28]
000a50  b1a0              CBZ      r0,|L1.2684|
;;;832              char* pText;
;;;833              int   NumChars;
;;;834              pText    = (char*) GUI_ALLOC_h2p(pObj->hpText);
000a52  f9b40028          LDRSH    r0,[r4,#0x28]
000a56  f7fffffe          BL       GUI_ALLOC_h2p
000a5a  4607              MOV      r7,r0
;;;835              NumChars = GUI__GetNumChars(pText);
000a5c  4638              MOV      r0,r7
000a5e  f7fffffe          BL       GUI__GetNumChars
000a62  4680              MOV      r8,r0
;;;836              if (NumChars > MaxLen) {
000a64  45a8              CMP      r8,r5
000a66  dd08              BLE      |L1.2682|
;;;837                int NumBytes;
;;;838                NumBytes = GUI_UC__NumChars2NumBytes(pText, MaxLen);
000a68  4629              MOV      r1,r5
000a6a  4638              MOV      r0,r7
000a6c  f7fffffe          BL       GUI_UC__NumChars2NumBytes
000a70  4681              MOV      r9,r0
;;;839                *(pText + NumBytes) = 0;
000a72  2000              MOVS     r0,#0
000a74  f8070009          STRB     r0,[r7,r9]
;;;840              }
000a78  bf00              NOP      
                  |L1.2682|
;;;841            }
000a7a  bf00              NOP      
                  |L1.2684|
;;;842          }
;;;843          _IncrementBuffer(pObj, MaxLen - pObj->BufferSize + 1);
000a7c  8da0              LDRH     r0,[r4,#0x2c]
000a7e  1a28              SUBS     r0,r5,r0
000a80  1c41              ADDS     r1,r0,#1
000a82  4620              MOV      r0,r4
000a84  f7fffffe          BL       _IncrementBuffer
;;;844          pObj->MaxLen = MaxLen;
000a88  b228              SXTH     r0,r5
000a8a  8560              STRH     r0,[r4,#0x2a]
;;;845          EDIT_Invalidate(hObj);
000a8c  4630              MOV      r0,r6
000a8e  f7fffffe          BL       WM_InvalidateWindow
                  |L1.2706|
;;;846        }
;;;847        WM_UNLOCK();
000a92  f7fffffe          BL       GUI_Unlock
;;;848      }
000a96  bf00              NOP      
                  |L1.2712|
;;;849    }
000a98  e8bd87f0          POP      {r4-r10,pc}
;;;850    
                          ENDP

                  EDIT_SetTextAlign PROC
;;;854    */
;;;855    void EDIT_SetTextAlign(EDIT_Handle hObj, int Align) {
000a9c  b570              PUSH     {r4-r6,lr}
000a9e  4605              MOV      r5,r0
000aa0  460e              MOV      r6,r1
;;;856      EDIT_Obj* pObj;
;;;857      if (hObj == 0)
000aa2  b905              CBNZ     r5,|L1.2726|
                  |L1.2724|
;;;858        return;
;;;859      WM_LOCK();
;;;860      pObj = EDIT_H2P(hObj);
;;;861      if (pObj) {
;;;862        pObj->Props.Align = Align;
;;;863        EDIT_Invalidate(hObj);
;;;864      }
;;;865      WM_UNLOCK();
;;;866    }
000aa4  bd70              POP      {r4-r6,pc}
                  |L1.2726|
000aa6  f7fffffe          BL       GUI_Lock
000aaa  4628              MOV      r0,r5                 ;860
000aac  f7fffffe          BL       GUI_ALLOC_h2p
000ab0  4604              MOV      r4,r0                 ;860
000ab2  b11c              CBZ      r4,|L1.2748|
000ab4  6566              STR      r6,[r4,#0x54]         ;862
000ab6  4628              MOV      r0,r5                 ;863
000ab8  f7fffffe          BL       WM_InvalidateWindow
                  |L1.2748|
000abc  f7fffffe          BL       GUI_Unlock
000ac0  bf00              NOP      
000ac2  e7ef              B        |L1.2724|
;;;867    
                          ENDP


                          AREA ||.data||, DATA, ALIGN=2

                  EDIT__DefaultProps
                          DCD      0x0000000c
                          DCD      0x00000001
                          DCD      GUI_Font13_1
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00c0c0c0
                          DCD      0x00ffffff
                  Timer1
00001c  0000              DCW      0x0000
00001e  0000              DCB      0x00,0x00
                  StartPress
                          DCD      0x00000000
