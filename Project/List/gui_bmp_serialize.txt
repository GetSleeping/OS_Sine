; generated by ARM C/C++ Compiler, 4.1 [Build 894]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\Obj\gui_bmp_serialize.o --asm_dir=.\List\ --list_dir=.\List\ --depend=.\Obj\gui_bmp_serialize.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\Libraries\CMSIS\CM3\CoreSupport -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x\startup\arm -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\User -I..\BaseDrive -I..\Ucosii -I..\Ucosii\Port -I..\Ucosii\Src -I..\Ucosii\Include -I..\Ucgui -I..\Ucgui\Config -I..\Ucgui\GUI_X -I..\Ucgui\GUI -I..\Ucgui\GUI\ConvertColor -I..\Ucgui\GUI\ConvertMono -I..\Ucgui\GUI\Core -I..\Ucgui\GUI\Core -I..\Ucgui\GUI\LCDDriver -I..\Ucgui\GUI\MultiLayer -I..\Ucgui\GUI\Widget -I..\Ucgui\GUI\WM -I..\ExternalDrive\Lcd -I..\ExternalDrive\Touch -I..\Panel -I"D:\Program files\Keil\ARM\RV31\Inc" -I"D:\Program files\Keil\ARM\CMSIS\Include" -I"D:\Program files\Keil\ARM\Inc\ST\STM32F10x" -D__MICROLIB -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=.\Obj\gui_bmp_serialize.crf ..\Ucgui\GUI\Core\GUI_BMP_Serialize.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=1

                  _SendU16 PROC
;;;43     */
;;;44     static void _SendU16(GUI_CALLBACK_VOID_U8_P * pfSerialize, U16 Data, void * p) {
000000  b570              PUSH     {r4-r6,lr}
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
000006  4616              MOV      r6,r2
;;;45       (*pfSerialize)((U8)Data, p);
000008  4631              MOV      r1,r6
00000a  b2e8              UXTB     r0,r5
00000c  47a0              BLX      r4
;;;46       (*pfSerialize)(Data >> 8, p);
00000e  1228              ASRS     r0,r5,#8
000010  4631              MOV      r1,r6
000012  47a0              BLX      r4
;;;47     }
000014  bd70              POP      {r4-r6,pc}
;;;48     
                          ENDP

                  _SendU32 PROC
;;;52     */
;;;53     static void _SendU32(GUI_CALLBACK_VOID_U8_P * pfSerialize, U32 Data, void * p) {
000016  b570              PUSH     {r4-r6,lr}
000018  4605              MOV      r5,r0
00001a  460c              MOV      r4,r1
00001c  4616              MOV      r6,r2
;;;54       _SendU16(pfSerialize, (U16)Data, p);
00001e  4632              MOV      r2,r6
000020  b2a1              UXTH     r1,r4
000022  4628              MOV      r0,r5
000024  f7fffffe          BL       _SendU16
;;;55       _SendU16(pfSerialize, Data >> 16, p);
000028  0c21              LSRS     r1,r4,#16
00002a  4632              MOV      r2,r6
00002c  4628              MOV      r0,r5
00002e  f7fffffe          BL       _SendU16
;;;56     }
000032  bd70              POP      {r4-r6,pc}
;;;57     
                          ENDP

                  GUI_BMP_SerializeEx PROC
;;;67     */
;;;68     void GUI_BMP_SerializeEx(GUI_CALLBACK_VOID_U8_P * pfSerialize, int x0, int y0, int xSize, int ySize, void * p) {
000034  e92d4fff          PUSH     {r0-r11,lr}
000038  b087              SUB      sp,sp,#0x1c
00003a  4683              MOV      r11,r0
00003c  461d              MOV      r5,r3
;;;69       int x, y, i;
;;;70       U32 BitmapOffset, FileSize;
;;;71       int BPP          = LCD_GetBitsPerPixel();
00003e  f7fffffe          BL       LCD_GetBitsPerPixel
000042  4607              MOV      r7,r0
;;;72       int BytesPerLine = ((BPP > 8) ? (2 * xSize + 2) : (xSize + 3)) & ~3;
000044  2f08              CMP      r7,#8
000046  dd02              BLE      |L1.78|
000048  0068              LSLS     r0,r5,#1
00004a  1c80              ADDS     r0,r0,#2
00004c  e000              B        |L1.80|
                  |L1.78|
00004e  1ce8              ADDS     r0,r5,#3
                  |L1.80|
000050  f0200003          BIC      r0,r0,#3
000054  9004              STR      r0,[sp,#0x10]
;;;73       int NumColors    = (BPP > 8) ? 0 : (1 << BPP);
000056  2f08              CMP      r7,#8
000058  dd01              BLE      |L1.94|
00005a  2000              MOVS     r0,#0
00005c  e001              B        |L1.98|
                  |L1.94|
00005e  2001              MOVS     r0,#1
000060  40b8              LSLS     r0,r0,r7
                  |L1.98|
000062  4681              MOV      r9,r0
;;;74       /* Write BITMAPFILEHEADER */
;;;75       BitmapOffset   = SIZEOF_BITMAPFILEHEADER
000064  2036              MOVS     r0,#0x36
000066  eb000089          ADD      r0,r0,r9,LSL #2
00006a  9006              STR      r0,[sp,#0x18]
;;;76                      + SIZEOF_BITMAPINFOHEADER
;;;77                      + NumColors * 4;
;;;78       FileSize       = BitmapOffset
00006c  9a04              LDR      r2,[sp,#0x10]
00006e  9914              LDR      r1,[sp,#0x50]
000070  9806              LDR      r0,[sp,#0x18]
000072  fb010002          MLA      r0,r1,r2,r0
000076  9005              STR      r0,[sp,#0x14]
;;;79                      + ySize * BytesPerLine;
;;;80       _SendU16(pfSerialize, DIB_HEADER_MARKER, p);       /* bfType */
000078  f6445142          MOV      r1,#0x4d42
00007c  4658              MOV      r0,r11
00007e  9a15              LDR      r2,[sp,#0x54]
000080  f7fffffe          BL       _SendU16
;;;81       _SendU32(pfSerialize, FileSize, p);                /* bfSize */
000084  4658              MOV      r0,r11
000086  9a15              LDR      r2,[sp,#0x54]
000088  9905              LDR      r1,[sp,#0x14]
00008a  f7fffffe          BL       _SendU32
;;;82       _SendU32(pfSerialize, 0, p);                       /* bfReserved1, bfReserved2 */
00008e  2100              MOVS     r1,#0
000090  4658              MOV      r0,r11
000092  9a15              LDR      r2,[sp,#0x54]
000094  f7fffffe          BL       _SendU32
;;;83       _SendU32(pfSerialize, BitmapOffset, p);            /* bfOffBits */
000098  4658              MOV      r0,r11
00009a  9a15              LDR      r2,[sp,#0x54]
00009c  9906              LDR      r1,[sp,#0x18]
00009e  f7fffffe          BL       _SendU32
;;;84       /* Write BITMAPINFOHEADER */
;;;85       _SendU32(pfSerialize, SIZEOF_BITMAPINFOHEADER, p); /* biSize */
0000a2  2128              MOVS     r1,#0x28
0000a4  4658              MOV      r0,r11
0000a6  9a15              LDR      r2,[sp,#0x54]
0000a8  f7fffffe          BL       _SendU32
;;;86       _SendU32(pfSerialize, xSize, p);                   /* biWidth */
0000ac  4629              MOV      r1,r5
0000ae  4658              MOV      r0,r11
0000b0  9a15              LDR      r2,[sp,#0x54]
0000b2  f7fffffe          BL       _SendU32
;;;87       _SendU32(pfSerialize, ySize, p);                   /* biHeighth */
0000b6  4658              MOV      r0,r11
0000b8  e9dd1214          LDRD     r1,r2,[sp,#0x50]
0000bc  f7fffffe          BL       _SendU32
;;;88       _SendU16(pfSerialize, 1, p);                       /* biPlanes */
0000c0  2101              MOVS     r1,#1
0000c2  4658              MOV      r0,r11
0000c4  9a15              LDR      r2,[sp,#0x54]
0000c6  f7fffffe          BL       _SendU16
;;;89       _SendU16(pfSerialize, (BPP  <= 8) ? 8 : 16, p);    /* biBitCount */
0000ca  2f08              CMP      r7,#8
0000cc  dc01              BGT      |L1.210|
0000ce  2008              MOVS     r0,#8
0000d0  e000              B        |L1.212|
                  |L1.210|
0000d2  2010              MOVS     r0,#0x10
                  |L1.212|
0000d4  4601              MOV      r1,r0
0000d6  4658              MOV      r0,r11
0000d8  9a15              LDR      r2,[sp,#0x54]
0000da  f7fffffe          BL       _SendU16
;;;90       _SendU32(pfSerialize, 0, p);                       /* biCompression */
0000de  2100              MOVS     r1,#0
0000e0  4658              MOV      r0,r11
0000e2  9a15              LDR      r2,[sp,#0x54]
0000e4  f7fffffe          BL       _SendU32
;;;91       _SendU32(pfSerialize, 0, p);                       /* biSizeImage */
0000e8  2100              MOVS     r1,#0
0000ea  4658              MOV      r0,r11
0000ec  9a15              LDR      r2,[sp,#0x54]
0000ee  f7fffffe          BL       _SendU32
;;;92       _SendU32(pfSerialize, 0, p);                       /* biXPelsPerMeter */
0000f2  2100              MOVS     r1,#0
0000f4  4658              MOV      r0,r11
0000f6  9a15              LDR      r2,[sp,#0x54]
0000f8  f7fffffe          BL       _SendU32
;;;93       _SendU32(pfSerialize, 0, p);                       /* biYPelsPerMeter */
0000fc  2100              MOVS     r1,#0
0000fe  4658              MOV      r0,r11
000100  9a15              LDR      r2,[sp,#0x54]
000102  f7fffffe          BL       _SendU32
;;;94       _SendU32(pfSerialize, NumColors, p);               /* biClrUsed */
000106  4649              MOV      r1,r9
000108  4658              MOV      r0,r11
00010a  9a15              LDR      r2,[sp,#0x54]
00010c  f7fffffe          BL       _SendU32
;;;95       _SendU32(pfSerialize, 0, p);                       /* biClrImportant */
000110  2100              MOVS     r1,#0
000112  4658              MOV      r0,r11
000114  9a15              LDR      r2,[sp,#0x54]
000116  f7fffffe          BL       _SendU32
;;;96       /* Write palette */
;;;97       for (i = 0; i < NumColors; i++) {
00011a  2400              MOVS     r4,#0
00011c  e012              B        |L1.324|
                  |L1.286|
;;;98         U32 Color;
;;;99         Color = GUI_Index2Color(i);
00011e  4620              MOV      r0,r4
000120  f7fffffe          BL       GUI_Index2Color
000124  4682              MOV      r10,r0
;;;100        Color = ((Color >> 16) & 255) | (Color & 0xff00) | ((Color & 0xff) << 16);
000126  f40a407f          AND      r0,r10,#0xff00
00012a  f3ca4107          UBFX     r1,r10,#16,#8
00012e  4308              ORRS     r0,r0,r1
000130  f00a01ff          AND      r1,r10,#0xff
000134  ea404a01          ORR      r10,r0,r1,LSL #16
;;;101        _SendU32(pfSerialize, Color, p);
000138  4651              MOV      r1,r10
00013a  4658              MOV      r0,r11
00013c  9a15              LDR      r2,[sp,#0x54]
00013e  f7fffffe          BL       _SendU32
000142  1c64              ADDS     r4,r4,#1              ;97
                  |L1.324|
000144  454c              CMP      r4,r9                 ;97
000146  dbea              BLT      |L1.286|
;;;102      }
;;;103      /* Write pixels */
;;;104      for (y = ySize - 1; y >= 0; y--) {
000148  9814              LDR      r0,[sp,#0x50]
00014a  1e46              SUBS     r6,r0,#1
00014c  e050              B        |L1.496|
                  |L1.334|
;;;105        for (x = 0; x < xSize; x++) {
00014e  f04f0800          MOV      r8,#0
000152  e040              B        |L1.470|
                  |L1.340|
;;;106          if (BPP <= 8) {
000154  2f08              CMP      r7,#8
000156  dc0c              BGT      |L1.370|
;;;107            pfSerialize(LCD_GetPixelIndex(x0 + x, y0 + y), p);
000158  9a09              LDR      r2,[sp,#0x24]
00015a  1991              ADDS     r1,r2,r6
00015c  9a08              LDR      r2,[sp,#0x20]
00015e  eb020008          ADD      r0,r2,r8
000162  f7fffffe          BL       LCD_GetPixelIndex
000166  f0000aff          AND      r10,r0,#0xff
00016a  4650              MOV      r0,r10
00016c  9915              LDR      r1,[sp,#0x54]
00016e  47d8              BLX      r11
000170  e02f              B        |L1.466|
                  |L1.370|
;;;108          } else {
;;;109            U16 Color16;
;;;110            U32 Color = LCD_GetPixelColor(x0 + x, y0 + y);
000172  9a09              LDR      r2,[sp,#0x24]
000174  1991              ADDS     r1,r2,r6
000176  9a08              LDR      r2,[sp,#0x20]
000178  eb020008          ADD      r0,r2,r8
00017c  f7fffffe          BL       LCD_GetPixelColor
000180  4682              MOV      r10,r0
;;;111            int b = ((Color >> 16) * 31 + 127) / 255;
000182  ea4f401a          LSR      r0,r10,#16
000186  ebc01040          RSB      r0,r0,r0,LSL #5
00018a  307f              ADDS     r0,r0,#0x7f
00018c  21ff              MOVS     r1,#0xff
00018e  fbb0f0f1          UDIV     r0,r0,r1
000192  9002              STR      r0,[sp,#8]
;;;112            int g = (((Color >> 8) & 255) * 31 + 127) / 255;
000194  f3ca2007          UBFX     r0,r10,#8,#8
000198  ebc01040          RSB      r0,r0,r0,LSL #5
00019c  307f              ADDS     r0,r0,#0x7f
00019e  fbb0f0f1          UDIV     r0,r0,r1
0001a2  9001              STR      r0,[sp,#4]
;;;113            int r = ((Color & 255) * 31 + 127) / 255;
0001a4  f00a00ff          AND      r0,r10,#0xff
0001a8  ebc01040          RSB      r0,r0,r0,LSL #5
0001ac  307f              ADDS     r0,r0,#0x7f
0001ae  fbb0f0f1          UDIV     r0,r0,r1
0001b2  9000              STR      r0,[sp,#0]
;;;114            Color16 = (r << 10) | (g << 5) | b;       /* 16 bpp Bitmaps in windows are 555: rrrrrgggggbbbbb */
0001b4  9800              LDR      r0,[sp,#0]
0001b6  0281              LSLS     r1,r0,#10
0001b8  9801              LDR      r0,[sp,#4]
0001ba  ea411040          ORR      r0,r1,r0,LSL #5
0001be  9902              LDR      r1,[sp,#8]
0001c0  4308              ORRS     r0,r0,r1
0001c2  b280              UXTH     r0,r0
0001c4  9003              STR      r0,[sp,#0xc]
;;;115            _SendU16(pfSerialize, Color16, p);
0001c6  4658              MOV      r0,r11
0001c8  9a15              LDR      r2,[sp,#0x54]
0001ca  9903              LDR      r1,[sp,#0xc]
0001cc  f7fffffe          BL       _SendU16
;;;116          }
0001d0  bf00              NOP      
                  |L1.466|
0001d2  f1080801          ADD      r8,r8,#1              ;105
                  |L1.470|
0001d6  45a8              CMP      r8,r5                 ;105
0001d8  dbbc              BLT      |L1.340|
;;;117        }
;;;118        /* Align pointer to next U32 */
;;;119        for (i = BytesPerLine & 3; i > 0; i--) {
0001da  9804              LDR      r0,[sp,#0x10]
0001dc  f0000403          AND      r4,r0,#3
0001e0  e003              B        |L1.490|
                  |L1.482|
;;;120          pfSerialize(0, p);
0001e2  2000              MOVS     r0,#0
0001e4  9915              LDR      r1,[sp,#0x54]
0001e6  47d8              BLX      r11
0001e8  1e64              SUBS     r4,r4,#1              ;119
                  |L1.490|
0001ea  2c00              CMP      r4,#0                 ;119
0001ec  dcf9              BGT      |L1.482|
0001ee  1e76              SUBS     r6,r6,#1              ;104
                  |L1.496|
0001f0  2e00              CMP      r6,#0                 ;104
0001f2  daac              BGE      |L1.334|
;;;121        }
;;;122      }
;;;123    }
0001f4  b00b              ADD      sp,sp,#0x2c
0001f6  e8bd8ff0          POP      {r4-r11,pc}
;;;124    
                          ENDP

                  GUI_BMP_Serialize PROC
;;;128    */
;;;129    void GUI_BMP_Serialize(GUI_CALLBACK_VOID_U8_P * pfSerialize, void * p) {
0001fa  e92d41fc          PUSH     {r2-r8,lr}
0001fe  4605              MOV      r5,r0
000200  460c              MOV      r4,r1
;;;130      GUI_BMP_SerializeEx(pfSerialize, 0, 0, LCD_GetXSize(), LCD_GetYSize(), p);
000202  f7fffffe          BL       LCD_GetYSize
000206  4606              MOV      r6,r0
000208  f7fffffe          BL       LCD_GetXSize
00020c  4607              MOV      r7,r0
00020e  463b              MOV      r3,r7
000210  2200              MOVS     r2,#0
000212  4611              MOV      r1,r2
000214  4628              MOV      r0,r5
000216  e9cd6400          STRD     r6,r4,[sp,#0]
00021a  f7fffffe          BL       GUI_BMP_SerializeEx
;;;131    }
00021e  e8bd81fc          POP      {r2-r8,pc}
;;;132    
                          ENDP

