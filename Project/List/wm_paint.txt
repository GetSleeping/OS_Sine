; generated by ARM C/C++ Compiler, 4.1 [Build 894]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\Obj\wm_paint.o --asm_dir=.\List\ --list_dir=.\List\ --depend=.\Obj\wm_paint.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\Libraries\CMSIS\CM3\CoreSupport -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x\startup\arm -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\User -I..\BaseDrive -I..\Ucosii -I..\Ucosii\Port -I..\Ucosii\Src -I..\Ucosii\Include -I..\Ucgui -I..\Ucgui\Config -I..\Ucgui\GUI_X -I..\Ucgui\GUI -I..\Ucgui\GUI\ConvertColor -I..\Ucgui\GUI\ConvertMono -I..\Ucgui\GUI\Core -I..\Ucgui\GUI\Core -I..\Ucgui\GUI\LCDDriver -I..\Ucgui\GUI\MultiLayer -I..\Ucgui\GUI\Widget -I..\Ucgui\GUI\WM -I..\ExternalDrive\Lcd -I..\ExternalDrive\Touch -I..\Panel -I"D:\Program files\Keil\ARM\RV31\Inc" -I"D:\Program files\Keil\ARM\CMSIS\Include" -I"D:\Program files\Keil\ARM\Inc\ST\STM32F10x" -D__MICROLIB -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=.\Obj\wm_paint.crf ..\Ucgui\GUI\WM\WM_Paint.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=1

                  WM_Paint PROC
;;;36     
;;;37     void WM_Paint(WM_HWIN hWin) {
000000  b530              PUSH     {r4,r5,lr}
000002  b095              SUB      sp,sp,#0x54
000004  4604              MOV      r4,r0
;;;38       GUI_CONTEXT Context;
;;;39       WM_PAINTINFO PaintInfo;
;;;40       WM_Obj* pWin;
;;;41     
;;;42       WM_ASSERT_NOT_IN_PAINT();
;;;43       if (hWin) {
000006  b1f4              CBZ      r4,|L1.70|
;;;44         WM_LOCK();
000008  f7fffffe          BL       GUI_Lock
;;;45         GUI_SaveContext(&Context);
00000c  a803              ADD      r0,sp,#0xc
00000e  f7fffffe          BL       GUI_SaveContext_W
;;;46         pWin = WM_H2P(hWin);
000012  4620              MOV      r0,r4
000014  f7fffffe          BL       GUI_ALLOC_h2p
000018  4605              MOV      r5,r0
;;;47         WM_SelectWindow(hWin);
00001a  4620              MOV      r0,r4
00001c  f7fffffe          BL       WM_SelectWindow
;;;48         WM_SetDefault();
000020  f7fffffe          BL       WM_SetDefault
;;;49         WM_InvalidateWindow(hWin);  /* Important ... Window procedure is informed about invalid rect and may optimize */
000024  4620              MOV      r0,r4
000026  f7fffffe          BL       WM_InvalidateWindow
;;;50         /* Paint the window and its overlaying transparent windows */
;;;51         PaintInfo.hWin = hWin;
00002a  f8ad4004          STRH     r4,[sp,#4]
;;;52         PaintInfo.pWin = pWin;
00002e  9502              STR      r5,[sp,#8]
;;;53         WM__PaintWinAndOverlays(&PaintInfo);
000030  a801              ADD      r0,sp,#4
000032  f7fffffe          BL       WM__PaintWinAndOverlays
;;;54         WM_ValidateWindow(hWin);
000036  4620              MOV      r0,r4
000038  f7fffffe          BL       WM_ValidateWindow
;;;55         GUI_RestoreContext(&Context);
00003c  a803              ADD      r0,sp,#0xc
00003e  f7fffffe          BL       GUI_RestoreContext
;;;56         WM_UNLOCK();
000042  f7fffffe          BL       GUI_Unlock
                  |L1.70|
;;;57       }
;;;58     }
000046  b015              ADD      sp,sp,#0x54
000048  bd30              POP      {r4,r5,pc}
;;;59     
                          ENDP

