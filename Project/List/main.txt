; generated by ARM C/C++ Compiler, 4.1 [Build 894]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\Obj\main.o --asm_dir=.\List\ --list_dir=.\List\ --depend=.\Obj\main.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\Libraries\CMSIS\CM3\CoreSupport -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x\startup\arm -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\User -I..\BaseDrive -I..\Ucosii -I..\Ucosii\Port -I..\Ucosii\Src -I..\Ucosii\Include -I..\Ucgui -I..\Ucgui\Config -I..\Ucgui\GUI_X -I..\Ucgui\GUI -I..\Ucgui\GUI\ConvertColor -I..\Ucgui\GUI\ConvertMono -I..\Ucgui\GUI\Core -I..\Ucgui\GUI\Core -I..\Ucgui\GUI\LCDDriver -I..\Ucgui\GUI\MultiLayer -I..\Ucgui\GUI\Widget -I..\Ucgui\GUI\WM -I..\ExternalDrive\Lcd -I..\ExternalDrive\Touch -I..\Panel -I"D:\Program files\Keil\ARM\RV31\Inc" -I"D:\Program files\Keil\ARM\CMSIS\Include" -I"D:\Program files\Keil\ARM\Inc\ST\STM32F10x" -D__MICROLIB -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=.\Obj\main.crf ..\User\main.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  TouchTask PROC
;;;95     *******************************************************************************************/
;;;96     static void TouchTask(void *p_arg)
000000  f7fffffe          BL       GUI_CURSOR_Show
;;;97     {
;;;98     	GUI_CURSOR_Show();      //打开“鼠标显示”
;;;99     
;;;100        for(;;)
000004  bf00              NOP      
                  |L1.6|
;;;101        {
;;;102    		GUI_TOUCH_Exec();   //触摸检测
000006  f7fffffe          BL       GUI_TOUCH_Exec
;;;103    		OSTimeDly(15);      //延时
00000a  200f              MOVS     r0,#0xf
00000c  f7fffffe          BL       OSTimeDly
;;;104    	    GUI_Exec();         //界面绘制检测
000010  f7fffffe          BL       GUI_Exec
000014  e7f7              B        |L1.6|
;;;105        }
;;;106    }
;;;107    
                          ENDP

                  PanelTask PROC
;;;69     *******************************************************************************************/
;;;70     static void PanelTask(void *p_arg)
000016  b510              PUSH     {r4,lr}
;;;71     {
000018  4604              MOV      r4,r0
;;;72         GUI_Init();			 
00001a  f7fffffe          BL       GUI_Init
;;;73     	GUI_SetBkColor(GUI_GREEN);   //设置背景颜色
00001e  f44f407f          MOV      r0,#0xff00
000022  f7fffffe          BL       GUI_SetBkColor
;;;74     	GUI_SetColor(GUI_RED);      //设置前景颜色，及字体和绘图的颜色
000026  20ff              MOVS     r0,#0xff
000028  f7fffffe          BL       GUI_SetColor
;;;75     	GUI_Clear();                 //按指定颜色清屏
00002c  f7fffffe          BL       GUI_Clear
;;;76     
;;;77     	GUI_DispStringAt("UCGUI OK!",10,10);        //显示字符
000030  220a              MOVS     r2,#0xa
000032  4611              MOV      r1,r2
000034  a01f              ADR      r0,|L1.180|
000036  f7fffffe          BL       GUI_DispStringAt
;;;78         GUI_SetFont(&GUI_Font4x6);
00003a  4821              LDR      r0,|L1.192|
00003c  f7fffffe          BL       GUI_SetFont
;;;79         GUI_DispStringAt("www.openmcu.com",10,100); //显示字符
000040  2264              MOVS     r2,#0x64
000042  210a              MOVS     r1,#0xa
000044  a01f              ADR      r0,|L1.196|
000046  f7fffffe          BL       GUI_DispStringAt
;;;80         GUI_SetFont(&GUI_Font6x8);
00004a  4822              LDR      r0,|L1.212|
00004c  f7fffffe          BL       GUI_SetFont
;;;81         GUI_DispStringAt("www.openmcu.com",10,130); //显示字符
000050  2282              MOVS     r2,#0x82
000052  210a              MOVS     r1,#0xa
000054  a01b              ADR      r0,|L1.196|
000056  f7fffffe          BL       GUI_DispStringAt
;;;82         GUI_SetFont(&GUI_Font8x16);
00005a  481f              LDR      r0,|L1.216|
00005c  f7fffffe          BL       GUI_SetFont
;;;83         GUI_DispStringAt("www.openmcu.com",10,160); //显示字符
000060  22a0              MOVS     r2,#0xa0
000062  210a              MOVS     r1,#0xa
000064  a017              ADR      r0,|L1.196|
000066  f7fffffe          BL       GUI_DispStringAt
;;;84     
;;;85         Panel();                             //显示面板
00006a  f7fffffe          BL       Panel
;;;86     }
00006e  bd10              POP      {r4,pc}
;;;87     /********************************************************************************************
                          ENDP

                  startup_task PROC
;;;32     *******************************************************************************************/
;;;33     static void startup_task(void *p_arg)
000070  b510              PUSH     {r4,lr}
;;;34     {
000072  4604              MOV      r4,r0
;;;35         systick_init();               //心跳时钟初始化
000074  f7fffffe          BL       systick_init
;;;36     #if(OS_TASK_STAT_EN > 0)          //统计CPU使用率
;;;37         OSStatInit();
;;;38     #endif
;;;39         
;;;40         OSTaskCreate(PanelTask,(void*)0,&paneltask_stk[PANEL_TASK_STK_SIZE - 1],PANEL_TASK_PRIO);
000078  2305              MOVS     r3,#5
00007a  4a18              LDR      r2,|L1.220|
00007c  2100              MOVS     r1,#0
00007e  4818              LDR      r0,|L1.224|
000080  f7fffffe          BL       OSTaskCreate
;;;41         OSTaskCreate(TouchTask,(void*)0,&touchtask_stk[TOUCHTASK_STK_SIZE - 1],TOUCHTASK_PRIO);
000084  2314              MOVS     r3,#0x14
000086  4a17              LDR      r2,|L1.228|
000088  2100              MOVS     r1,#0
00008a  4817              LDR      r0,|L1.232|
00008c  f7fffffe          BL       OSTaskCreate
;;;42     
;;;43         OSTaskDel(OS_PRIO_SELF);       //自我任务删除
000090  20ff              MOVS     r0,#0xff
000092  f7fffffe          BL       OSTaskDel
;;;44     }
000096  bd10              POP      {r4,pc}
;;;45     /********************************************************************************************
                          ENDP

                  main PROC
;;;53     *******************************************************************************************/
;;;54     int main(void)
000098  b510              PUSH     {r4,lr}
;;;55     {
;;;56         OSInit();
00009a  f7fffffe          BL       OSInit
;;;57         OSTaskCreate(startup_task,(void*)0,&starup_task_stk[STARTUP_TASK_STK_SIZE - 1],STARTUP_TASK_PRIO);
00009e  2301              MOVS     r3,#1
0000a0  4a12              LDR      r2,|L1.236|
0000a2  2100              MOVS     r1,#0
0000a4  4812              LDR      r0,|L1.240|
0000a6  f7fffffe          BL       OSTaskCreate
;;;58         OSStart();
0000aa  f7fffffe          BL       OSStart
;;;59         return 0;
0000ae  2000              MOVS     r0,#0
;;;60     }
0000b0  bd10              POP      {r4,pc}
;;;61     /********************************************************************************************
                          ENDP

0000b2  0000              DCW      0x0000
                  |L1.180|
0000b4  55434755          DCB      "UCGUI OK!",0
0000b8  49204f4b
0000bc  2100    
0000be  00                DCB      0
0000bf  00                DCB      0
                  |L1.192|
                          DCD      GUI_Font4x6
                  |L1.196|
0000c4  7777772e          DCB      "www.openmcu.com",0
0000c8  6f70656e
0000cc  6d63752e
0000d0  636f6d00
                  |L1.212|
                          DCD      GUI_Font6x8
                  |L1.216|
                          DCD      GUI_Font8x16
                  |L1.220|
                          DCD      paneltask_stk+0x4e1c
                  |L1.224|
                          DCD      PanelTask
                  |L1.228|
                          DCD      touchtask_stk+0xf9c
                  |L1.232|
                          DCD      TouchTask
                  |L1.236|
                          DCD      starup_task_stk+0x13c
                  |L1.240|
                          DCD      startup_task

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  starup_task_stk
                          %        320
                  paneltask_stk
                          %        20000
                  touchtask_stk
                          %        4000

                  __ARM_use_no_argv EQU 0
