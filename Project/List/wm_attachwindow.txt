; generated by ARM C/C++ Compiler, 4.1 [Build 894]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\Obj\wm_attachwindow.o --asm_dir=.\List\ --list_dir=.\List\ --depend=.\Obj\wm_attachwindow.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\Libraries\CMSIS\CM3\CoreSupport -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x\startup\arm -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\User -I..\BaseDrive -I..\Ucosii -I..\Ucosii\Port -I..\Ucosii\Src -I..\Ucosii\Include -I..\Ucgui -I..\Ucgui\Config -I..\Ucgui\GUI_X -I..\Ucgui\GUI -I..\Ucgui\GUI\ConvertColor -I..\Ucgui\GUI\ConvertMono -I..\Ucgui\GUI\Core -I..\Ucgui\GUI\Core -I..\Ucgui\GUI\LCDDriver -I..\Ucgui\GUI\MultiLayer -I..\Ucgui\GUI\Widget -I..\Ucgui\GUI\WM -I..\ExternalDrive\Lcd -I..\ExternalDrive\Touch -I..\Panel -I"D:\Program files\Keil\ARM\RV31\Inc" -I"D:\Program files\Keil\ARM\CMSIS\Include" -I"D:\Program files\Keil\ARM\Inc\ST\STM32F10x" -D__MICROLIB -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=.\Obj\wm_attachwindow.crf ..\Ucgui\GUI\WM\WM_AttachWindow.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=1

                  WM_DetachWindow PROC
;;;33     */
;;;34     void WM_DetachWindow(WM_HWIN hWin) {
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  4604              MOV      r4,r0
;;;35       if (hWin) {
000006  b1e4              CBZ      r4,|L1.66|
;;;36         WM_HWIN hParent;
;;;37         WM_Obj* pWin;
;;;38         WM_LOCK();
000008  f7fffffe          BL       GUI_Lock
;;;39         pWin = WM_H2P(hWin);
00000c  4620              MOV      r0,r4
00000e  f7fffffe          BL       GUI_ALLOC_h2p
000012  4607              MOV      r7,r0
;;;40         hParent = pWin->hParent;
000014  f9b75016          LDRSH    r5,[r7,#0x16]
;;;41         if (hParent) {
000018  b185              CBZ      r5,|L1.60|
;;;42           WM_Obj* pParent;
;;;43           WM__DetachWindow(hWin);
00001a  4620              MOV      r0,r4
00001c  f7fffffe          BL       WM__DetachWindow
;;;44           pParent = WM_H2P(hParent);
000020  4628              MOV      r0,r5
000022  f7fffffe          BL       GUI_ALLOC_h2p
000026  4606              MOV      r6,r0
;;;45           WM_MoveWindow(hWin, -pParent->Rect.x0,  -pParent->Rect.y0);   /* Convert screen coordinates -> parent coordinates */
000028  f9b60002          LDRSH    r0,[r6,#2]
00002c  4242              RSBS     r2,r0,#0
00002e  f9b60000          LDRSH    r0,[r6,#0]
000032  4241              RSBS     r1,r0,#0
000034  4620              MOV      r0,r4
000036  f7fffffe          BL       WM_MoveWindow
;;;46           /* ToDo: Invalidate. If Parent window is located at (0,0). */
;;;47         }
00003a  bf00              NOP      
                  |L1.60|
;;;48         WM_UNLOCK();
00003c  f7fffffe          BL       GUI_Unlock
;;;49       }
000040  bf00              NOP      
                  |L1.66|
;;;50     }
000042  e8bd81f0          POP      {r4-r8,pc}
;;;51     
                          ENDP

                  WM_AttachWindow PROC
;;;55     */
;;;56     void WM_AttachWindow(WM_HWIN hWin, WM_HWIN hParent) {
000046  e92d41f0          PUSH     {r4-r8,lr}
00004a  4605              MOV      r5,r0
00004c  460c              MOV      r4,r1
;;;57       WM_LOCK();
00004e  f7fffffe          BL       GUI_Lock
;;;58       if (hParent && (hParent != hWin)) {
000052  b1e4              CBZ      r4,|L1.142|
000054  42ac              CMP      r4,r5
000056  d01a              BEQ      |L1.142|
;;;59         WM_Obj* pWin    = WM_H2P(hWin);
000058  4628              MOV      r0,r5
00005a  f7fffffe          BL       GUI_ALLOC_h2p
00005e  4607              MOV      r7,r0
;;;60         WM_Obj* pParent = WM_H2P(hParent);
000060  4620              MOV      r0,r4
000062  f7fffffe          BL       GUI_ALLOC_h2p
000066  4606              MOV      r6,r0
;;;61         if (pWin->hParent != hParent) {
000068  f9b70016          LDRSH    r0,[r7,#0x16]
00006c  42a0              CMP      r0,r4
00006e  d00d              BEQ      |L1.140|
;;;62           WM_DetachWindow(hWin);
000070  4628              MOV      r0,r5
000072  f7fffffe          BL       WM_DetachWindow
;;;63           WM__InsertWindowIntoList(hWin, hParent);
000076  4621              MOV      r1,r4
000078  4628              MOV      r0,r5
00007a  f7fffffe          BL       WM__InsertWindowIntoList
;;;64           WM_MoveWindow(hWin, pParent->Rect.x0,  pParent->Rect.y0);    /* Convert parent coordinates -> screen coordinates */
00007e  f9b62002          LDRSH    r2,[r6,#2]
000082  f9b61000          LDRSH    r1,[r6,#0]
000086  4628              MOV      r0,r5
000088  f7fffffe          BL       WM_MoveWindow
                  |L1.140|
;;;65         }
;;;66       }
00008c  bf00              NOP      
                  |L1.142|
;;;67       WM_UNLOCK();
00008e  f7fffffe          BL       GUI_Unlock
;;;68     }
000092  e8bd81f0          POP      {r4-r8,pc}
;;;69     
                          ENDP

                  WM_AttachWindowAt PROC
;;;73     */
;;;74     void WM_AttachWindowAt(WM_HWIN hWin, WM_HWIN hParent, int x, int y) {
000096  e92d41f0          PUSH     {r4-r8,lr}
00009a  4606              MOV      r6,r0
00009c  460f              MOV      r7,r1
00009e  4614              MOV      r4,r2
0000a0  461d              MOV      r5,r3
;;;75       WM_DetachWindow(hWin);
0000a2  4630              MOV      r0,r6
0000a4  f7fffffe          BL       WM_DetachWindow
;;;76       WM_MoveTo(hWin, x, y);
0000a8  462a              MOV      r2,r5
0000aa  4621              MOV      r1,r4
0000ac  4630              MOV      r0,r6
0000ae  f7fffffe          BL       WM_MoveTo
;;;77       WM_AttachWindow(hWin, hParent);
0000b2  4639              MOV      r1,r7
0000b4  4630              MOV      r0,r6
0000b6  f7fffffe          BL       WM_AttachWindow
;;;78     }
0000ba  e8bd81f0          POP      {r4-r8,pc}
;;;79     
                          ENDP

