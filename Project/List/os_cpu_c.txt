; generated by ARM C/C++ Compiler, 4.1 [Build 894]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\Obj\os_cpu_c.o --asm_dir=.\List\ --list_dir=.\List\ --depend=.\Obj\os_cpu_c.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\Libraries\CMSIS\CM3\CoreSupport -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x\startup\arm -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\User -I..\BaseDrive -I..\Ucosii -I..\Ucosii\Port -I..\Ucosii\Src -I..\Ucosii\Include -I..\Ucgui -I..\Ucgui\Config -I..\Ucgui\GUI_X -I..\Ucgui\GUI -I..\Ucgui\GUI\ConvertColor -I..\Ucgui\GUI\ConvertMono -I..\Ucgui\GUI\Core -I..\Ucgui\GUI\Core -I..\Ucgui\GUI\LCDDriver -I..\Ucgui\GUI\MultiLayer -I..\Ucgui\GUI\Widget -I..\Ucgui\GUI\WM -I..\ExternalDrive\Lcd -I..\ExternalDrive\Touch -I..\Panel -I"D:\Program files\Keil\ARM\RV31\Inc" -I"D:\Program files\Keil\ARM\CMSIS\Include" -I"D:\Program files\Keil\ARM\Inc\ST\STM32F10x" -D__MICROLIB -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=.\Obj\os_cpu_c.crf ..\Ucosii\Port\os_cpu_c.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  OSInitHookBegin PROC
;;;66     #if OS_CPU_HOOKS_EN > 0 && OS_VERSION > 203
;;;67     void  OSInitHookBegin (void)
000000  2000              MOVS     r0,#0
;;;68     {
;;;69     #if OS_TMR_EN > 0
;;;70         OSTmrCtr = 0;
000002  492b              LDR      r1,|L1.176|
000004  8008              STRH     r0,[r1,#0]
;;;71     #endif
;;;72     }
000006  4770              BX       lr
;;;73     #endif
                          ENDP

                  OSInitHookEnd PROC
;;;87     #if OS_CPU_HOOKS_EN > 0 && OS_VERSION > 203
;;;88     void  OSInitHookEnd (void)
000008  4770              BX       lr
;;;89     {
;;;90     }
;;;91     #endif
                          ENDP

                  OSTaskCreateHook PROC
;;;104    #if OS_CPU_HOOKS_EN > 0
;;;105    void  OSTaskCreateHook (OS_TCB *ptcb)
00000a  4770              BX       lr
;;;106    {
;;;107    #if OS_APP_HOOKS_EN > 0
;;;108        App_TaskCreateHook(ptcb);
;;;109    #else
;;;110        (void)ptcb;                                  /* Prevent compiler warning                           */
;;;111    #endif
;;;112    }
;;;113    #endif
                          ENDP

                  OSTaskDelHook PROC
;;;127    #if OS_CPU_HOOKS_EN > 0
;;;128    void  OSTaskDelHook (OS_TCB *ptcb)
00000c  4770              BX       lr
;;;129    {
;;;130    #if OS_APP_HOOKS_EN > 0
;;;131        App_TaskDelHook(ptcb);
;;;132    #else
;;;133        (void)ptcb;                                  /* Prevent compiler warning                           */
;;;134    #endif
;;;135    }
;;;136    #endif
                          ENDP

                  OSTaskIdleHook PROC
;;;150    #if OS_CPU_HOOKS_EN > 0 && OS_VERSION >= 251
;;;151    void  OSTaskIdleHook (void)
00000e  4770              BX       lr
;;;152    {
;;;153    #if OS_APP_HOOKS_EN > 0
;;;154        App_TaskIdleHook();
;;;155    #endif
;;;156    }
;;;157    #endif
                          ENDP

                  OSTaskStatHook PROC
;;;170    #if OS_CPU_HOOKS_EN > 0
;;;171    void  OSTaskStatHook (void)
000010  4770              BX       lr
;;;172    {
;;;173    #if OS_APP_HOOKS_EN > 0
;;;174        App_TaskStatHook();
;;;175    #endif
;;;176    }
;;;177    #endif
                          ENDP

                  OSTaskStkInit PROC
;;;207    
;;;208    OS_STK *OSTaskStkInit (void (*task)(void *p_arg), void *p_arg, OS_STK *ptos, INT16U opt)
000012  b570              PUSH     {r4-r6,lr}
;;;209    {
000014  4604              MOV      r4,r0
;;;210        OS_STK *stk;
;;;211    
;;;212    
;;;213        (void)opt;                                   /* 'opt' is not used, prevent warning                 */
;;;214        stk       = ptos;                            /* Load stack pointer                                 */
000016  4610              MOV      r0,r2
;;;215    
;;;216                                                     /* Registers stacked as if auto-saved on exception    */
;;;217        *(stk)    = (INT32U)0x01000000L;             /* xPSR                                               */
000018  f04f7580          MOV      r5,#0x1000000
00001c  6005              STR      r5,[r0,#0]
;;;218        *(--stk)  = (INT32U)task;                    /* Entry Point                                        */
00001e  1f05              SUBS     r5,r0,#4
000020  4628              MOV      r0,r5
000022  602c              STR      r4,[r5,#0]
;;;219        *(--stk)  = (INT32U)0xFFFFFFFEL;             /* R14 (LR) (init value will cause fault if ever used)*/
000024  f06f0601          MVN      r6,#1
000028  1f05              SUBS     r5,r0,#4
00002a  4628              MOV      r0,r5
00002c  602e              STR      r6,[r5,#0]
;;;220        *(--stk)  = (INT32U)0x12121212L;             /* R12                                                */
00002e  f04f3612          MOV      r6,#0x12121212
000032  1f05              SUBS     r5,r0,#4
000034  4628              MOV      r0,r5
000036  602e              STR      r6,[r5,#0]
;;;221        *(--stk)  = (INT32U)0x03030303L;             /* R3                                                 */
000038  f04f3603          MOV      r6,#0x3030303
00003c  1f05              SUBS     r5,r0,#4
00003e  4628              MOV      r0,r5
000040  602e              STR      r6,[r5,#0]
;;;222        *(--stk)  = (INT32U)0x02020202L;             /* R2                                                 */
000042  f04f3602          MOV      r6,#0x2020202
000046  1f05              SUBS     r5,r0,#4
000048  4628              MOV      r0,r5
00004a  602e              STR      r6,[r5,#0]
;;;223        *(--stk)  = (INT32U)0x01010101L;             /* R1                                                 */
00004c  1076              ASRS     r6,r6,#1
00004e  1f05              SUBS     r5,r0,#4
000050  4628              MOV      r0,r5
000052  602e              STR      r6,[r5,#0]
;;;224        *(--stk)  = (INT32U)p_arg;                   /* R0 : argument                                      */
000054  1f05              SUBS     r5,r0,#4
000056  4628              MOV      r0,r5
000058  6029              STR      r1,[r5,#0]
;;;225    
;;;226                                                     /* Remaining registers saved on process stack         */
;;;227        *(--stk)  = (INT32U)0x11111111L;             /* R11                                                */
00005a  f04f3611          MOV      r6,#0x11111111
00005e  1f05              SUBS     r5,r0,#4
000060  4628              MOV      r0,r5
000062  602e              STR      r6,[r5,#0]
;;;228        *(--stk)  = (INT32U)0x10101010L;             /* R10                                                */
000064  f04f3610          MOV      r6,#0x10101010
000068  1f05              SUBS     r5,r0,#4
00006a  4628              MOV      r0,r5
00006c  602e              STR      r6,[r5,#0]
;;;229        *(--stk)  = (INT32U)0x09090909L;             /* R9                                                 */
00006e  f04f3609          MOV      r6,#0x9090909
000072  1f05              SUBS     r5,r0,#4
000074  4628              MOV      r0,r5
000076  602e              STR      r6,[r5,#0]
;;;230        *(--stk)  = (INT32U)0x08080808L;             /* R8                                                 */
000078  f04f3608          MOV      r6,#0x8080808
00007c  1f05              SUBS     r5,r0,#4
00007e  4628              MOV      r0,r5
000080  602e              STR      r6,[r5,#0]
;;;231        *(--stk)  = (INT32U)0x07070707L;             /* R7                                                 */
000082  f04f3607          MOV      r6,#0x7070707
000086  1f05              SUBS     r5,r0,#4
000088  4628              MOV      r0,r5
00008a  602e              STR      r6,[r5,#0]
;;;232        *(--stk)  = (INT32U)0x06060606L;             /* R6                                                 */
00008c  f04f3606          MOV      r6,#0x6060606
000090  1f05              SUBS     r5,r0,#4
000092  4628              MOV      r0,r5
000094  602e              STR      r6,[r5,#0]
;;;233        *(--stk)  = (INT32U)0x05050505L;             /* R5                                                 */
000096  f04f3605          MOV      r6,#0x5050505
00009a  1f05              SUBS     r5,r0,#4
00009c  4628              MOV      r0,r5
00009e  602e              STR      r6,[r5,#0]
;;;234        *(--stk)  = (INT32U)0x04040404L;             /* R4                                                 */
0000a0  f04f3604          MOV      r6,#0x4040404
0000a4  1f05              SUBS     r5,r0,#4
0000a6  4628              MOV      r0,r5
0000a8  602e              STR      r6,[r5,#0]
;;;235    
;;;236        return (stk);
;;;237    }
0000aa  bd70              POP      {r4-r6,pc}
;;;238    
                          ENDP

                  OSTaskSwHook PROC
;;;254    #if (OS_CPU_HOOKS_EN > 0) && (OS_TASK_SW_HOOK_EN > 0)
;;;255    void  OSTaskSwHook (void)
0000ac  4770              BX       lr
;;;256    {
;;;257    #if OS_APP_HOOKS_EN > 0
;;;258        App_TaskSwHook();
;;;259    #endif
;;;260    }
;;;261    #endif
                          ENDP

                  OSTCBInitHook PROC
;;;274    #if OS_CPU_HOOKS_EN > 0 && OS_VERSION > 203
;;;275    void  OSTCBInitHook (OS_TCB *ptcb)
0000ae  4770              BX       lr
;;;276    {
;;;277    #if OS_APP_HOOKS_EN > 0
;;;278        App_TCBInitHook(ptcb);
;;;279    #else
;;;280        (void)ptcb;                                  /* Prevent compiler warning                           */
;;;281    #endif
;;;282    }
;;;283    #endif
                          ENDP

                  |L1.176|
                          DCD      OSTmrCtr

                          AREA ||.data||, DATA, ALIGN=1

                  OSTmrCtr
000000  0000              DCB      0x00,0x00
