; generated by ARM C/C++ Compiler, 4.1 [Build 894]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\Obj\lcdrle8.o --asm_dir=.\List\ --list_dir=.\List\ --depend=.\Obj\lcdrle8.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\Libraries\CMSIS\CM3\CoreSupport -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x\startup\arm -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\User -I..\BaseDrive -I..\Ucosii -I..\Ucosii\Port -I..\Ucosii\Src -I..\Ucosii\Include -I..\Ucgui -I..\Ucgui\Config -I..\Ucgui\GUI_X -I..\Ucgui\GUI -I..\Ucgui\GUI\ConvertColor -I..\Ucgui\GUI\ConvertMono -I..\Ucgui\GUI\Core -I..\Ucgui\GUI\Core -I..\Ucgui\GUI\LCDDriver -I..\Ucgui\GUI\MultiLayer -I..\Ucgui\GUI\Widget -I..\Ucgui\GUI\WM -I..\ExternalDrive\Lcd -I..\ExternalDrive\Touch -I..\Panel -I"D:\Program files\Keil\ARM\RV31\Inc" -I"D:\Program files\Keil\ARM\CMSIS\Include" -I"D:\Program files\Keil\ARM\Inc\ST\STM32F10x" -D__MICROLIB -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=.\Obj\lcdrle8.crf ..\Ucgui\GUI\Core\LCDRLE8.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  _DrawBitmap_RLE8 PROC
;;;47     */
;;;48     static void _DrawBitmap_RLE8(int x0,int y0,int xsize, int ysize, const U8 GUI_UNI_PTR * pPixel, const LCD_LOGPALETTE GUI_UNI_PTR * pLogPal, int xMag, int yMag) {
000000  e92d4fff          PUSH     {r0-r11,lr}
000004  b08b              SUB      sp,sp,#0x2c
000006  4680              MOV      r8,r0
000008  460e              MOV      r6,r1
00000a  4693              MOV      r11,r2
00000c  f8dd906c          LDR      r9,[sp,#0x6c]
000010  9f18              LDR      r7,[sp,#0x60]
;;;49       LCD_PIXELINDEX aColorIndex[2];
;;;50       LCD_PIXELINDEX PixelIndex;
;;;51       int xi,y;
;;;52       int xL, yL;
;;;53       const U8 GUI_UNI_PTR * pPixelOrg = pPixel;
000012  9706              STR      r7,[sp,#0x18]
;;;54       char NoTrans = !(GUI_Context.DrawMode & LCD_DRAWMODE_TRANS);
000014  4883              LDR      r0,|L1.548|
000016  7b00              LDRB     r0,[r0,#0xc]  ; GUI_Context
000018  2101              MOVS     r1,#1
00001a  ea210050          BIC      r0,r1,r0,LSR #1
00001e  9005              STR      r0,[sp,#0x14]
;;;55       const LCD_PIXELINDEX* pTrans =NULL;
000020  2000              MOVS     r0,#0
000022  9004              STR      r0,[sp,#0x10]
;;;56       char IsMagnified = ((yMag | xMag) != 1);
000024  981a              LDR      r0,[sp,#0x68]
000026  ea490000          ORR      r0,r9,r0
00002a  2801              CMP      r0,#1
00002c  d001              BEQ      |L1.50|
00002e  2001              MOVS     r0,#1
000030  e000              B        |L1.52|
                  |L1.50|
000032  2000              MOVS     r0,#0
                  |L1.52|
000034  9003              STR      r0,[sp,#0xc]
;;;57       aColorIndex[0] = LCD_ACOLORINDEX[0];
000036  487b              LDR      r0,|L1.548|
000038  8800              LDRH     r0,[r0,#0]  ; GUI_Context
00003a  f8ad0028          STRH     r0,[sp,#0x28]
;;;58       aColorIndex[1] = LCD_ACOLORINDEX[1];
00003e  4879              LDR      r0,|L1.548|
000040  8840              LDRH     r0,[r0,#2]  ; GUI_Context
000042  f8ad002a          STRH     r0,[sp,#0x2a]
;;;59       /* Handle color translation */
;;;60       if ((pLogPal) && (pLogPal->pPalEntries)) {
000046  9819              LDR      r0,[sp,#0x64]
000048  b150              CBZ      r0,|L1.96|
00004a  9819              LDR      r0,[sp,#0x64]
00004c  6880              LDR      r0,[r0,#8]
00004e  b138              CBZ      r0,|L1.96|
;;;61         if ((pTrans = LCD_GetpPalConvTable(pLogPal)) == NULL) {
000050  9819              LDR      r0,[sp,#0x64]
000052  f7fffffe          BL       LCD_GetpPalConvTable
000056  9004              STR      r0,[sp,#0x10]
000058  b910              CBNZ     r0,|L1.96|
                  |L1.90|
;;;62           return;
;;;63         }
;;;64       }
;;;65      /* Check if we can limit the number of lines due to clipping) */
;;;66       if (yMag == 1) {
;;;67         if (ysize > GUI_Context.ClipRect.y1 - y0 + 1)
;;;68           ysize = GUI_Context.ClipRect.y1 - y0 + 1;
;;;69       }
;;;70       /* Init variables for looping */
;;;71       xi=0;
;;;72       y =0;
;;;73       /* Check if we can use the cache to save some unnecessary iterations */
;;;74       if (!IsMagnified) {
;;;75         int yDiff = GUI_Context.ClipRect.y0 - y0;
;;;76         if ((Cache.pPixelStart == pPixel) && (yDiff > Cache.y)) {
;;;77           /* Accept cache values */
;;;78           y = Cache.y;
;;;79           xi = Cache.x;
;;;80           pPixel = Cache.pPixel;
;;;81         }
;;;82       }
;;;83       /* Init values for caching */
;;;84       Cache.pPixel = Cache.pPixelStart = pPixelOrg;
;;;85       Cache.x = Cache.y = 0;
;;;86       /* Repeat until we have reached bottom */
;;;87       for (; y < ysize; ) {
;;;88         U8 Cmd  = *pPixel++;
;;;89         U8 Data = *pPixel++;
;;;90         if (Cmd) {
;;;91           /* Save cache info */
;;;92           Cache.pPixel = pPixel-2;
;;;93           Cache.x = xi;
;;;94           Cache.y = y;
;;;95           LCD_ACOLORINDEX[1] = pTrans ? *(pTrans+Data) : Data;
;;;96           while (Cmd) {
;;;97             int xi1 = xi+Cmd;
;;;98             if (xi1>=xsize)
;;;99               xi1 = xsize;
;;;100            Cmd -= (xi1-xi);
;;;101            if (Data || NoTrans) {  /* Skip transparent pixels */
;;;102              if (IsMagnified) {
;;;103                xL = xMag * xi + x0;
;;;104                yL = yMag * y + y0;
;;;105                LCD_FillRect(xL, yL, xL + xMag * (xi1 - xi) -1 , yL + yMag - 1);
;;;106              } else {
;;;107                LCD_DrawHLine(x0+xi, y + y0, xi1+x0-1);
;;;108              }
;;;109            }
;;;110            xi =xi1;
;;;111            if (xi1==xsize) {
;;;112              y++;
;;;113              xi=0;
;;;114            }
;;;115          }
;;;116        } else {
;;;117          do {
;;;118            U8 Index = *pPixel++;
;;;119            if (Index || NoTrans) {  /* Skip transparent pixels */
;;;120              int x = x0+xi;
;;;121              PixelIndex = pTrans ? *(pTrans+Index) : Index;
;;;122              if (IsMagnified) {
;;;123                LCD_SetColorIndex(PixelIndex);
;;;124                xL = xMag * xi + x0;
;;;125                yL = yMag * y + y0;
;;;126                LCD_FillRect(xL, yL, xL + xMag -1 , yL + yMag - 1);
;;;127              } else {
;;;128                #if 1 /* High speed variant */
;;;129                  if (y + y0>= GUI_Context.ClipRect.y0)
;;;130                    if (x >= GUI_Context.ClipRect.x0)
;;;131                      if (x <= GUI_Context.ClipRect.x1)
;;;132                        LCDDEV_L0_SetPixelIndex(x, y + y0, PixelIndex);
;;;133                #else
;;;134                  LCD_SetPixelIndex(x, y + y0, PixelIndex);
;;;135                #endif
;;;136              }
;;;137            }
;;;138            if (++xi >= xsize) {
;;;139              xi=0; y++;
;;;140              if (y >= ysize)
;;;141                break;
;;;142            }
;;;143          } while (--Data);
;;;144        }
;;;145      }
;;;146      LCD_ACOLORINDEX[0] = aColorIndex[0];
;;;147      LCD_ACOLORINDEX[1] = aColorIndex[1];
;;;148    }
00005a  b00f              ADD      sp,sp,#0x3c
00005c  e8bd8ff0          POP      {r4-r11,pc}
                  |L1.96|
000060  f1b90f01          CMP      r9,#1                 ;66
000064  d10d              BNE      |L1.130|
000066  486f              LDR      r0,|L1.548|
000068  f9b0000a          LDRSH    r0,[r0,#0xa]          ;67
00006c  1b80              SUBS     r0,r0,r6              ;67
00006e  1c40              ADDS     r0,r0,#1              ;67
000070  990e              LDR      r1,[sp,#0x38]         ;67
000072  4288              CMP      r0,r1                 ;67
000074  da05              BGE      |L1.130|
000076  486b              LDR      r0,|L1.548|
000078  f9b0000a          LDRSH    r0,[r0,#0xa]          ;68
00007c  1b80              SUBS     r0,r0,r6              ;68
00007e  1c40              ADDS     r0,r0,#1              ;68
000080  900e              STR      r0,[sp,#0x38]         ;68
                  |L1.130|
000082  2400              MOVS     r4,#0                 ;71
000084  2500              MOVS     r5,#0                 ;72
000086  9803              LDR      r0,[sp,#0xc]          ;74
000088  b980              CBNZ     r0,|L1.172|
00008a  4966              LDR      r1,|L1.548|
00008c  f9b11006          LDRSH    r1,[r1,#6]            ;75  ; GUI_Context
000090  1b88              SUBS     r0,r1,r6              ;75
000092  4965              LDR      r1,|L1.552|
000094  68c9              LDR      r1,[r1,#0xc]          ;76  ; Cache
000096  42b9              CMP      r1,r7                 ;76
000098  d107              BNE      |L1.170|
00009a  4963              LDR      r1,|L1.552|
00009c  6849              LDR      r1,[r1,#4]            ;76  ; Cache
00009e  4281              CMP      r1,r0                 ;76
0000a0  da03              BGE      |L1.170|
0000a2  4961              LDR      r1,|L1.552|
0000a4  684d              LDR      r5,[r1,#4]            ;78  ; Cache
0000a6  680c              LDR      r4,[r1,#0]            ;79  ; Cache
0000a8  688f              LDR      r7,[r1,#8]            ;80  ; Cache
                  |L1.170|
0000aa  bf00              NOP                            ;82
                  |L1.172|
0000ac  495e              LDR      r1,|L1.552|
0000ae  9806              LDR      r0,[sp,#0x18]         ;84
0000b0  60c8              STR      r0,[r1,#0xc]          ;84  ; Cache
0000b2  6088              STR      r0,[r1,#8]            ;84  ; Cache
0000b4  2000              MOVS     r0,#0                 ;85
0000b6  6048              STR      r0,[r1,#4]            ;85  ; Cache
0000b8  6008              STR      r0,[r1,#0]            ;85  ; Cache
0000ba  e0a6              B        |L1.522|
                  |L1.188|
0000bc  f8170b01          LDRB     r0,[r7],#1            ;88
0000c0  9002              STR      r0,[sp,#8]            ;88
0000c2  f8170b01          LDRB     r0,[r7],#1            ;89
0000c6  9001              STR      r0,[sp,#4]            ;89
0000c8  9802              LDR      r0,[sp,#8]            ;90
0000ca  2800              CMP      r0,#0                 ;90
0000cc  d04a              BEQ      |L1.356|
0000ce  1eb8              SUBS     r0,r7,#2              ;92
0000d0  4955              LDR      r1,|L1.552|
0000d2  6088              STR      r0,[r1,#8]            ;92  ; Cache
0000d4  4608              MOV      r0,r1                 ;93
0000d6  6004              STR      r4,[r0,#0]            ;93  ; Cache
0000d8  6045              STR      r5,[r0,#4]            ;94  ; Cache
0000da  9804              LDR      r0,[sp,#0x10]         ;95
0000dc  b120              CBZ      r0,|L1.232|
0000de  9901              LDR      r1,[sp,#4]            ;95
0000e0  9804              LDR      r0,[sp,#0x10]         ;95
0000e2  f8300011          LDRH     r0,[r0,r1,LSL #1]     ;95
0000e6  e000              B        |L1.234|
                  |L1.232|
0000e8  9801              LDR      r0,[sp,#4]            ;95
                  |L1.234|
0000ea  494e              LDR      r1,|L1.548|
0000ec  8048              STRH     r0,[r1,#2]            ;95
0000ee  e035              B        |L1.348|
                  |L1.240|
0000f0  9802              LDR      r0,[sp,#8]            ;97
0000f2  eb040a00          ADD      r10,r4,r0             ;97
0000f6  45da              CMP      r10,r11               ;98
0000f8  db00              BLT      |L1.252|
0000fa  46da              MOV      r10,r11               ;99
                  |L1.252|
0000fc  ebaa0104          SUB      r1,r10,r4             ;100
000100  9802              LDR      r0,[sp,#8]            ;100
000102  1a40              SUBS     r0,r0,r1              ;100
000104  b2c0              UXTB     r0,r0                 ;100
000106  9002              STR      r0,[sp,#8]            ;100
000108  9801              LDR      r0,[sp,#4]            ;101
00010a  b908              CBNZ     r0,|L1.272|
00010c  9805              LDR      r0,[sp,#0x14]         ;101
00010e  b1f8              CBZ      r0,|L1.336|
                  |L1.272|
000110  9803              LDR      r0,[sp,#0xc]          ;102
000112  b1a8              CBZ      r0,|L1.320|
000114  981a              LDR      r0,[sp,#0x68]         ;103
000116  fb008004          MLA      r0,r0,r4,r8           ;103
00011a  9008              STR      r0,[sp,#0x20]         ;103
00011c  fb096005          MLA      r0,r9,r5,r6           ;104
000120  9007              STR      r0,[sp,#0x1c]         ;104
000122  9807              LDR      r0,[sp,#0x1c]         ;105
000124  4448              ADD      r0,r0,r9              ;105
000126  1e43              SUBS     r3,r0,#1              ;105
000128  ebaa0c04          SUB      r12,r10,r4            ;105
00012c  991a              LDR      r1,[sp,#0x68]         ;105
00012e  9808              LDR      r0,[sp,#0x20]         ;105
000130  fb01000c          MLA      r0,r1,r12,r0          ;105
000134  1e42              SUBS     r2,r0,#1              ;105
000136  e9dd1007          LDRD     r1,r0,[sp,#0x1c]      ;105
00013a  f7fffffe          BL       LCD_FillRect
00013e  e007              B        |L1.336|
                  |L1.320|
000140  eb0a0308          ADD      r3,r10,r8             ;107
000144  1e5a              SUBS     r2,r3,#1              ;107
000146  19a9              ADDS     r1,r5,r6              ;107
000148  eb080004          ADD      r0,r8,r4              ;107
00014c  f7fffffe          BL       LCD_DrawHLine
                  |L1.336|
000150  4654              MOV      r4,r10                ;110
000152  45da              CMP      r10,r11               ;111
000154  d101              BNE      |L1.346|
000156  1c6d              ADDS     r5,r5,#1              ;112
000158  2400              MOVS     r4,#0                 ;113
                  |L1.346|
00015a  bf00              NOP                            ;115
                  |L1.348|
00015c  9802              LDR      r0,[sp,#8]            ;96
00015e  2800              CMP      r0,#0                 ;96
000160  d1c6              BNE      |L1.240|
000162  e051              B        |L1.520|
                  |L1.356|
000164  bf00              NOP                            ;117
                  |L1.358|
000166  f8170b01          LDRB     r0,[r7],#1            ;118
00016a  9000              STR      r0,[sp,#0]            ;118
00016c  9800              LDR      r0,[sp,#0]            ;119
00016e  b908              CBNZ     r0,|L1.372|
000170  9805              LDR      r0,[sp,#0x14]         ;119
000172  b3c0              CBZ      r0,|L1.486|
                  |L1.372|
000174  eb080a04          ADD      r10,r8,r4             ;120
000178  9804              LDR      r0,[sp,#0x10]         ;121
00017a  b120              CBZ      r0,|L1.390|
00017c  9900              LDR      r1,[sp,#0]            ;121
00017e  9804              LDR      r0,[sp,#0x10]         ;121
000180  f8300011          LDRH     r0,[r0,r1,LSL #1]     ;121
000184  e000              B        |L1.392|
                  |L1.390|
000186  9800              LDR      r0,[sp,#0]            ;121
                  |L1.392|
000188  9009              STR      r0,[sp,#0x24]         ;121
00018a  9803              LDR      r0,[sp,#0xc]          ;122
00018c  b1a8              CBZ      r0,|L1.442|
00018e  9809              LDR      r0,[sp,#0x24]         ;123
000190  f7fffffe          BL       LCD_SetColorIndex
000194  981a              LDR      r0,[sp,#0x68]         ;124
000196  fb008004          MLA      r0,r0,r4,r8           ;124
00019a  9008              STR      r0,[sp,#0x20]         ;124
00019c  fb096005          MLA      r0,r9,r5,r6           ;125
0001a0  9007              STR      r0,[sp,#0x1c]         ;125
0001a2  9807              LDR      r0,[sp,#0x1c]         ;126
0001a4  4448              ADD      r0,r0,r9              ;126
0001a6  1e43              SUBS     r3,r0,#1              ;126
0001a8  991a              LDR      r1,[sp,#0x68]         ;126
0001aa  9808              LDR      r0,[sp,#0x20]         ;126
0001ac  4408              ADD      r0,r0,r1              ;126
0001ae  1e42              SUBS     r2,r0,#1              ;126
0001b0  e9dd1007          LDRD     r1,r0,[sp,#0x1c]      ;126
0001b4  f7fffffe          BL       LCD_FillRect
0001b8  e014              B        |L1.484|
                  |L1.442|
0001ba  19a9              ADDS     r1,r5,r6              ;129
0001bc  4819              LDR      r0,|L1.548|
0001be  f9b00006          LDRSH    r0,[r0,#6]            ;129
0001c2  4281              CMP      r1,r0                 ;129
0001c4  db0e              BLT      |L1.484|
0001c6  4817              LDR      r0,|L1.548|
0001c8  f9b00004          LDRSH    r0,[r0,#4]            ;130  ; GUI_Context
0001cc  4550              CMP      r0,r10                ;130
0001ce  dc09              BGT      |L1.484|
0001d0  4814              LDR      r0,|L1.548|
0001d2  f9b00008          LDRSH    r0,[r0,#8]            ;131
0001d6  4550              CMP      r0,r10                ;131
0001d8  db04              BLT      |L1.484|
0001da  19a9              ADDS     r1,r5,r6              ;132
0001dc  4650              MOV      r0,r10                ;132
0001de  9a09              LDR      r2,[sp,#0x24]         ;132
0001e0  f7fffffe          BL       LCD_L0_SetPixelIndex
                  |L1.484|
0001e4  bf00              NOP                            ;137
                  |L1.486|
0001e6  1c60              ADDS     r0,r4,#1              ;138
0001e8  4604              MOV      r4,r0                 ;138
0001ea  4558              CMP      r0,r11                ;138
0001ec  db05              BLT      |L1.506|
0001ee  2400              MOVS     r4,#0                 ;139
0001f0  1c6d              ADDS     r5,r5,#1              ;139
0001f2  980e              LDR      r0,[sp,#0x38]         ;140
0001f4  4285              CMP      r5,r0                 ;140
0001f6  db00              BLT      |L1.506|
0001f8  e005              B        |L1.518|
                  |L1.506|
0001fa  9801              LDR      r0,[sp,#4]            ;143
0001fc  1e40              SUBS     r0,r0,#1              ;143
0001fe  f01000ff          ANDS     r0,r0,#0xff           ;143
000202  9001              STR      r0,[sp,#4]            ;143
000204  d1af              BNE      |L1.358|
                  |L1.518|
000206  bf00              NOP                            ;141
                  |L1.520|
000208  bf00              NOP                            ;145
                  |L1.522|
00020a  980e              LDR      r0,[sp,#0x38]         ;87
00020c  4285              CMP      r5,r0                 ;87
00020e  f6ffaf55          BLT      |L1.188|
000212  f8bd0028          LDRH     r0,[sp,#0x28]         ;146
000216  4903              LDR      r1,|L1.548|
000218  8008              STRH     r0,[r1,#0]            ;146
00021a  f8bd002a          LDRH     r0,[sp,#0x2a]         ;147
00021e  8048              STRH     r0,[r1,#2]            ;147
000220  bf00              NOP      
000222  e71a              B        |L1.90|
;;;149    
                          ENDP

                  |L1.548|
                          DCD      GUI_Context
                  |L1.552|
                          DCD      Cache

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  Cache
                          %        16

                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

                  GUI_BitmapMethodsRLE8
                          DCD      _DrawBitmap_RLE8
                          DCD      0x00000000
