; generated by ARM C/C++ Compiler, 4.1 [Build 894]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\Obj\gui_uc.o --asm_dir=.\List\ --list_dir=.\List\ --depend=.\Obj\gui_uc.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\Libraries\CMSIS\CM3\CoreSupport -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x\startup\arm -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\User -I..\BaseDrive -I..\Ucosii -I..\Ucosii\Port -I..\Ucosii\Src -I..\Ucosii\Include -I..\Ucgui -I..\Ucgui\Config -I..\Ucgui\GUI_X -I..\Ucgui\GUI -I..\Ucgui\GUI\ConvertColor -I..\Ucgui\GUI\ConvertMono -I..\Ucgui\GUI\Core -I..\Ucgui\GUI\Core -I..\Ucgui\GUI\LCDDriver -I..\Ucgui\GUI\MultiLayer -I..\Ucgui\GUI\Widget -I..\Ucgui\GUI\WM -I..\ExternalDrive\Lcd -I..\ExternalDrive\Touch -I..\Panel -I"D:\Program files\Keil\ARM\RV31\Inc" -I"D:\Program files\Keil\ARM\CMSIS\Include" -I"D:\Program files\Keil\ARM\Inc\ST\STM32F10x" -D__MICROLIB -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=.\Obj\gui_uc.crf ..\Ucgui\GUI\Core\GUI_UC.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  GUI_UC_GetCharSize PROC
;;;31     */
;;;32     int GUI_UC_GetCharSize(const char GUI_UNI_PTR * s) {
000000  b570              PUSH     {r4-r6,lr}
000002  4604              MOV      r4,r0
;;;33       int r;
;;;34       GUI_LOCK();
000004  f7fffffe          BL       GUI_Lock
;;;35       r =  GUI_Context.pUC_API->pfGetCharSize(s);
000008  4836              LDR      r0,|L1.228|
00000a  69c0              LDR      r0,[r0,#0x1c]  ; GUI_Context
00000c  6841              LDR      r1,[r0,#4]
00000e  4620              MOV      r0,r4
000010  4788              BLX      r1
000012  4605              MOV      r5,r0
;;;36       GUI_UNLOCK();
000014  f7fffffe          BL       GUI_Unlock
;;;37       return r;
000018  4628              MOV      r0,r5
;;;38     }
00001a  bd70              POP      {r4-r6,pc}
;;;39     
                          ENDP

                  GUI_UC_GetCharCode PROC
;;;43     */
;;;44     U16 GUI_UC_GetCharCode(const char GUI_UNI_PTR * s) {
00001c  b570              PUSH     {r4-r6,lr}
00001e  4604              MOV      r4,r0
;;;45       U16 r;
;;;46       GUI_LOCK();
000020  f7fffffe          BL       GUI_Lock
;;;47       r =  GUI_Context.pUC_API->pfGetCharCode(s);
000024  482f              LDR      r0,|L1.228|
000026  69c0              LDR      r0,[r0,#0x1c]  ; GUI_Context
000028  6801              LDR      r1,[r0,#0]
00002a  4620              MOV      r0,r4
00002c  4788              BLX      r1
00002e  4605              MOV      r5,r0
;;;48       GUI_UNLOCK();
000030  f7fffffe          BL       GUI_Unlock
;;;49       return r;
000034  4628              MOV      r0,r5
;;;50     }
000036  bd70              POP      {r4-r6,pc}
;;;51     
                          ENDP

                  GUI_UC_Encode PROC
;;;55     */
;;;56     int GUI_UC_Encode(char* s, U16 Char) {
000038  b570              PUSH     {r4-r6,lr}
00003a  4604              MOV      r4,r0
00003c  460d              MOV      r5,r1
;;;57       #if GUI_COMPILER_SUPPORTS_FP
;;;58         int r;
;;;59         GUI_LOCK();
00003e  f7fffffe          BL       GUI_Lock
;;;60         r = GUI_Context.pUC_API->pfEncode(s, Char);
000042  4828              LDR      r0,|L1.228|
000044  69c0              LDR      r0,[r0,#0x1c]  ; GUI_Context
000046  4629              MOV      r1,r5
000048  68c2              LDR      r2,[r0,#0xc]
00004a  4620              MOV      r0,r4
00004c  4790              BLX      r2
00004e  4606              MOV      r6,r0
;;;61         GUI_UNLOCK();
000050  f7fffffe          BL       GUI_Unlock
;;;62         return r;
000054  4630              MOV      r0,r6
;;;63       #else
;;;64         GUI_USE_PARA(s);
;;;65         GUI_USE_PARA(Char);
;;;66         return 0;
;;;67       #endif
;;;68     }
000056  bd70              POP      {r4-r6,pc}
;;;69     
                          ENDP

                  GUI_UC__CalcSizeOfChar PROC
;;;73     */
;;;74     int GUI_UC__CalcSizeOfChar(U16 Char) {
000058  b510              PUSH     {r4,lr}
00005a  4604              MOV      r4,r0
;;;75       return GUI_Context.pUC_API->pfCalcSizeOfChar(Char);
00005c  4821              LDR      r0,|L1.228|
00005e  69c0              LDR      r0,[r0,#0x1c]  ; GUI_Context
000060  6881              LDR      r1,[r0,#8]
000062  4620              MOV      r0,r4
000064  4788              BLX      r1
;;;76     }
000066  bd10              POP      {r4,pc}
;;;77     
                          ENDP

                  GUI_UC__GetCharCodeInc PROC
;;;81     */
;;;82     U16 GUI_UC__GetCharCodeInc(const char GUI_UNI_PTR ** ps) {
000068  b570              PUSH     {r4-r6,lr}
00006a  4604              MOV      r4,r0
;;;83       const char GUI_UNI_PTR * s;
;;;84       U16 r;
;;;85       s   = *ps;
00006c  6825              LDR      r5,[r4,#0]
;;;86       r   = GUI_UC__GetCharCode(s);
00006e  481d              LDR      r0,|L1.228|
000070  69c0              LDR      r0,[r0,#0x1c]  ; GUI_Context
000072  6801              LDR      r1,[r0,#0]
000074  4628              MOV      r0,r5
000076  4788              BLX      r1
000078  4606              MOV      r6,r0
;;;87       s  += GUI_UC__GetCharSize(s);
00007a  481a              LDR      r0,|L1.228|
00007c  69c0              LDR      r0,[r0,#0x1c]  ; GUI_Context
00007e  6841              LDR      r1,[r0,#4]
000080  4628              MOV      r0,r5
000082  4788              BLX      r1
000084  4405              ADD      r5,r5,r0
;;;88       *ps = s;
000086  6025              STR      r5,[r4,#0]
;;;89       return r;
000088  4630              MOV      r0,r6
;;;90     }
00008a  bd70              POP      {r4-r6,pc}
;;;91     
                          ENDP

                  GUI_UC__NumChars2NumBytes PROC
;;;95     */
;;;96     int GUI_UC__NumChars2NumBytes(const char GUI_UNI_PTR * s, int NumChars) {
00008c  e92d41f0          PUSH     {r4-r8,lr}
000090  4605              MOV      r5,r0
000092  460e              MOV      r6,r1
;;;97       int CharSize, NumBytes = 0;
000094  2700              MOVS     r7,#0
;;;98       while (NumChars--) {
000096  e007              B        |L1.168|
                  |L1.152|
;;;99         CharSize = GUI_UC__GetCharSize(s);
000098  4812              LDR      r0,|L1.228|
00009a  69c0              LDR      r0,[r0,#0x1c]  ; GUI_Context
00009c  6841              LDR      r1,[r0,#4]
00009e  4628              MOV      r0,r5
0000a0  4788              BLX      r1
0000a2  4604              MOV      r4,r0
;;;100        s += CharSize;    
0000a4  4425              ADD      r5,r5,r4
;;;101        NumBytes += CharSize;
0000a6  4427              ADD      r7,r7,r4
                  |L1.168|
0000a8  0030              MOVS     r0,r6                 ;98
0000aa  f1a60601          SUB      r6,r6,#1              ;98
0000ae  d1f3              BNE      |L1.152|
;;;102      }
;;;103      return NumBytes;
0000b0  4638              MOV      r0,r7
;;;104    }
0000b2  e8bd81f0          POP      {r4-r8,pc}
;;;105    
                          ENDP

                  GUI_UC__NumBytes2NumChars PROC
;;;109    */
;;;110    int GUI_UC__NumBytes2NumChars(const char GUI_UNI_PTR * s, int NumBytes) {
0000b6  e92d41f0          PUSH     {r4-r8,lr}
0000ba  4606              MOV      r6,r0
0000bc  460f              MOV      r7,r1
;;;111      int CharSize, Chars = 0, Bytes = 0;
0000be  f04f0800          MOV      r8,#0
0000c2  2500              MOVS     r5,#0
;;;112      while (NumBytes > Bytes) {
0000c4  e008              B        |L1.216|
                  |L1.198|
;;;113        CharSize = GUI_UC__GetCharSize(s + Bytes);
0000c6  1970              ADDS     r0,r6,r5
0000c8  4a06              LDR      r2,|L1.228|
0000ca  69d2              LDR      r2,[r2,#0x1c]  ; GUI_Context
0000cc  6851              LDR      r1,[r2,#4]
0000ce  4788              BLX      r1
0000d0  4604              MOV      r4,r0
;;;114        Bytes += CharSize;
0000d2  4425              ADD      r5,r5,r4
;;;115        Chars++;
0000d4  f1080801          ADD      r8,r8,#1
                  |L1.216|
0000d8  42af              CMP      r7,r5                 ;112
0000da  dcf4              BGT      |L1.198|
;;;116      }
;;;117      return Chars;
0000dc  4640              MOV      r0,r8
;;;118    }
0000de  e8bd81f0          POP      {r4-r8,pc}
;;;119    
                          ENDP

0000e2  0000              DCW      0x0000
                  |L1.228|
                          DCD      GUI_Context
