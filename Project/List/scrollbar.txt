; generated by ARM C/C++ Compiler, 4.1 [Build 894]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\Obj\scrollbar.o --asm_dir=.\List\ --list_dir=.\List\ --depend=.\Obj\scrollbar.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\Libraries\CMSIS\CM3\CoreSupport -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x\startup\arm -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\User -I..\BaseDrive -I..\Ucosii -I..\Ucosii\Port -I..\Ucosii\Src -I..\Ucosii\Include -I..\Ucgui -I..\Ucgui\Config -I..\Ucgui\GUI_X -I..\Ucgui\GUI -I..\Ucgui\GUI\ConvertColor -I..\Ucgui\GUI\ConvertMono -I..\Ucgui\GUI\Core -I..\Ucgui\GUI\Core -I..\Ucgui\GUI\LCDDriver -I..\Ucgui\GUI\MultiLayer -I..\Ucgui\GUI\Widget -I..\Ucgui\GUI\WM -I..\ExternalDrive\Lcd -I..\ExternalDrive\Touch -I..\Panel -I"D:\Program files\Keil\ARM\RV31\Inc" -I"D:\Program files\Keil\ARM\CMSIS\Include" -I"D:\Program files\Keil\ARM\Inc\ST\STM32F10x" -D__MICROLIB -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=.\Obj\scrollbar.crf ..\Ucgui\GUI\Widget\SCROLLBAR.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  _GetArrowSize PROC
;;;83     */
;;;84     static int _GetArrowSize(SCROLLBAR_Obj* pObj) {
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  4606              MOV      r6,r0
;;;85       unsigned int r;
;;;86       unsigned int xSize = WIDGET__GetXSize(&pObj->Widget);
000006  4630              MOV      r0,r6
000008  f7fffffe          BL       WIDGET__GetXSize
00000c  4605              MOV      r5,r0
;;;87       unsigned int ySize = WIDGET__GetYSize(&pObj->Widget);
00000e  4630              MOV      r0,r6
000010  f7fffffe          BL       WIDGET__GetYSize
000014  4607              MOV      r7,r0
;;;88       r = ySize/2 + 5;
000016  2005              MOVS     r0,#5
000018  eb000457          ADD      r4,r0,r7,LSR #1
;;;89       if (r > xSize-5)
00001c  1f68              SUBS     r0,r5,#5
00001e  42a0              CMP      r0,r4
000020  d200              BCS      |L1.36|
;;;90         r = xSize-5;
000022  1f6c              SUBS     r4,r5,#5
                  |L1.36|
;;;91       return r;
000024  4620              MOV      r0,r4
;;;92     }
000026  e8bd81f0          POP      {r4-r8,pc}
;;;93     
                          ENDP

                  _WIDGET__RECT2VRECT PROC
;;;104    */
;;;105    static void _WIDGET__RECT2VRECT(const WIDGET* pWidget, GUI_RECT* pRect) {
00002a  b570              PUSH     {r4-r6,lr}
;;;106      if (pWidget->State & WIDGET_STATE_VERTICAL) {
00002c  8cc2              LDRH     r2,[r0,#0x26]
00002e  f0120f08          TST      r2,#8
000032  d016              BEQ      |L1.98|
;;;107        int xSize = pWidget->Win.Rect.x1 - pWidget->Win.Rect.x0 + 1;
000034  f9b05004          LDRSH    r5,[r0,#4]
000038  f9b06000          LDRSH    r6,[r0,#0]
00003c  1bad              SUBS     r5,r5,r6
00003e  1c6a              ADDS     r2,r5,#1
;;;108        int x0, x1;
;;;109        x0 = pRect->x0;
000040  f9b13000          LDRSH    r3,[r1,#0]
;;;110        x1 = pRect->x1;
000044  f9b14004          LDRSH    r4,[r1,#4]
;;;111        pRect->x0 = pRect->y0;
000048  884d              LDRH     r5,[r1,#2]
00004a  800d              STRH     r5,[r1,#0]
;;;112        pRect->x1 = pRect->y1;
00004c  88cd              LDRH     r5,[r1,#6]
00004e  808d              STRH     r5,[r1,#4]
;;;113        pRect->y1 = xSize - 1 - x0;
000050  1e55              SUBS     r5,r2,#1
000052  1aed              SUBS     r5,r5,r3
000054  b22d              SXTH     r5,r5
000056  80cd              STRH     r5,[r1,#6]
;;;114        pRect->y0 = xSize - 1 - x1;
000058  1e55              SUBS     r5,r2,#1
00005a  1b2d              SUBS     r5,r5,r4
00005c  b22d              SXTH     r5,r5
00005e  804d              STRH     r5,[r1,#2]
;;;115      }
000060  bf00              NOP      
                  |L1.98|
;;;116    }
000062  bd70              POP      {r4-r6,pc}
;;;117    
                          ENDP

                  _CalcPositions PROC
;;;124    */
;;;125    static void _CalcPositions(SCROLLBAR_Obj* pObj, SCROLLBAR_POSITIONS* pPos) {
000064  e92d4ff0          PUSH     {r4-r11,lr}
000068  b087              SUB      sp,sp,#0x1c
00006a  4605              MOV      r5,r0
00006c  460c              MOV      r4,r1
;;;126      int xSizeArrow, xSize, xSizeMoveable, ThumbSize, NumItems, xSizeThumbArea;
;;;127      WM_HWIN hWin;
;;;128      GUI_RECT r, rSub;
;;;129      int x0, y0;
;;;130      r = pObj->Widget.Win.Rect;
00006e  e9d50100          LDRD     r0,r1,[r5,#0]
000072  e9cd0104          STRD     r0,r1,[sp,#0x10]
;;;131      x0 = r.x0;
000076  f9bd0010          LDRSH    r0,[sp,#0x10]
00007a  9001              STR      r0,[sp,#4]
;;;132      y0 = r.y0;
00007c  f9bd0012          LDRSH    r0,[sp,#0x12]
000080  9000              STR      r0,[sp,#0]
;;;133      pPos->x1  = (pObj->Widget.State & WIDGET_STATE_VERTICAL) ? r.y1 : r.x1;
000082  8ce8              LDRH     r0,[r5,#0x26]
000084  f0100f08          TST      r0,#8
000088  d002              BEQ      |L1.144|
00008a  f9bd0016          LDRSH    r0,[sp,#0x16]
00008e  e001              B        |L1.148|
                  |L1.144|
000090  f9bd0014          LDRSH    r0,[sp,#0x14]
                  |L1.148|
000094  61a0              STR      r0,[r4,#0x18]
;;;134      /* Subtract the rectangle of the other scrollbar (if existing and visible) */
;;;135      if (pObj->Widget.Id == GUI_ID_HSCROLL) {
000096  8ca8              LDRH     r0,[r5,#0x24]
000098  28ff              CMP      r0,#0xff
00009a  d117              BNE      |L1.204|
;;;136        hWin = WM_GetScrollbarV(pObj->Widget.Win.hParent);
00009c  f9b50016          LDRSH    r0,[r5,#0x16]
0000a0  f7fffffe          BL       WM_GetScrollbarV
0000a4  4682              MOV      r10,r0
;;;137        if (hWin) {
0000a6  f1ba0f00          CMP      r10,#0
0000aa  d00f              BEQ      |L1.204|
;;;138          WM_GetWindowRectEx(hWin, &rSub);
0000ac  a902              ADD      r1,sp,#8
0000ae  4650              MOV      r0,r10
0000b0  f7fffffe          BL       WM_GetWindowRectEx
;;;139          if (r.x1 == rSub.x1) {
0000b4  f9bd0014          LDRSH    r0,[sp,#0x14]
0000b8  f9bd100c          LDRSH    r1,[sp,#0xc]
0000bc  4288              CMP      r0,r1
0000be  d105              BNE      |L1.204|
;;;140            r.x1 = rSub.x0 -1;
0000c0  f8bd0008          LDRH     r0,[sp,#8]
0000c4  1e40              SUBS     r0,r0,#1
0000c6  b200              SXTH     r0,r0
0000c8  f8ad0014          STRH     r0,[sp,#0x14]
                  |L1.204|
;;;141          }
;;;142        }
;;;143      }
;;;144      if (pObj->Widget.Id == GUI_ID_VSCROLL) {
0000cc  8ca8              LDRH     r0,[r5,#0x24]
0000ce  28fe              CMP      r0,#0xfe
0000d0  d117              BNE      |L1.258|
;;;145        hWin = WM_GetScrollbarH(pObj->Widget.Win.hParent);
0000d2  f9b50016          LDRSH    r0,[r5,#0x16]
0000d6  f7fffffe          BL       WM_GetScrollbarH
0000da  4682              MOV      r10,r0
;;;146        if (hWin) {
0000dc  f1ba0f00          CMP      r10,#0
0000e0  d00f              BEQ      |L1.258|
;;;147          WM_GetWindowRectEx(hWin, &rSub);
0000e2  a902              ADD      r1,sp,#8
0000e4  4650              MOV      r0,r10
0000e6  f7fffffe          BL       WM_GetWindowRectEx
;;;148          if (r.y1 == rSub.y1) {
0000ea  f9bd0016          LDRSH    r0,[sp,#0x16]
0000ee  f9bd100e          LDRSH    r1,[sp,#0xe]
0000f2  4288              CMP      r0,r1
0000f4  d105              BNE      |L1.258|
;;;149            r.y1 = rSub.y0 -1;
0000f6  f8bd000a          LDRH     r0,[sp,#0xa]
0000fa  1e40              SUBS     r0,r0,#1
0000fc  b200              SXTH     r0,r0
0000fe  f8ad0016          STRH     r0,[sp,#0x16]
                  |L1.258|
;;;150          }
;;;151        }
;;;152      }
;;;153      /* Convert coordinates of this window */
;;;154      GUI_MoveRect(&r, -x0, -y0);
000102  9800              LDR      r0,[sp,#0]
000104  4242              RSBS     r2,r0,#0
000106  9801              LDR      r0,[sp,#4]
000108  4241              RSBS     r1,r0,#0
00010a  a804              ADD      r0,sp,#0x10
00010c  f7fffffe          BL       GUI_MoveRect
;;;155      /* Convert real into virtual coordinates */
;;;156      _WIDGET__RECT2VRECT(&pObj->Widget, &r);
000110  a904              ADD      r1,sp,#0x10
000112  4628              MOV      r0,r5
000114  f7fffffe          BL       _WIDGET__RECT2VRECT
;;;157      NumItems      = pObj->NumItems;
000118  6ba8              LDR      r0,[r5,#0x38]
00011a  9006              STR      r0,[sp,#0x18]
;;;158      xSize         = r.x1 - r.x0 + 1;
00011c  f9bd0014          LDRSH    r0,[sp,#0x14]
000120  f9bd1010          LDRSH    r1,[sp,#0x10]
000124  1a40              SUBS     r0,r0,r1
000126  f1000901          ADD      r9,r0,#1
;;;159      xSizeArrow    = _GetArrowSize(pObj);
00012a  4628              MOV      r0,r5
00012c  f7fffffe          BL       _GetArrowSize
000130  4680              MOV      r8,r0
;;;160      xSizeThumbArea= xSize - 2 * xSizeArrow;     /* Number of pixels available for thumb and movement */
000132  2002              MOVS     r0,#2
000134  fb009718          MLS      r7,r0,r8,r9
;;;161      ThumbSize     = GUI__DivideRound(xSizeThumbArea * pObj->PageSize, NumItems);
000138  6c29              LDR      r1,[r5,#0x40]
00013a  fb01f007          MUL      r0,r1,r7
00013e  9906              LDR      r1,[sp,#0x18]
000140  f7fffffe          BL       GUI__DivideRound
000144  4606              MOV      r6,r0
;;;162      if (ThumbSize < 4) {
000146  2e04              CMP      r6,#4
000148  da00              BGE      |L1.332|
;;;163        ThumbSize = 4;
00014a  2604              MOVS     r6,#4
                  |L1.332|
;;;164      }
;;;165      if (ThumbSize > xSizeThumbArea) {
00014c  42be              CMP      r6,r7
00014e  dd00              BLE      |L1.338|
;;;166        ThumbSize = xSizeThumbArea;
000150  463e              MOV      r6,r7
                  |L1.338|
;;;167      }
;;;168      xSizeMoveable = xSizeThumbArea - ThumbSize;
000152  eba70b06          SUB      r11,r7,r6
;;;169      pPos->x0_LeftArrow  = r.x0;
000156  f9bd0010          LDRSH    r0,[sp,#0x10]
00015a  6020              STR      r0,[r4,#0]
;;;170      pPos->x1_LeftArrow  = xSizeArrow - 1;
00015c  f1a80001          SUB      r0,r8,#1
000160  6060              STR      r0,[r4,#4]
;;;171      pPos->x1_RightArrow = xSize - 1;
000162  f1a90001          SUB      r0,r9,#1
000166  6160              STR      r0,[r4,#0x14]
;;;172      pPos->x0_RightArrow = xSize - xSizeArrow;
000168  eba90008          SUB      r0,r9,r8
00016c  6120              STR      r0,[r4,#0x10]
;;;173      pPos->x0_Thumb      = pPos->x1_LeftArrow + 1+ GUI__DivideRound(xSizeMoveable * pObj->v, NumItems - pObj->PageSize);
00016e  6c2b              LDR      r3,[r5,#0x40]
000170  9a06              LDR      r2,[sp,#0x18]
000172  1ad1              SUBS     r1,r2,r3
000174  6bea              LDR      r2,[r5,#0x3c]
000176  fb02f00b          MUL      r0,r2,r11
00017a  f7fffffe          BL       GUI__DivideRound
00017e  6861              LDR      r1,[r4,#4]
000180  1c49              ADDS     r1,r1,#1
000182  4408              ADD      r0,r0,r1
000184  60a0              STR      r0,[r4,#8]
;;;174      pPos->x1_Thumb      = pPos->x0_Thumb + ThumbSize - 1;
000186  68a0              LDR      r0,[r4,#8]
000188  4430              ADD      r0,r0,r6
00018a  1e40              SUBS     r0,r0,#1
00018c  60e0              STR      r0,[r4,#0xc]
;;;175      pPos->xSizeMoveable = xSizeMoveable;
00018e  f8c4b01c          STR      r11,[r4,#0x1c]
;;;176      pPos->ThumbSize     = ThumbSize;
000192  6226              STR      r6,[r4,#0x20]
;;;177    }
000194  b007              ADD      sp,sp,#0x1c
000196  e8bd8ff0          POP      {r4-r11,pc}
;;;178    
                          ENDP

                  _DrawTriangle PROC
;;;182    */
;;;183    static void _DrawTriangle(WIDGET* pWidget, int x, int y, int Size, int Inc) {
00019a  e92d41f0          PUSH     {r4-r8,lr}
00019e  4607              MOV      r7,r0
0001a0  460e              MOV      r6,r1
0001a2  4615              MOV      r5,r2
0001a4  461c              MOV      r4,r3
0001a6  f8dd8018          LDR      r8,[sp,#0x18]
;;;184      if (pWidget->State & WIDGET_STATE_VERTICAL) {
0001aa  8cf8              LDRH     r0,[r7,#0x26]
0001ac  f0100f08          TST      r0,#8
0001b0  d00a              BEQ      |L1.456|
;;;185        for (; Size >= 0; Size--, x += Inc) {
0001b2  e006              B        |L1.450|
                  |L1.436|
;;;186          GUI_DrawHLine(x, y - Size, y + Size);
0001b4  192a              ADDS     r2,r5,r4
0001b6  1b29              SUBS     r1,r5,r4
0001b8  4630              MOV      r0,r6
0001ba  f7fffffe          BL       GUI_DrawHLine
0001be  1e64              SUBS     r4,r4,#1              ;185
0001c0  4446              ADD      r6,r6,r8              ;185
                  |L1.450|
0001c2  2c00              CMP      r4,#0                 ;185
0001c4  daf6              BGE      |L1.436|
0001c6  e009              B        |L1.476|
                  |L1.456|
;;;187        }
;;;188      } else {
;;;189        for (; Size >= 0; Size--, x += Inc) {
0001c8  e006              B        |L1.472|
                  |L1.458|
;;;190          GUI_DrawVLine(x, y - Size, y + Size);
0001ca  192a              ADDS     r2,r5,r4
0001cc  1b29              SUBS     r1,r5,r4
0001ce  4630              MOV      r0,r6
0001d0  f7fffffe          BL       GUI_DrawVLine
0001d4  1e64              SUBS     r4,r4,#1              ;189
0001d6  4446              ADD      r6,r6,r8              ;189
                  |L1.472|
0001d8  2c00              CMP      r4,#0                 ;189
0001da  daf6              BGE      |L1.458|
                  |L1.476|
;;;191        }
;;;192      }
;;;193    }
0001dc  e8bd81f0          POP      {r4-r8,pc}
;;;194    
                          ENDP

                  _Paint PROC
;;;198    */
;;;199    static void _Paint(SCROLLBAR_Obj* pObj) {
0001e0  b570              PUSH     {r4-r6,lr}
0001e2  b08e              SUB      sp,sp,#0x38
0001e4  4604              MOV      r4,r0
;;;200      int ArrowSize, ArrowOff;
;;;201      SCROLLBAR_POSITIONS Pos;
;;;202      GUI_RECT r, rClient;
;;;203      /*
;;;204        Get / calc position info
;;;205      */
;;;206      _CalcPositions(pObj, &Pos);
0001e6  a905              ADD      r1,sp,#0x14
0001e8  4620              MOV      r0,r4
0001ea  f7fffffe          BL       _CalcPositions
;;;207      WIDGET__GetClientRect(&pObj->Widget, &rClient);
0001ee  a901              ADD      r1,sp,#4
0001f0  4620              MOV      r0,r4
0001f2  f7fffffe          BL       WIDGET__GetClientRect
;;;208      r = rClient;
0001f6  e9dd0101          LDRD     r0,r1,[sp,#4]
0001fa  e9cd0103          STRD     r0,r1,[sp,#0xc]
;;;209      ArrowSize = ((r.y1 - r.y0) /3) - 1;
0001fe  f9bd0012          LDRSH    r0,[sp,#0x12]
000202  f9bd100e          LDRSH    r1,[sp,#0xe]
000206  1a40              SUBS     r0,r0,r1
000208  2103              MOVS     r1,#3
00020a  fb90f0f1          SDIV     r0,r0,r1
00020e  1e45              SUBS     r5,r0,#1
;;;210      ArrowOff = 3 + ArrowSize+ ArrowSize/3;
000210  2003              MOVS     r0,#3
000212  fb95f1f0          SDIV     r1,r5,r0
000216  1ce8              ADDS     r0,r5,#3
000218  180e              ADDS     r6,r1,r0
;;;211      /*
;;;212        Draw left Arrow
;;;213      */
;;;214      LCD_SetColor(pObj->aColor[0]);
00021a  6b20              LDR      r0,[r4,#0x30]
00021c  f7fffffe          BL       LCD_SetColor
;;;215      r = rClient;
000220  e9dd0101          LDRD     r0,r1,[sp,#4]
000224  e9cd0103          STRD     r0,r1,[sp,#0xc]
;;;216      r.x0 = Pos.x0_LeftArrow;
000228  9805              LDR      r0,[sp,#0x14]
00022a  b200              SXTH     r0,r0
00022c  f8ad000c          STRH     r0,[sp,#0xc]
;;;217      r.x1 = Pos.x1_LeftArrow;
000230  9806              LDR      r0,[sp,#0x18]
000232  b200              SXTH     r0,r0
000234  f8ad0010          STRH     r0,[sp,#0x10]
;;;218      WIDGET__FillRectEx(&pObj->Widget, &r);
000238  a903              ADD      r1,sp,#0xc
00023a  4620              MOV      r0,r4
00023c  f7fffffe          BL       WIDGET__FillRectEx
;;;219      LCD_SetColor(pObj->aBkColor[1]);
000240  6ae0              LDR      r0,[r4,#0x2c]
000242  f7fffffe          BL       LCD_SetColor
;;;220      _DrawTriangle(&pObj->Widget, r.x0 + ArrowOff, (r.y1 - r.y0) >> 1, ArrowSize, -1);
000246  f04f30ff          MOV      r0,#0xffffffff
00024a  9000              STR      r0,[sp,#0]
00024c  f9bd0012          LDRSH    r0,[sp,#0x12]
000250  f9bd300e          LDRSH    r3,[sp,#0xe]
000254  1ac0              SUBS     r0,r0,r3
000256  1042              ASRS     r2,r0,#1
000258  f9bd000c          LDRSH    r0,[sp,#0xc]
00025c  1981              ADDS     r1,r0,r6
00025e  462b              MOV      r3,r5
000260  4620              MOV      r0,r4
000262  f7fffffe          BL       _DrawTriangle
;;;221      WIDGET__EFFECT_DrawUpRect(&pObj->Widget, &r);
000266  a903              ADD      r1,sp,#0xc
000268  4620              MOV      r0,r4
00026a  f7fffffe          BL       WIDGET__EFFECT_DrawUpRect
;;;222      /*
;;;223        Draw the thumb area which is not covered by the thumb
;;;224      */
;;;225      LCD_SetColor(pObj->aBkColor[0]);
00026e  6aa0              LDR      r0,[r4,#0x28]
000270  f7fffffe          BL       LCD_SetColor
;;;226      r.x0 = Pos.x1_LeftArrow + 1;
000274  9806              LDR      r0,[sp,#0x18]
000276  1c40              ADDS     r0,r0,#1
000278  b200              SXTH     r0,r0
00027a  f8ad000c          STRH     r0,[sp,#0xc]
;;;227      r.x1 = Pos.x0_Thumb - 1;
00027e  9807              LDR      r0,[sp,#0x1c]
000280  1e40              SUBS     r0,r0,#1
000282  b200              SXTH     r0,r0
000284  f8ad0010          STRH     r0,[sp,#0x10]
;;;228      WIDGET__FillRectEx(&pObj->Widget, &r);
000288  a903              ADD      r1,sp,#0xc
00028a  4620              MOV      r0,r4
00028c  f7fffffe          BL       WIDGET__FillRectEx
;;;229      r = rClient;
000290  e9dd0101          LDRD     r0,r1,[sp,#4]
000294  e9cd0103          STRD     r0,r1,[sp,#0xc]
;;;230      r.x0 = Pos.x1_Thumb + 1;
000298  9808              LDR      r0,[sp,#0x20]
00029a  1c40              ADDS     r0,r0,#1
00029c  b200              SXTH     r0,r0
00029e  f8ad000c          STRH     r0,[sp,#0xc]
;;;231      r.x1 = Pos.x0_RightArrow - 1;
0002a2  9809              LDR      r0,[sp,#0x24]
0002a4  1e40              SUBS     r0,r0,#1
0002a6  b200              SXTH     r0,r0
0002a8  f8ad0010          STRH     r0,[sp,#0x10]
;;;232      WIDGET__FillRectEx(&pObj->Widget, &r);
0002ac  a903              ADD      r1,sp,#0xc
0002ae  4620              MOV      r0,r4
0002b0  f7fffffe          BL       WIDGET__FillRectEx
;;;233      /*
;;;234        Draw Thumb
;;;235      */
;;;236      r = rClient;
0002b4  e9dd0101          LDRD     r0,r1,[sp,#4]
0002b8  e9cd0103          STRD     r0,r1,[sp,#0xc]
;;;237      r.x0 = Pos.x0_Thumb;
0002bc  9807              LDR      r0,[sp,#0x1c]
0002be  b200              SXTH     r0,r0
0002c0  f8ad000c          STRH     r0,[sp,#0xc]
;;;238      r.x1 = Pos.x1_Thumb;
0002c4  9808              LDR      r0,[sp,#0x20]
0002c6  b200              SXTH     r0,r0
0002c8  f8ad0010          STRH     r0,[sp,#0x10]
;;;239      LCD_SetColor(pObj->aColor[0]);
0002cc  6b20              LDR      r0,[r4,#0x30]
0002ce  f7fffffe          BL       LCD_SetColor
;;;240      WIDGET__FillRectEx(&pObj->Widget, &r);
0002d2  a903              ADD      r1,sp,#0xc
0002d4  4620              MOV      r0,r4
0002d6  f7fffffe          BL       WIDGET__FillRectEx
;;;241      WIDGET__EFFECT_DrawUpRect(&pObj->Widget, &r);
0002da  a903              ADD      r1,sp,#0xc
0002dc  4620              MOV      r0,r4
0002de  f7fffffe          BL       WIDGET__EFFECT_DrawUpRect
;;;242      /*
;;;243        Draw right Arrow
;;;244      */
;;;245      LCD_SetColor(pObj->aColor[0]);
0002e2  6b20              LDR      r0,[r4,#0x30]
0002e4  f7fffffe          BL       LCD_SetColor
;;;246      r.x0 = Pos.x0_RightArrow;
0002e8  9809              LDR      r0,[sp,#0x24]
0002ea  b200              SXTH     r0,r0
0002ec  f8ad000c          STRH     r0,[sp,#0xc]
;;;247      r.x1 = Pos.x1_RightArrow;
0002f0  980a              LDR      r0,[sp,#0x28]
0002f2  b200              SXTH     r0,r0
0002f4  f8ad0010          STRH     r0,[sp,#0x10]
;;;248      WIDGET__FillRectEx(&pObj->Widget, &r);
0002f8  a903              ADD      r1,sp,#0xc
0002fa  4620              MOV      r0,r4
0002fc  f7fffffe          BL       WIDGET__FillRectEx
;;;249      LCD_SetColor(pObj->aBkColor[1]);
000300  6ae0              LDR      r0,[r4,#0x2c]
000302  f7fffffe          BL       LCD_SetColor
;;;250      _DrawTriangle(&pObj->Widget, r.x1 - ArrowOff, (r.y1 - r.y0) >> 1, ArrowSize, 1);
000306  2001              MOVS     r0,#1
000308  9000              STR      r0,[sp,#0]
00030a  f9bd0012          LDRSH    r0,[sp,#0x12]
00030e  f9bd300e          LDRSH    r3,[sp,#0xe]
000312  1ac0              SUBS     r0,r0,r3
000314  1042              ASRS     r2,r0,#1
000316  f9bd0010          LDRSH    r0,[sp,#0x10]
00031a  1b81              SUBS     r1,r0,r6
00031c  462b              MOV      r3,r5
00031e  4620              MOV      r0,r4
000320  f7fffffe          BL       _DrawTriangle
;;;251      WIDGET__EFFECT_DrawUpRect(&pObj->Widget, &r);
000324  a903              ADD      r1,sp,#0xc
000326  4620              MOV      r0,r4
000328  f7fffffe          BL       WIDGET__EFFECT_DrawUpRect
;;;252      /*
;;;253        Draw overlap area (if any ...)
;;;254      */
;;;255      if (Pos.x1_RightArrow != Pos.x1) {
00032c  e9dd010a          LDRD     r0,r1,[sp,#0x28]
000330  4288              CMP      r0,r1
000332  d00f              BEQ      |L1.852|
;;;256        r.x0 = Pos.x1_RightArrow + 1;
000334  980a              LDR      r0,[sp,#0x28]
000336  1c40              ADDS     r0,r0,#1
000338  b200              SXTH     r0,r0
00033a  f8ad000c          STRH     r0,[sp,#0xc]
;;;257        r.x1 = Pos.x1;
00033e  980b              LDR      r0,[sp,#0x2c]
000340  b200              SXTH     r0,r0
000342  f8ad0010          STRH     r0,[sp,#0x10]
;;;258        LCD_SetColor(pObj->aColor[0]);
000346  6b20              LDR      r0,[r4,#0x30]
000348  f7fffffe          BL       LCD_SetColor
;;;259        WIDGET__FillRectEx(&pObj->Widget, &r);
00034c  a903              ADD      r1,sp,#0xc
00034e  4620              MOV      r0,r4
000350  f7fffffe          BL       WIDGET__FillRectEx
                  |L1.852|
;;;260      }
;;;261    }
000354  b00e              ADD      sp,sp,#0x38
000356  bd70              POP      {r4-r6,pc}
;;;262    
                          ENDP

                  _ScrollbarPressed PROC
;;;266    */
;;;267    static void _ScrollbarPressed(SCROLLBAR_Handle hObj, SCROLLBAR_Obj* pObj) {
000358  b570              PUSH     {r4-r6,lr}
00035a  4605              MOV      r5,r0
00035c  460c              MOV      r4,r1
;;;268      WIDGET_OrState(hObj, SCROLLBAR_STATE_PRESSED);
00035e  f44f7180          MOV      r1,#0x100
000362  4628              MOV      r0,r5
000364  f7fffffe          BL       WIDGET_OrState
;;;269      if (pObj->Widget.Win.Status & WM_SF_ISVIS) {
000368  8ba0              LDRH     r0,[r4,#0x1c]
00036a  f0100f02          TST      r0,#2
00036e  d003              BEQ      |L1.888|
;;;270        WM_NotifyParent(hObj, WM_NOTIFICATION_CLICKED);
000370  2101              MOVS     r1,#1
000372  4628              MOV      r0,r5
000374  f7fffffe          BL       WM_NotifyParent
                  |L1.888|
;;;271      }
;;;272    }
000378  bd70              POP      {r4-r6,pc}
;;;273    
                          ENDP

                  _ScrollbarReleased PROC
;;;277    */
;;;278    static void _ScrollbarReleased(SCROLLBAR_Handle hObj, SCROLLBAR_Obj* pObj) {
00037a  b570              PUSH     {r4-r6,lr}
00037c  4605              MOV      r5,r0
00037e  460c              MOV      r4,r1
;;;279      WIDGET_AndState(hObj, SCROLLBAR_STATE_PRESSED);
000380  f44f7180          MOV      r1,#0x100
000384  4628              MOV      r0,r5
000386  f7fffffe          BL       WIDGET_AndState
;;;280      if (pObj->Widget.Win.Status & WM_SF_ISVIS) {
00038a  8ba0              LDRH     r0,[r4,#0x1c]
00038c  f0100f02          TST      r0,#2
000390  d003              BEQ      |L1.922|
;;;281        WM_NotifyParent(hObj, WM_NOTIFICATION_RELEASED);
000392  2102              MOVS     r1,#2
000394  4628              MOV      r0,r5
000396  f7fffffe          BL       WM_NotifyParent
                  |L1.922|
;;;282      }
;;;283    }
00039a  bd70              POP      {r4-r6,pc}
;;;284    
                          ENDP

                  SCROLLBAR_SetValue PROC
;;;535    */
;;;536    void SCROLLBAR_SetValue(SCROLLBAR_Handle hObj, int v) {
00039c  e92d41f0          PUSH     {r4-r8,lr}
0003a0  4607              MOV      r7,r0
0003a2  460d              MOV      r5,r1
;;;537      SCROLLBAR_Obj* pObj;
;;;538      int Max;
;;;539      if (hObj) {
0003a4  b1f7              CBZ      r7,|L1.996|
;;;540        WM_LOCK();
0003a6  f7fffffe          BL       GUI_Lock
;;;541        pObj = SCROLLBAR_H2P(hObj);
0003aa  4638              MOV      r0,r7
0003ac  f7fffffe          BL       GUI_ALLOC_h2p
0003b0  4604              MOV      r4,r0
;;;542        Max = pObj->NumItems - pObj->PageSize;
0003b2  6c21              LDR      r1,[r4,#0x40]
0003b4  6ba0              LDR      r0,[r4,#0x38]
0003b6  1a46              SUBS     r6,r0,r1
;;;543        if (Max < 0)
0003b8  2e00              CMP      r6,#0
0003ba  da00              BGE      |L1.958|
;;;544          Max =0;
0003bc  2600              MOVS     r6,#0
                  |L1.958|
;;;545        /* Put in min/max range */
;;;546        if (v < 0) {
0003be  2d00              CMP      r5,#0
0003c0  da00              BGE      |L1.964|
;;;547          v = 0;
0003c2  2500              MOVS     r5,#0
                  |L1.964|
;;;548        }
;;;549        if (v > Max) {
0003c4  42b5              CMP      r5,r6
0003c6  dd00              BLE      |L1.970|
;;;550          v = Max;
0003c8  4635              MOV      r5,r6
                  |L1.970|
;;;551        }
;;;552        if (pObj->v != v) {
0003ca  6be0              LDR      r0,[r4,#0x3c]
0003cc  42a8              CMP      r0,r5
0003ce  d007              BEQ      |L1.992|
;;;553          pObj->v = v;
0003d0  63e5              STR      r5,[r4,#0x3c]
;;;554          WM_InvalidateWindow(hObj);
0003d2  4638              MOV      r0,r7
0003d4  f7fffffe          BL       WM_InvalidateWindow
;;;555          WM_NotifyParent(hObj, WM_NOTIFICATION_VALUE_CHANGED);
0003d8  2105              MOVS     r1,#5
0003da  4638              MOV      r0,r7
0003dc  f7fffffe          BL       WM_NotifyParent
                  |L1.992|
;;;556        }
;;;557        WM_UNLOCK();
0003e0  f7fffffe          BL       GUI_Unlock
                  |L1.996|
;;;558      }
;;;559    }
0003e4  e8bd81f0          POP      {r4-r8,pc}
;;;560    
                          ENDP

                  _OnTouch PROC
;;;288    */
;;;289    static void _OnTouch(SCROLLBAR_Handle hObj, SCROLLBAR_Obj* pObj, WM_MESSAGE*pMsg) {
0003e8  e92d47f0          PUSH     {r4-r10,lr}
0003ec  b08a              SUB      sp,sp,#0x28
0003ee  4681              MOV      r9,r0
0003f0  460c              MOV      r4,r1
0003f2  4690              MOV      r8,r2
;;;290      SCROLLBAR_POSITIONS Pos;
;;;291      GUI_PID_STATE* pState = (GUI_PID_STATE*)pMsg->Data.p;
0003f4  f8d86008          LDR      r6,[r8,#8]
;;;292      if (pMsg->Data.p) {  /* Something happened in our area (pressed or released) */
0003f8  f8d80008          LDR      r0,[r8,#8]
0003fc  2800              CMP      r0,#0
0003fe  d058              BEQ      |L1.1202|
;;;293        if (pState->Pressed) {
000400  7a30              LDRB     r0,[r6,#8]
000402  2800              CMP      r0,#0
000404  d04d              BEQ      |L1.1186|
;;;294          int Sel;
;;;295          int Range;
;;;296          int x;
;;;297          Sel = pObj->v;
000406  6be7              LDR      r7,[r4,#0x3c]
;;;298          _CalcPositions(pObj, &Pos);
000408  a901              ADD      r1,sp,#4
00040a  4620              MOV      r0,r4
00040c  f7fffffe          BL       _CalcPositions
;;;299          Range = pObj->NumItems - pObj->PageSize;
000410  6c21              LDR      r1,[r4,#0x40]
000412  6ba0              LDR      r0,[r4,#0x38]
000414  eba00a01          SUB      r10,r0,r1
;;;300          /* Swap mouse coordinates if necessary */
;;;301          if (pObj->Widget.State & WIDGET_STATE_VERTICAL) {
000418  8ce0              LDRH     r0,[r4,#0x26]
00041a  f0100f08          TST      r0,#8
00041e  d004              BEQ      |L1.1066|
;;;302            int t = pState->x;
000420  6830              LDR      r0,[r6,#0]
;;;303            pState->x = pState->y;
000422  6871              LDR      r1,[r6,#4]
000424  6031              STR      r1,[r6,#0]
;;;304            pState->y = t;
000426  6070              STR      r0,[r6,#4]
;;;305          }
000428  bf00              NOP      
                  |L1.1066|
;;;306          x = pState->x;
00042a  6835              LDR      r5,[r6,#0]
;;;307          if (x <= Pos.x1_LeftArrow) {         /* left arrow (line left) */
00042c  9802              LDR      r0,[sp,#8]
00042e  42a8              CMP      r0,r5
000430  db01              BLT      |L1.1078|
;;;308            Sel--;
000432  1e7f              SUBS     r7,r7,#1
000434  e024              B        |L1.1152|
                  |L1.1078|
;;;309          } else if (x < Pos.x0_Thumb) {       /* left area  (page left) */
000436  9803              LDR      r0,[sp,#0xc]
000438  42a8              CMP      r0,r5
00043a  dd02              BLE      |L1.1090|
;;;310            Sel -= pObj->PageSize;
00043c  6c20              LDR      r0,[r4,#0x40]
00043e  1a3f              SUBS     r7,r7,r0
000440  e01e              B        |L1.1152|
                  |L1.1090|
;;;311          } else if (x <= Pos.x1_Thumb) {      /* Thumb area */
000442  9804              LDR      r0,[sp,#0x10]
000444  42a8              CMP      r0,r5
000446  db11              BLT      |L1.1132|
;;;312            if (Pos.xSizeMoveable > 0) {
000448  9808              LDR      r0,[sp,#0x20]
00044a  2800              CMP      r0,#0
00044c  dd18              BLE      |L1.1152|
;;;313              x = x - Pos.ThumbSize/2 - Pos.x1_LeftArrow-1;
00044e  9809              LDR      r0,[sp,#0x24]
000450  eb0071d0          ADD      r1,r0,r0,LSR #31
000454  eba50161          SUB      r1,r5,r1,ASR #1
000458  9a02              LDR      r2,[sp,#8]
00045a  1a89              SUBS     r1,r1,r2
00045c  1e4d              SUBS     r5,r1,#1
;;;314              Sel = GUI__DivideRound(Range * x, Pos.xSizeMoveable);
00045e  fb0af005          MUL      r0,r10,r5
000462  9908              LDR      r1,[sp,#0x20]
000464  f7fffffe          BL       GUI__DivideRound
000468  4607              MOV      r7,r0
00046a  e009              B        |L1.1152|
                  |L1.1132|
;;;315            }
;;;316          } else if (x < Pos.x0_RightArrow) {  /* right area (page right) */
00046c  9805              LDR      r0,[sp,#0x14]
00046e  42a8              CMP      r0,r5
000470  dd02              BLE      |L1.1144|
;;;317            Sel += pObj->PageSize;
000472  6c20              LDR      r0,[r4,#0x40]
000474  4407              ADD      r7,r7,r0
000476  e003              B        |L1.1152|
                  |L1.1144|
;;;318          } else  if (x <= Pos.x1_RightArrow) {
000478  9806              LDR      r0,[sp,#0x18]
00047a  42a8              CMP      r0,r5
00047c  db00              BLT      |L1.1152|
;;;319            Sel++;
00047e  1c7f              ADDS     r7,r7,#1
                  |L1.1152|
;;;320          }
;;;321          /* WM_SetFocus(hObj); */
;;;322          WM_SetCapture(hObj, 1);
000480  2101              MOVS     r1,#1
000482  4648              MOV      r0,r9
000484  f7fffffe          BL       WM_SetCapture
;;;323          SCROLLBAR_SetValue(hObj, Sel);
000488  4639              MOV      r1,r7
00048a  4648              MOV      r0,r9
00048c  f7fffffe          BL       SCROLLBAR_SetValue
;;;324          if ((pObj->Widget.State & SCROLLBAR_STATE_PRESSED) == 0){   
000490  8ce0              LDRH     r0,[r4,#0x26]
000492  f4107f80          TST      r0,#0x100
000496  d103              BNE      |L1.1184|
;;;325            _ScrollbarPressed(hObj, pObj);
000498  4621              MOV      r1,r4
00049a  4648              MOV      r0,r9
00049c  f7fffffe          BL       _ScrollbarPressed
                  |L1.1184|
;;;326          }
;;;327        } else {
0004a0  e007              B        |L1.1202|
                  |L1.1186|
;;;328          /* React only if button was pressed before ... avoid problems with moving / hiding windows above (such as dropdown) */
;;;329          if (pObj->Widget.State & SCROLLBAR_STATE_PRESSED) {   
0004a2  8ce0              LDRH     r0,[r4,#0x26]
0004a4  f4107f80          TST      r0,#0x100
0004a8  d003              BEQ      |L1.1202|
;;;330            _ScrollbarReleased(hObj, pObj);
0004aa  4621              MOV      r1,r4
0004ac  4648              MOV      r0,r9
0004ae  f7fffffe          BL       _ScrollbarReleased
                  |L1.1202|
;;;331          }
;;;332        }
;;;333      }
;;;334    }
0004b2  b00a              ADD      sp,sp,#0x28
0004b4  e8bd87f0          POP      {r4-r10,pc}
;;;335    
                          ENDP

                  SCROLLBAR_AddValue PROC
;;;521    */
;;;522    void SCROLLBAR_AddValue(SCROLLBAR_Handle hObj, int Add) {
0004b8  b570              PUSH     {r4-r6,lr}
0004ba  4604              MOV      r4,r0
0004bc  460d              MOV      r5,r1
;;;523      SCROLLBAR_Obj* pObj;
;;;524      if (hObj) {
0004be  b164              CBZ      r4,|L1.1242|
;;;525        WM_LOCK();
0004c0  f7fffffe          BL       GUI_Lock
;;;526        pObj = SCROLLBAR_H2P(hObj);
0004c4  4620              MOV      r0,r4
0004c6  f7fffffe          BL       GUI_ALLOC_h2p
0004ca  4606              MOV      r6,r0
;;;527        SCROLLBAR_SetValue(hObj, pObj->v + Add);
0004cc  6bf0              LDR      r0,[r6,#0x3c]
0004ce  1941              ADDS     r1,r0,r5
0004d0  4620              MOV      r0,r4
0004d2  f7fffffe          BL       SCROLLBAR_SetValue
;;;528        WM_UNLOCK();
0004d6  f7fffffe          BL       GUI_Unlock
                  |L1.1242|
;;;529      }
;;;530    }
0004da  bd70              POP      {r4-r6,pc}
;;;531    
                          ENDP

                  SCROLLBAR_Dec PROC
;;;505    */
;;;506    void SCROLLBAR_Dec(SCROLLBAR_Handle hObj) {
0004dc  b510              PUSH     {r4,lr}
0004de  4604              MOV      r4,r0
;;;507      SCROLLBAR_AddValue(hObj, -1);
0004e0  f04f31ff          MOV      r1,#0xffffffff
0004e4  4620              MOV      r0,r4
0004e6  f7fffffe          BL       SCROLLBAR_AddValue
;;;508    }
0004ea  bd10              POP      {r4,pc}
;;;509    
                          ENDP

                  SCROLLBAR_Inc PROC
;;;513    */
;;;514    void SCROLLBAR_Inc(SCROLLBAR_Handle hObj) {
0004ec  b510              PUSH     {r4,lr}
0004ee  4604              MOV      r4,r0
;;;515      SCROLLBAR_AddValue(hObj,  1);
0004f0  2101              MOVS     r1,#1
0004f2  4620              MOV      r0,r4
0004f4  f7fffffe          BL       SCROLLBAR_AddValue
;;;516    }
0004f8  bd10              POP      {r4,pc}
;;;517    
                          ENDP

                  _OnKey PROC
;;;339    */
;;;340    static void  _OnKey(SCROLLBAR_Handle hObj, WM_MESSAGE*pMsg) {
0004fa  e92d41f0          PUSH     {r4-r8,lr}
0004fe  4606              MOV      r6,r0
000500  460c              MOV      r4,r1
;;;341      const WM_KEY_INFO* pKeyInfo;
;;;342      int Key;
;;;343      pKeyInfo = (const WM_KEY_INFO*)(pMsg->Data.p);
000502  68a5              LDR      r5,[r4,#8]
;;;344      Key = pKeyInfo->Key;
000504  682f              LDR      r7,[r5,#0]
;;;345      if (pKeyInfo->PressedCnt > 0) {
000506  6868              LDR      r0,[r5,#4]
000508  2800              CMP      r0,#0
00050a  dd15              BLE      |L1.1336|
;;;346        switch (Key) {
00050c  2f10              CMP      r7,#0x10
00050e  d00b              BEQ      |L1.1320|
000510  2f11              CMP      r7,#0x11
000512  d00a              BEQ      |L1.1322|
000514  2f12              CMP      r7,#0x12
000516  d002              BEQ      |L1.1310|
000518  2f13              CMP      r7,#0x13
00051a  d10a              BNE      |L1.1330|
00051c  e000              B        |L1.1312|
                  |L1.1310|
;;;347          case GUI_KEY_RIGHT:
;;;348          case GUI_KEY_DOWN:
00051e  bf00              NOP      
                  |L1.1312|
;;;349            SCROLLBAR_Inc(hObj);
000520  4630              MOV      r0,r6
000522  f7fffffe          BL       SCROLLBAR_Inc
;;;350            break;                    /* Send to parent by not doing anything */
000526  e006              B        |L1.1334|
                  |L1.1320|
;;;351          case GUI_KEY_LEFT:
;;;352          case GUI_KEY_UP:
000528  bf00              NOP      
                  |L1.1322|
;;;353            SCROLLBAR_Dec(hObj);
00052a  4630              MOV      r0,r6
00052c  f7fffffe          BL       SCROLLBAR_Dec
;;;354            break;                    /* Send to parent by not doing anything */
000530  e001              B        |L1.1334|
                  |L1.1330|
;;;355          default:
;;;356            return;
;;;357        }
;;;358      }
;;;359    }
000532  e8bd81f0          POP      {r4-r8,pc}
                  |L1.1334|
000536  bf00              NOP                            ;350
                  |L1.1336|
000538  bf00              NOP      
00053a  e7fa              B        |L1.1330|
;;;360    
                          ENDP

                  _OnSetScrollState PROC
;;;364    */
;;;365    static void _OnSetScrollState(SCROLLBAR_Handle hObj, SCROLLBAR_Obj* pObj, const WM_SCROLL_STATE* pState) {
00053c  b570              PUSH     {r4-r6,lr}
00053e  4606              MOV      r6,r0
000540  460c              MOV      r4,r1
000542  4615              MOV      r5,r2
;;;366      if (  (pState->NumItems != pObj->NumItems)
000544  6828              LDR      r0,[r5,#0]
000546  6ba1              LDR      r1,[r4,#0x38]
000548  4288              CMP      r0,r1
00054a  d107              BNE      |L1.1372|
;;;367          || (pObj->PageSize   != pState->PageSize)
00054c  6c20              LDR      r0,[r4,#0x40]
00054e  68a9              LDR      r1,[r5,#8]
000550  4288              CMP      r0,r1
000552  d103              BNE      |L1.1372|
;;;368          || (pObj->v          != pState->v))
000554  6be0              LDR      r0,[r4,#0x3c]
000556  6869              LDR      r1,[r5,#4]
000558  4288              CMP      r0,r1
00055a  d008              BEQ      |L1.1390|
                  |L1.1372|
;;;369      {
;;;370        pObj->NumItems = pState->NumItems;
00055c  6828              LDR      r0,[r5,#0]
00055e  63a0              STR      r0,[r4,#0x38]
;;;371        pObj->PageSize = pState->PageSize;
000560  68a8              LDR      r0,[r5,#8]
000562  6420              STR      r0,[r4,#0x40]
;;;372        pObj->v        = pState->v;
000564  6868              LDR      r0,[r5,#4]
000566  63e0              STR      r0,[r4,#0x3c]
;;;373        WM_InvalidateWindow(hObj);
000568  4630              MOV      r0,r6
00056a  f7fffffe          BL       WM_InvalidateWindow
                  |L1.1390|
;;;374      }
;;;375    }
00056e  bd70              POP      {r4-r6,pc}
;;;376    
                          ENDP

                  SCROLLBAR__InvalidatePartner PROC
;;;380    */
;;;381    void SCROLLBAR__InvalidatePartner(SCROLLBAR_Handle hObj) {     /* Invalidate the partner, since it is also affected */
000570  b570              PUSH     {r4-r6,lr}
000572  4604              MOV      r4,r0
;;;382      WM_InvalidateWindow(WM_GetScrollPartner(hObj));
000574  4620              MOV      r0,r4
000576  f7fffffe          BL       WM_GetScrollPartner
00057a  4605              MOV      r5,r0
00057c  f7fffffe          BL       WM_InvalidateWindow
;;;383      WM_SendMessageNoPara(WM_GetParent(hObj), WM_NOTIFY_CLIENTCHANGE);   /* Client area may have changed */
000580  4620              MOV      r0,r4
000582  f7fffffe          BL       WM_GetParent
000586  4605              MOV      r5,r0
000588  2125              MOVS     r1,#0x25
00058a  f7fffffe          BL       WM_SendMessageNoPara
;;;384    }
00058e  bd70              POP      {r4-r6,pc}
;;;385    
                          ENDP

                  _SCROLLBAR_Callback PROC
;;;389    */
;;;390    static void _SCROLLBAR_Callback (WM_MESSAGE *pMsg) {
000590  b570              PUSH     {r4-r6,lr}
000592  4604              MOV      r4,r0
;;;391      SCROLLBAR_Handle hObj;
;;;392      SCROLLBAR_Obj* pObj;
;;;393      hObj = pMsg->hWin;
000594  f9b46004          LDRSH    r6,[r4,#4]
;;;394      pObj = SCROLLBAR_H2P(hObj);
000598  4630              MOV      r0,r6
00059a  f7fffffe          BL       GUI_ALLOC_h2p
00059e  4605              MOV      r5,r0
;;;395      /* Let widget handle the standard messages */
;;;396      if (WIDGET_HandleActive(hObj, pMsg) == 0) {
0005a0  4621              MOV      r1,r4
0005a2  4630              MOV      r0,r6
0005a4  f7fffffe          BL       WIDGET_HandleActive
0005a8  b900              CBNZ     r0,|L1.1452|
                  |L1.1450|
;;;397        return;
;;;398      }
;;;399      switch (pMsg->MsgId) {
;;;400      case WM_DELETE:
;;;401        SCROLLBAR__InvalidatePartner(hObj);
;;;402        break;
;;;403      case WM_PAINT:
;;;404        GUI_DEBUG_LOG("SCROLLBAR: _Callback(WM_PAINT)\n");
;;;405        _Paint(pObj);
;;;406        return;
;;;407      case WM_TOUCH:
;;;408        _OnTouch(hObj, pObj, pMsg);
;;;409        break;
;;;410      case WM_KEY:
;;;411        _OnKey(hObj, pMsg);
;;;412        break;
;;;413      case WM_SET_SCROLL_STATE:
;;;414        _OnSetScrollState(hObj, pObj, (const WM_SCROLL_STATE*)pMsg->Data.p);
;;;415        break;
;;;416      case WM_GET_SCROLL_STATE:
;;;417        ((WM_SCROLL_STATE*)pMsg->Data.p)->NumItems = pObj->NumItems;
;;;418        ((WM_SCROLL_STATE*)pMsg->Data.p)->PageSize = pObj->PageSize;
;;;419        ((WM_SCROLL_STATE*)pMsg->Data.p)->v        = pObj->v;
;;;420        break;
;;;421      }
;;;422      WM_DefaultProc(pMsg);
;;;423    }
0005aa  bd70              POP      {r4-r6,pc}
                  |L1.1452|
0005ac  6820              LDR      r0,[r4,#0]            ;399
0005ae  280f              CMP      r0,#0xf               ;399
0005b0  d010              BEQ      |L1.1492|
0005b2  dc06              BGT      |L1.1474|
0005b4  280b              CMP      r0,#0xb               ;399
0005b6  d009              BEQ      |L1.1484|
0005b8  280c              CMP      r0,#0xc               ;399
0005ba  d00f              BEQ      |L1.1500|
0005bc  280e              CMP      r0,#0xe               ;399
0005be  d128              BNE      |L1.1554|
0005c0  e012              B        |L1.1512|
                  |L1.1474|
0005c2  2823              CMP      r0,#0x23              ;399
0005c4  d01b              BEQ      |L1.1534|
0005c6  2824              CMP      r0,#0x24              ;399
0005c8  d123              BNE      |L1.1554|
0005ca  e012              B        |L1.1522|
                  |L1.1484|
0005cc  4630              MOV      r0,r6                 ;401
0005ce  f7fffffe          BL       SCROLLBAR__InvalidatePartner
0005d2  e01e              B        |L1.1554|
                  |L1.1492|
0005d4  4628              MOV      r0,r5                 ;405
0005d6  f7fffffe          BL       _Paint
0005da  e7e6              B        |L1.1450|
                  |L1.1500|
0005dc  4622              MOV      r2,r4                 ;408
0005de  4629              MOV      r1,r5                 ;408
0005e0  4630              MOV      r0,r6                 ;408
0005e2  f7fffffe          BL       _OnTouch
0005e6  e014              B        |L1.1554|
                  |L1.1512|
0005e8  4621              MOV      r1,r4                 ;411
0005ea  4630              MOV      r0,r6                 ;411
0005ec  f7fffffe          BL       _OnKey
0005f0  e00f              B        |L1.1554|
                  |L1.1522|
0005f2  4629              MOV      r1,r5                 ;414
0005f4  4630              MOV      r0,r6                 ;414
0005f6  68a2              LDR      r2,[r4,#8]            ;414
0005f8  f7fffffe          BL       _OnSetScrollState
0005fc  e009              B        |L1.1554|
                  |L1.1534|
0005fe  6ba8              LDR      r0,[r5,#0x38]         ;417
000600  68a1              LDR      r1,[r4,#8]            ;417
000602  6008              STR      r0,[r1,#0]            ;417
000604  6c28              LDR      r0,[r5,#0x40]         ;418
000606  68a1              LDR      r1,[r4,#8]            ;418
000608  6088              STR      r0,[r1,#8]            ;418
00060a  6be8              LDR      r0,[r5,#0x3c]         ;419
00060c  68a1              LDR      r1,[r4,#8]            ;419
00060e  6048              STR      r0,[r1,#4]            ;419
000610  bf00              NOP                            ;420
                  |L1.1554|
000612  bf00              NOP                            ;402
000614  4620              MOV      r0,r4                 ;422
000616  f7fffffe          BL       WM_DefaultProc
00061a  bf00              NOP      
00061c  e7c5              B        |L1.1450|
;;;424    
                          ENDP

                  SCROLLBAR_CreateEx PROC
;;;438    */
;;;439    SCROLLBAR_Handle SCROLLBAR_CreateEx(int x0, int y0, int xsize, int ysize, WM_HWIN hParent,
00061e  e92d4fff          PUSH     {r0-r11,lr}
;;;440                                        int WinFlags, int ExFlags, int Id)
;;;441    {
000622  b085              SUB      sp,sp,#0x14
000624  4616              MOV      r6,r2
000626  461f              MOV      r7,r3
000628  f8ddb048          LDR      r11,[sp,#0x48]
00062c  e9dd8914          LDRD     r8,r9,[sp,#0x50]
;;;442      SCROLLBAR_Handle hObj;
;;;443      WM_LOCK();
000630  f7fffffe          BL       GUI_Lock
;;;444      /* Set defaults if necessary */
;;;445      if ((xsize == 0) && (ysize == 0)) {
000634  bb5e              CBNZ     r6,|L1.1678|
000636  bb57              CBNZ     r7,|L1.1678|
;;;446        GUI_RECT Rect;
;;;447        WM_GetInsideRectEx(hParent, &Rect);
000638  a903              ADD      r1,sp,#0xc
00063a  4658              MOV      r0,r11
00063c  f7fffffe          BL       WM_GetInsideRectEx
;;;448        if (ExFlags & SCROLLBAR_CF_VERTICAL) {
000640  f0180f08          TST      r8,#8
000644  d011              BEQ      |L1.1642|
;;;449          xsize = SCROLLBAR__DefaultWidth;
000646  4853              LDR      r0,|L1.1940|
000648  f9b06000          LDRSH    r6,[r0,#0]  ; SCROLLBAR__DefaultWidth
;;;450          x0    = Rect.x1 + 1 - xsize;
00064c  f9bd0010          LDRSH    r0,[sp,#0x10]
000650  1c40              ADDS     r0,r0,#1
000652  1b80              SUBS     r0,r0,r6
000654  9005              STR      r0,[sp,#0x14]
;;;451          y0    = Rect.y0;
000656  f9bd000e          LDRSH    r0,[sp,#0xe]
00065a  9006              STR      r0,[sp,#0x18]
;;;452          ysize = Rect.y1 - Rect.y0 + 1;
00065c  f9bd0012          LDRSH    r0,[sp,#0x12]
000660  f9bd100e          LDRSH    r1,[sp,#0xe]
000664  1a40              SUBS     r0,r0,r1
000666  1c47              ADDS     r7,r0,#1
000668  e010              B        |L1.1676|
                  |L1.1642|
;;;453        } else {
;;;454          ysize = SCROLLBAR__DefaultWidth;
00066a  484a              LDR      r0,|L1.1940|
00066c  f9b07000          LDRSH    r7,[r0,#0]  ; SCROLLBAR__DefaultWidth
;;;455          y0    = Rect.y1 + 1 - ysize;
000670  f9bd0012          LDRSH    r0,[sp,#0x12]
000674  1c40              ADDS     r0,r0,#1
000676  1bc0              SUBS     r0,r0,r7
000678  9006              STR      r0,[sp,#0x18]
;;;456          x0    = Rect.x0;
00067a  f9bd000c          LDRSH    r0,[sp,#0xc]
00067e  9005              STR      r0,[sp,#0x14]
;;;457          xsize = Rect.x1 - Rect.x0 + 1;
000680  f9bd0010          LDRSH    r0,[sp,#0x10]
000684  f9bd100c          LDRSH    r1,[sp,#0xc]
000688  1a40              SUBS     r0,r0,r1
00068a  1c46              ADDS     r6,r0,#1
                  |L1.1676|
;;;458        }
;;;459      }
00068c  bf00              NOP      
                  |L1.1678|
;;;460      /* Create the window */
;;;461      hObj = WM_CreateWindowAsChild(x0, y0, xsize, ysize, hParent, WinFlags, _SCROLLBAR_Callback,
00068e  2124              MOVS     r1,#0x24
000690  4a41              LDR      r2,|L1.1944|
000692  9813              LDR      r0,[sp,#0x4c]
000694  b280              UXTH     r0,r0
000696  463b              MOV      r3,r7
000698  e9cdb000          STRD     r11,r0,[sp,#0]
00069c  e9cd2102          STRD     r2,r1,[sp,#8]
0006a0  4632              MOV      r2,r6
0006a2  e9dd0105          LDRD     r0,r1,[sp,#0x14]
0006a6  f7fffffe          BL       WM_CreateWindowAsChild
0006aa  4682              MOV      r10,r0
;;;462                                    sizeof(SCROLLBAR_Obj) - sizeof(WM_Obj));
;;;463      if (hObj) {
0006ac  f1ba0f00          CMP      r10,#0
0006b0  d031              BEQ      |L1.1814|
;;;464        SCROLLBAR_Obj* pObj = SCROLLBAR_H2P(hObj);
0006b2  4650              MOV      r0,r10
0006b4  f7fffffe          BL       GUI_ALLOC_h2p
0006b8  4604              MOV      r4,r0
;;;465        U16 InitState;
;;;466        /* Handle SpecialFlags */
;;;467        InitState = 0;
0006ba  2500              MOVS     r5,#0
;;;468        if (ExFlags & SCROLLBAR_CF_VERTICAL) {
0006bc  f0180f08          TST      r8,#8
0006c0  d001              BEQ      |L1.1734|
;;;469          InitState |= WIDGET_CF_VERTICAL;
0006c2  f0450508          ORR      r5,r5,#8
                  |L1.1734|
;;;470        }
;;;471        if (ExFlags & SCROLLBAR_CF_FOCUSSABLE) {
0006c6  f0180f10          TST      r8,#0x10
0006ca  d001              BEQ      |L1.1744|
;;;472          InitState |= WIDGET_STATE_FOCUSSABLE;
0006cc  f0450510          ORR      r5,r5,#0x10
                  |L1.1744|
;;;473        }
;;;474        if ((Id != GUI_ID_HSCROLL) && (Id != GUI_ID_VSCROLL)) {
0006d0  f1b90fff          CMP      r9,#0xff
0006d4  d004              BEQ      |L1.1760|
0006d6  f1b90ffe          CMP      r9,#0xfe
0006da  d001              BEQ      |L1.1760|
;;;475          InitState |= WIDGET_STATE_FOCUSSABLE;
0006dc  f0450510          ORR      r5,r5,#0x10
                  |L1.1760|
;;;476        }
;;;477        /* init widget specific variables */
;;;478        WIDGET__Init(&pObj->Widget, Id, InitState);
0006e0  462a              MOV      r2,r5
0006e2  4649              MOV      r1,r9
0006e4  4620              MOV      r0,r4
0006e6  f7fffffe          BL       WIDGET__Init
;;;479        /* init member variables */
;;;480        SCROLLBAR_INIT_ID(pObj);
;;;481        pObj->aBkColor[0]   = SCROLLBAR__aDefaultBkColor[0];
0006ea  482c              LDR      r0,|L1.1948|
0006ec  6800              LDR      r0,[r0,#0]  ; SCROLLBAR__aDefaultBkColor
0006ee  62a0              STR      r0,[r4,#0x28]
;;;482        pObj->aBkColor[1]   = SCROLLBAR__aDefaultBkColor[1];
0006f0  482a              LDR      r0,|L1.1948|
0006f2  6841              LDR      r1,[r0,#4]  ; SCROLLBAR__aDefaultBkColor
0006f4  62e1              STR      r1,[r4,#0x2c]
;;;483        pObj->aColor[0]     = SCROLLBAR__aDefaultColor[0];
0006f6  482a              LDR      r0,|L1.1952|
0006f8  6800              LDR      r0,[r0,#0]  ; SCROLLBAR__aDefaultColor
0006fa  6320              STR      r0,[r4,#0x30]
;;;484        pObj->aColor[1]     = SCROLLBAR__aDefaultColor[1];
0006fc  4828              LDR      r0,|L1.1952|
0006fe  6841              LDR      r1,[r0,#4]  ; SCROLLBAR__aDefaultColor
000700  6361              STR      r1,[r4,#0x34]
;;;485        pObj->NumItems      = 100;
000702  2064              MOVS     r0,#0x64
000704  63a0              STR      r0,[r4,#0x38]
;;;486        pObj->PageSize      =  10;
000706  200a              MOVS     r0,#0xa
000708  6420              STR      r0,[r4,#0x40]
;;;487        pObj->v             =   0;
00070a  2000              MOVS     r0,#0
00070c  63e0              STR      r0,[r4,#0x3c]
;;;488        SCROLLBAR__InvalidatePartner(hObj);
00070e  4650              MOV      r0,r10
000710  f7fffffe          BL       SCROLLBAR__InvalidatePartner
;;;489      } else {
000714  bf00              NOP      
                  |L1.1814|
;;;490        GUI_DEBUG_ERROROUT_IF(hObj==0, "SCROLLBAR_Create failed")
;;;491      }
;;;492      WM_UNLOCK();
000716  f7fffffe          BL       GUI_Unlock
;;;493      return hObj;
00071a  4650              MOV      r0,r10
;;;494    }
00071c  b009              ADD      sp,sp,#0x24
00071e  e8bd8ff0          POP      {r4-r11,pc}
;;;495    
                          ENDP

                  SCROLLBAR_SetNumItems PROC
;;;564    */
;;;565    void SCROLLBAR_SetNumItems(SCROLLBAR_Handle hObj, int NumItems) {
000722  b570              PUSH     {r4-r6,lr}
000724  4606              MOV      r6,r0
000726  460d              MOV      r5,r1
;;;566      SCROLLBAR_Obj* pObj;
;;;567      if (hObj) {
000728  b176              CBZ      r6,|L1.1864|
;;;568        WM_LOCK();
00072a  f7fffffe          BL       GUI_Lock
;;;569        pObj = SCROLLBAR_H2P(hObj);
00072e  4630              MOV      r0,r6
000730  f7fffffe          BL       GUI_ALLOC_h2p
000734  4604              MOV      r4,r0
;;;570        if (pObj->NumItems != NumItems) {
000736  6ba0              LDR      r0,[r4,#0x38]
000738  42a8              CMP      r0,r5
00073a  d003              BEQ      |L1.1860|
;;;571          pObj->NumItems = NumItems;
00073c  63a5              STR      r5,[r4,#0x38]
;;;572          WM_InvalidateWindow(hObj);
00073e  4630              MOV      r0,r6
000740  f7fffffe          BL       WM_InvalidateWindow
                  |L1.1860|
;;;573        }
;;;574        WM_UNLOCK();
000744  f7fffffe          BL       GUI_Unlock
                  |L1.1864|
;;;575      }
;;;576    }
000748  bd70              POP      {r4-r6,pc}
;;;577    
                          ENDP

                  SCROLLBAR_SetPageSize PROC
;;;581    */
;;;582    void SCROLLBAR_SetPageSize(SCROLLBAR_Handle hObj, int PageSize) {
00074a  b570              PUSH     {r4-r6,lr}
00074c  4606              MOV      r6,r0
00074e  460d              MOV      r5,r1
;;;583      SCROLLBAR_Obj* pObj;
;;;584      if (hObj) {
000750  b176              CBZ      r6,|L1.1904|
;;;585        WM_LOCK();
000752  f7fffffe          BL       GUI_Lock
;;;586        pObj = SCROLLBAR_H2P(hObj);
000756  4630              MOV      r0,r6
000758  f7fffffe          BL       GUI_ALLOC_h2p
00075c  4604              MOV      r4,r0
;;;587        if (pObj->PageSize != PageSize) {
00075e  6c20              LDR      r0,[r4,#0x40]
000760  42a8              CMP      r0,r5
000762  d003              BEQ      |L1.1900|
;;;588          pObj->PageSize = PageSize;
000764  6425              STR      r5,[r4,#0x40]
;;;589          WM_InvalidateWindow(hObj);
000766  4630              MOV      r0,r6
000768  f7fffffe          BL       WM_InvalidateWindow
                  |L1.1900|
;;;590        }
;;;591        WM_UNLOCK();
00076c  f7fffffe          BL       GUI_Unlock
                  |L1.1904|
;;;592      }
;;;593    }
000770  bd70              POP      {r4-r6,pc}
;;;594    
                          ENDP

                  SCROLLBAR_SetState PROC
;;;598    */
;;;599    void  SCROLLBAR_SetState   (SCROLLBAR_Handle hObj, const WM_SCROLL_STATE* pState) {
000772  b570              PUSH     {r4-r6,lr}
000774  4605              MOV      r5,r0
000776  460c              MOV      r4,r1
;;;600      if (hObj) {
000778  b15d              CBZ      r5,|L1.1938|
;;;601        SCROLLBAR_SetPageSize(hObj, pState->PageSize);
00077a  4628              MOV      r0,r5
00077c  68a1              LDR      r1,[r4,#8]
00077e  f7fffffe          BL       SCROLLBAR_SetPageSize
;;;602        SCROLLBAR_SetNumItems(hObj, pState->NumItems);
000782  4628              MOV      r0,r5
000784  6821              LDR      r1,[r4,#0]
000786  f7fffffe          BL       SCROLLBAR_SetNumItems
;;;603        SCROLLBAR_SetValue   (hObj, pState->v);
00078a  4628              MOV      r0,r5
00078c  6861              LDR      r1,[r4,#4]
00078e  f7fffffe          BL       SCROLLBAR_SetValue
                  |L1.1938|
;;;604      }
;;;605    }
000792  bd70              POP      {r4-r6,pc}
;;;606    
                          ENDP

                  |L1.1940|
                          DCD      SCROLLBAR__DefaultWidth
                  |L1.1944|
                          DCD      _SCROLLBAR_Callback
                  |L1.1948|
                          DCD      SCROLLBAR__aDefaultBkColor
                  |L1.1952|
                          DCD      SCROLLBAR__aDefaultColor

                          AREA ||.data||, DATA, ALIGN=2

                  SCROLLBAR__aDefaultBkColor
                          DCD      0x00808080
                          DCD      0x00000000
                  SCROLLBAR__aDefaultColor
                          DCD      0x00c0c0c0
                          DCD      0x00000000
                  SCROLLBAR__DefaultWidth
000010  000b              DCW      0x000b
