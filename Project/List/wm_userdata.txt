; generated by ARM C/C++ Compiler, 4.1 [Build 894]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\Obj\wm_userdata.o --asm_dir=.\List\ --list_dir=.\List\ --depend=.\Obj\wm_userdata.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\Libraries\CMSIS\CM3\CoreSupport -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x\startup\arm -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\User -I..\BaseDrive -I..\Ucosii -I..\Ucosii\Port -I..\Ucosii\Src -I..\Ucosii\Include -I..\Ucgui -I..\Ucgui\Config -I..\Ucgui\GUI_X -I..\Ucgui\GUI -I..\Ucgui\GUI\ConvertColor -I..\Ucgui\GUI\ConvertMono -I..\Ucgui\GUI\Core -I..\Ucgui\GUI\Core -I..\Ucgui\GUI\LCDDriver -I..\Ucgui\GUI\MultiLayer -I..\Ucgui\GUI\Widget -I..\Ucgui\GUI\WM -I..\ExternalDrive\Lcd -I..\ExternalDrive\Touch -I..\Panel -I"D:\Program files\Keil\ARM\RV31\Inc" -I"D:\Program files\Keil\ARM\CMSIS\Include" -I"D:\Program files\Keil\ARM\Inc\ST\STM32F10x" -D__MICROLIB -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=.\Obj\wm_userdata.crf ..\Ucgui\GUI\WM\WM_UserData.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=1

                  Min PROC
;;;34     */
;;;35     static int Min(int v0, int v1) {
000000  4602              MOV      r2,r0
;;;36       return (v0 < v1) ? v0 : v1;
000002  428a              CMP      r2,r1
000004  da01              BGE      |L1.10|
000006  4610              MOV      r0,r2
                  |L1.8|
;;;37     }
000008  4770              BX       lr
                  |L1.10|
00000a  4608              MOV      r0,r1                 ;36
00000c  e7fc              B        |L1.8|
;;;38     
                          ENDP

                  _CalcNumBytes PROC
;;;42     */
;;;43     static int _CalcNumBytes(WM_HWIN hWin, int NumBytes) {
00000e  b570              PUSH     {r4-r6,lr}
000010  4604              MOV      r4,r0
000012  460d              MOV      r5,r1
;;;44       return Min(GUI_ALLOC_GetSize(hWin) - sizeof(WM_Obj), NumBytes);
000014  4620              MOV      r0,r4
000016  f7fffffe          BL       GUI_ALLOC_GetSize
00001a  f1a00620          SUB      r6,r0,#0x20
00001e  4629              MOV      r1,r5
000020  4630              MOV      r0,r6
000022  f7fffffe          BL       Min
;;;45     }
000026  bd70              POP      {r4-r6,pc}
;;;46     
                          ENDP

                  WM_GetUserData PROC
;;;63     */
;;;64     int WM_GetUserData(WM_HWIN hWin, void* pDest, int NumBytes) {
000028  e92d41f0          PUSH     {r4-r8,lr}
00002c  4605              MOV      r5,r0
00002e  460e              MOV      r6,r1
000030  4614              MOV      r4,r2
;;;65       if (hWin) {
000032  b19d              CBZ      r5,|L1.92|
;;;66         WM_Obj *pWin;
;;;67         NumBytes = _CalcNumBytes(hWin, NumBytes);
000034  4621              MOV      r1,r4
000036  4628              MOV      r0,r5
000038  f7fffffe          BL       _CalcNumBytes
00003c  4604              MOV      r4,r0
;;;68         WM_LOCK();
00003e  f7fffffe          BL       GUI_Lock
;;;69         pWin = WM_H2P(hWin);
000042  4628              MOV      r0,r5
000044  f7fffffe          BL       GUI_ALLOC_h2p
000048  4607              MOV      r7,r0
;;;70         memcpy(pDest, pWin + 1, NumBytes);
00004a  4622              MOV      r2,r4
00004c  f1070120          ADD      r1,r7,#0x20
000050  4630              MOV      r0,r6
000052  f7fffffe          BL       __aeabi_memcpy
;;;71         WM_UNLOCK();
000056  f7fffffe          BL       GUI_Unlock
;;;72       }
00005a  bf00              NOP      
                  |L1.92|
;;;73       return NumBytes;
00005c  4620              MOV      r0,r4
;;;74     }
00005e  e8bd81f0          POP      {r4-r8,pc}
;;;75     
                          ENDP

                  WM_SetUserData PROC
;;;84     */
;;;85     int WM_SetUserData(WM_HWIN hWin, const void* pSrc, int NumBytes) {
000062  e92d41f0          PUSH     {r4-r8,lr}
000066  4605              MOV      r5,r0
000068  460e              MOV      r6,r1
00006a  4614              MOV      r4,r2
;;;86       if (hWin) {
00006c  b19d              CBZ      r5,|L1.150|
;;;87         WM_Obj *pWin;
;;;88         NumBytes = _CalcNumBytes(hWin, NumBytes);
00006e  4621              MOV      r1,r4
000070  4628              MOV      r0,r5
000072  f7fffffe          BL       _CalcNumBytes
000076  4604              MOV      r4,r0
;;;89         WM_LOCK();
000078  f7fffffe          BL       GUI_Lock
;;;90         pWin = WM_H2P(hWin);
00007c  4628              MOV      r0,r5
00007e  f7fffffe          BL       GUI_ALLOC_h2p
000082  4607              MOV      r7,r0
;;;91         memcpy(pWin + 1, pSrc, NumBytes);
000084  4622              MOV      r2,r4
000086  4631              MOV      r1,r6
000088  f1070020          ADD      r0,r7,#0x20
00008c  f7fffffe          BL       __aeabi_memcpy
;;;92         WM_UNLOCK();
000090  f7fffffe          BL       GUI_Unlock
;;;93       }
000094  bf00              NOP      
                  |L1.150|
;;;94       return NumBytes;
000096  4620              MOV      r0,r4
;;;95     }
000098  e8bd81f0          POP      {r4-r8,pc}
;;;96     
                          ENDP

