; generated by ARM C/C++ Compiler, 4.1 [Build 894]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\Obj\guistream.o --asm_dir=.\List\ --list_dir=.\List\ --depend=.\Obj\guistream.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\Libraries\CMSIS\CM3\CoreSupport -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x\startup\arm -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\User -I..\BaseDrive -I..\Ucosii -I..\Ucosii\Port -I..\Ucosii\Src -I..\Ucosii\Include -I..\Ucgui -I..\Ucgui\Config -I..\Ucgui\GUI_X -I..\Ucgui\GUI -I..\Ucgui\GUI\ConvertColor -I..\Ucgui\GUI\ConvertMono -I..\Ucgui\GUI\Core -I..\Ucgui\GUI\Core -I..\Ucgui\GUI\LCDDriver -I..\Ucgui\GUI\MultiLayer -I..\Ucgui\GUI\Widget -I..\Ucgui\GUI\WM -I..\ExternalDrive\Lcd -I..\ExternalDrive\Touch -I..\Panel -I"D:\Program files\Keil\ARM\RV31\Inc" -I"D:\Program files\Keil\ARM\CMSIS\Include" -I"D:\Program files\Keil\ARM\Inc\ST\STM32F10x" -D__MICROLIB -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=.\Obj\guistream.crf ..\Ucgui\GUI\Core\GUIStream.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=1

                  GUI_DrawStreamedBitmap PROC
;;;32     */
;;;33     void GUI_DrawStreamedBitmap(const GUI_BITMAP_STREAM *pBitmapHeader, int x, int y) {
000000  b570              PUSH     {r4-r6,lr}
000002  b088              SUB      sp,sp,#0x20
000004  4604              MOV      r4,r0
000006  460d              MOV      r5,r1
000008  4616              MOV      r6,r2
;;;34       GUI_BITMAP Bitmap = {0};
00000a  2114              MOVS     r1,#0x14
00000c  a803              ADD      r0,sp,#0xc
00000e  f7fffffe          BL       __aeabi_memclr4
;;;35       GUI_LOGPALETTE Palette;
;;;36       Bitmap.BitsPerPixel = pBitmapHeader->BitsPerPixel;
000012  8960              LDRH     r0,[r4,#0xa]
000014  f8ad0012          STRH     r0,[sp,#0x12]
;;;37       Bitmap.BytesPerLine = pBitmapHeader->BytesPerLine;
000018  8920              LDRH     r0,[r4,#8]
00001a  f8ad0010          STRH     r0,[sp,#0x10]
;;;38       Bitmap.pData        = ((const U8*)pBitmapHeader)+16+4*pBitmapHeader->NumColors;
00001e  89a1              LDRH     r1,[r4,#0xc]
000020  f1040010          ADD      r0,r4,#0x10
000024  2204              MOVS     r2,#4
000026  fb020001          MLA      r0,r2,r1,r0
00002a  9005              STR      r0,[sp,#0x14]
;;;39       Bitmap.pPal         = &Palette;
00002c  f8cdd018          STR      sp,[sp,#0x18]
;;;40       Bitmap.XSize        = pBitmapHeader->XSize;
000030  88a0              LDRH     r0,[r4,#4]
000032  f8ad000c          STRH     r0,[sp,#0xc]
;;;41       Bitmap.YSize        = pBitmapHeader->YSize;
000036  88e0              LDRH     r0,[r4,#6]
000038  f8ad000e          STRH     r0,[sp,#0xe]
;;;42       Palette.HasTrans    = pBitmapHeader->HasTrans;
00003c  89e0              LDRH     r0,[r4,#0xe]
00003e  b2c0              UXTB     r0,r0
000040  f88d0004          STRB     r0,[sp,#4]
;;;43       Palette.NumEntries  = pBitmapHeader->NumColors;
000044  89a0              LDRH     r0,[r4,#0xc]
000046  9000              STR      r0,[sp,#0]
;;;44       Palette.pPalEntries = (const LCD_COLOR*)((const U8*)pBitmapHeader+16);
000048  f1040010          ADD      r0,r4,#0x10
00004c  9002              STR      r0,[sp,#8]
;;;45       GUI_DrawBitmap(&Bitmap, x, y);
00004e  4632              MOV      r2,r6
000050  4629              MOV      r1,r5
000052  a803              ADD      r0,sp,#0xc
000054  f7fffffe          BL       GUI_DrawBitmap
;;;46     }
000058  b008              ADD      sp,sp,#0x20
00005a  bd70              POP      {r4-r6,pc}
;;;47     
                          ENDP

