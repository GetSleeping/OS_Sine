; generated by ARM C/C++ Compiler, 4.1 [Build 894]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\Obj\wm_setcapturemove.o --asm_dir=.\List\ --list_dir=.\List\ --depend=.\Obj\wm_setcapturemove.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\Libraries\CMSIS\CM3\CoreSupport -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x\startup\arm -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\User -I..\BaseDrive -I..\Ucosii -I..\Ucosii\Port -I..\Ucosii\Src -I..\Ucosii\Include -I..\Ucgui -I..\Ucgui\Config -I..\Ucgui\GUI_X -I..\Ucgui\GUI -I..\Ucgui\GUI\ConvertColor -I..\Ucgui\GUI\ConvertMono -I..\Ucgui\GUI\Core -I..\Ucgui\GUI\Core -I..\Ucgui\GUI\LCDDriver -I..\Ucgui\GUI\MultiLayer -I..\Ucgui\GUI\Widget -I..\Ucgui\GUI\WM -I..\ExternalDrive\Lcd -I..\ExternalDrive\Touch -I..\Panel -I"D:\Program files\Keil\ARM\RV31\Inc" -I"D:\Program files\Keil\ARM\CMSIS\Include" -I"D:\Program files\Keil\ARM\Inc\ST\STM32F10x" -D__MICROLIB -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=.\Obj\wm_setcapturemove.crf ..\Ucgui\GUI\WM\WM_SetCaptureMove.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  WM_SetCaptureMove PROC
;;;41     */
;;;42     void WM_SetCaptureMove(WM_HWIN hWin, const GUI_PID_STATE* pState, int MinVisibility) {
000000  e92d47ff          PUSH     {r0-r10,lr}
000004  4606              MOV      r6,r0
000006  460c              MOV      r4,r1
000008  4615              MOV      r5,r2
;;;43       if (!WM_HasCaptured(hWin)) {
00000a  4630              MOV      r0,r6
00000c  f7fffffe          BL       WM_HasCaptured
000010  b958              CBNZ     r0,|L1.42|
;;;44         WM_SetCapture(hWin, 1);        /* Set capture with auto release */
000012  2101              MOVS     r1,#1
000014  4630              MOV      r0,r6
000016  f7fffffe          BL       WM_SetCapture
;;;45         WM__CapturePoint.x = pState->x;
00001a  6820              LDR      r0,[r4,#0]
00001c  b200              SXTH     r0,r0
00001e  491d              LDR      r1,|L1.148|
000020  8008              STRH     r0,[r1,#0]
;;;46         WM__CapturePoint.y = pState->y;
000022  6860              LDR      r0,[r4,#4]
000024  b200              SXTH     r0,r0
000026  8048              STRH     r0,[r1,#2]
000028  e032              B        |L1.144|
                  |L1.42|
;;;47       } else {                         /* Moving ... let the window move ! */
;;;48         int dx, dy;
;;;49         dx = pState->x - WM__CapturePoint.x;
00002a  491a              LDR      r1,|L1.148|
00002c  f9b11000          LDRSH    r1,[r1,#0]  ; WM__CapturePoint
000030  6820              LDR      r0,[r4,#0]
000032  1a47              SUBS     r7,r0,r1
;;;50         dy = pState->y - WM__CapturePoint.y;
000034  4917              LDR      r1,|L1.148|
000036  f9b11002          LDRSH    r1,[r1,#2]  ; WM__CapturePoint
00003a  6860              LDR      r0,[r4,#4]
00003c  eba00801          SUB      r8,r0,r1
;;;51         /* make sure at least a part of the windows stays inside of its parent */
;;;52         if (MinVisibility == 0) {
000040  b92d              CBNZ     r5,|L1.78|
;;;53           WM_MoveWindow(hWin, dx, dy);
000042  4642              MOV      r2,r8
000044  4639              MOV      r1,r7
000046  4630              MOV      r0,r6
000048  f7fffffe          BL       WM_MoveWindow
00004c  e01f              B        |L1.142|
                  |L1.78|
;;;54         } else {
;;;55           GUI_RECT Rect, RectParent;
;;;56           /* make sure at least a part of the windows stays inside of its parent */
;;;57           WM_GetWindowRectEx(hWin, &Rect);
00004e  a902              ADD      r1,sp,#8
000050  4630              MOV      r0,r6
000052  f7fffffe          BL       WM_GetWindowRectEx
;;;58           WM_GetWindowRectEx(WM_GetParent(hWin), &RectParent);
000056  4630              MOV      r0,r6
000058  f7fffffe          BL       WM_GetParent
00005c  4681              MOV      r9,r0
00005e  4669              MOV      r1,sp
000060  f7fffffe          BL       WM_GetWindowRectEx
;;;59           GUI_MoveRect(&Rect, dx, dy);
000064  4642              MOV      r2,r8
000066  4639              MOV      r1,r7
000068  a802              ADD      r0,sp,#8
00006a  f7fffffe          BL       GUI_MoveRect
;;;60           GUI__ReduceRect(&RectParent, &RectParent, MinVisibility);
00006e  462a              MOV      r2,r5
000070  4669              MOV      r1,sp
000072  4668              MOV      r0,sp
000074  f7fffffe          BL       GUI__ReduceRect
;;;61           if (GUI_RectsIntersect(&Rect, &RectParent)) {
000078  4669              MOV      r1,sp
00007a  a802              ADD      r0,sp,#8
00007c  f7fffffe          BL       GUI_RectsIntersect
000080  b120              CBZ      r0,|L1.140|
;;;62             WM_MoveWindow(hWin, dx, dy);
000082  4642              MOV      r2,r8
000084  4639              MOV      r1,r7
000086  4630              MOV      r0,r6
000088  f7fffffe          BL       WM_MoveWindow
                  |L1.140|
;;;63           }
;;;64         }
00008c  bf00              NOP      
                  |L1.142|
;;;65       }
00008e  bf00              NOP      
                  |L1.144|
;;;66     }
000090  e8bd87ff          POP      {r0-r10,pc}
;;;67     
                          ENDP

                  |L1.148|
                          DCD      WM__CapturePoint

                          AREA ||.data||, DATA, ALIGN=1

                  WM__CapturePoint
                          DCDU     0x00000000
