; generated by ARM C/C++ Compiler, 4.1 [Build 894]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\Obj\gui_onkey.o --asm_dir=.\List\ --list_dir=.\List\ --depend=.\Obj\gui_onkey.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\Libraries\CMSIS\CM3\CoreSupport -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x\startup\arm -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\User -I..\BaseDrive -I..\Ucosii -I..\Ucosii\Port -I..\Ucosii\Src -I..\Ucosii\Include -I..\Ucgui -I..\Ucgui\Config -I..\Ucgui\GUI_X -I..\Ucgui\GUI -I..\Ucgui\GUI\ConvertColor -I..\Ucgui\GUI\ConvertMono -I..\Ucgui\GUI\Core -I..\Ucgui\GUI\Core -I..\Ucgui\GUI\LCDDriver -I..\Ucgui\GUI\MultiLayer -I..\Ucgui\GUI\Widget -I..\Ucgui\GUI\WM -I..\ExternalDrive\Lcd -I..\ExternalDrive\Touch -I..\Panel -I"D:\Program files\Keil\ARM\RV31\Inc" -I"D:\Program files\Keil\ARM\CMSIS\Include" -I"D:\Program files\Keil\ARM\Inc\ST\STM32F10x" -D__MICROLIB -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=.\Obj\gui_onkey.crf ..\Ucgui\GUI\Core\GUI_OnKey.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  GUI_GetKey PROC
;;;63     */
;;;64     int GUI_GetKey(void) {
000000  4922              LDR      r1,|L1.140|
;;;65       int r = _Key;
000002  6808              LDR      r0,[r1,#0]  ; _Key
;;;66       _Key = 0;
000004  2100              MOVS     r1,#0
000006  4a21              LDR      r2,|L1.140|
000008  6011              STR      r1,[r2,#0]  ; _Key
;;;67       return r;
;;;68     }
00000a  4770              BX       lr
;;;69     
                          ENDP

                  GUI_StoreKey PROC
;;;73     */
;;;74     void GUI_StoreKey(int Key) {
00000c  491f              LDR      r1,|L1.140|
;;;75       if (!_Key) {
00000e  6809              LDR      r1,[r1,#0]  ; _Key
000010  b909              CBNZ     r1,|L1.22|
;;;76         _Key = Key;
000012  491e              LDR      r1,|L1.140|
000014  6008              STR      r0,[r1,#0]  ; _Key
                  |L1.22|
;;;77       }
;;;78       GUI_X_SIGNAL_EVENT();
;;;79     }
000016  4770              BX       lr
;;;80     
                          ENDP

                  GUI_ClearKeyBuffer PROC
;;;84     */
;;;85     void GUI_ClearKeyBuffer(void) {
000018  b500              PUSH     {lr}
;;;86       while (GUI_GetKey());
00001a  bf00              NOP      
                  |L1.28|
00001c  f7fffffe          BL       GUI_GetKey
000020  2800              CMP      r0,#0
000022  d1fb              BNE      |L1.28|
;;;87     }
000024  bd00              POP      {pc}
;;;88     
                          ENDP

                  GUI_StoreKeyMsg PROC
;;;92     */
;;;93     void GUI_StoreKeyMsg(int Key, int PressedCnt) {
000026  4a1a              LDR      r2,|L1.144|
;;;94       #if GUI_WINSUPPORT    /* If 0, WM will not generate any code */
;;;95       _KeyMsg.Key = Key;
000028  6010              STR      r0,[r2,#0]  ; _KeyMsg
;;;96       _KeyMsg.PressedCnt = PressedCnt;
00002a  6051              STR      r1,[r2,#4]  ; _KeyMsg
;;;97       _KeyMsgCnt = 1;
00002c  2201              MOVS     r2,#1
00002e  4b19              LDR      r3,|L1.148|
000030  601a              STR      r2,[r3,#0]  ; _KeyMsgCnt
;;;98       GUI_X_SIGNAL_EVENT();
;;;99       #else
;;;100        GUI_USE_PARA(PressedCnt);
;;;101        GUI_StoreKey(Key);
;;;102      #endif
;;;103    }
000032  4770              BX       lr
;;;104    
                          ENDP

                  GUI_PollKeyMsg PROC
;;;109    #if GUI_WINSUPPORT    /* If 0, WM will not generate any code */
;;;110    int GUI_PollKeyMsg(void) {
000034  b570              PUSH     {r4-r6,lr}
;;;111      int r = 0;
000036  2400              MOVS     r4,#0
;;;112      GUI_LOCK();
000038  f7fffffe          BL       GUI_Lock
;;;113      if (_KeyMsgCnt) {
00003c  4815              LDR      r0,|L1.148|
00003e  6800              LDR      r0,[r0,#0]  ; _KeyMsgCnt
000040  b198              CBZ      r0,|L1.106|
;;;114        int Key;
;;;115        _KeyMsgCnt--;
000042  4814              LDR      r0,|L1.148|
000044  6800              LDR      r0,[r0,#0]  ; _KeyMsgCnt
000046  1e40              SUBS     r0,r0,#1
000048  4912              LDR      r1,|L1.148|
00004a  6008              STR      r0,[r1,#0]  ; _KeyMsgCnt
;;;116        Key = _KeyMsg.Key;
00004c  4810              LDR      r0,|L1.144|
00004e  6805              LDR      r5,[r0,#0]  ; _KeyMsg
;;;117        WM_OnKey(Key, _KeyMsg.PressedCnt);
000050  6841              LDR      r1,[r0,#4]  ; _KeyMsg
000052  4628              MOV      r0,r5
000054  f7fffffe          BL       WM_OnKey
;;;118        if (_KeyMsg.PressedCnt == 1) {
000058  480d              LDR      r0,|L1.144|
00005a  6840              LDR      r0,[r0,#4]  ; _KeyMsg
00005c  2801              CMP      r0,#1
00005e  d102              BNE      |L1.102|
;;;119          GUI_StoreKey(Key);
000060  4628              MOV      r0,r5
000062  f7fffffe          BL       GUI_StoreKey
                  |L1.102|
;;;120        }
;;;121        r = 1;              /* We have done something */
000066  2401              MOVS     r4,#1
;;;122      }
000068  bf00              NOP      
                  |L1.106|
;;;123      GUI_UNLOCK();
00006a  f7fffffe          BL       GUI_Unlock
;;;124      return r;
00006e  4620              MOV      r0,r4
;;;125    }
000070  bd70              POP      {r4-r6,pc}
;;;126    #endif
                          ENDP

                  GUI_SendKeyMsg PROC
;;;136    */
;;;137    void GUI_SendKeyMsg(int Key, int PressedCnt) {
000072  b570              PUSH     {r4-r6,lr}
000074  4604              MOV      r4,r0
000076  460d              MOV      r5,r1
;;;138      #if GUI_WINSUPPORT    /* If 0, WM will not generate any code */
;;;139        if (!WM_OnKey(Key, PressedCnt)) {
000078  4629              MOV      r1,r5
00007a  4620              MOV      r0,r4
00007c  f7fffffe          BL       WM_OnKey
000080  b918              CBNZ     r0,|L1.138|
;;;140          GUI_StoreKeyMsg(Key, PressedCnt);
000082  4629              MOV      r1,r5
000084  4620              MOV      r0,r4
000086  f7fffffe          BL       GUI_StoreKeyMsg
                  |L1.138|
;;;141        }
;;;142      #else
;;;143        GUI_StoreKeyMsg(Key, PressedCnt);
;;;144      #endif
;;;145    }
00008a  bd70              POP      {r4-r6,pc}
;;;146    
                          ENDP

                  |L1.140|
                          DCD      _Key
                  |L1.144|
                          DCD      _KeyMsg
                  |L1.148|
                          DCD      _KeyMsgCnt

                          AREA ||.data||, DATA, ALIGN=2

                  _KeyMsgCnt
                          DCD      0x00000000
                  _KeyMsg
                          %        8
                  _Key
                          DCD      0x00000000
                  GUI_pfKeyMsgHook
                          DCD      0x00000000
