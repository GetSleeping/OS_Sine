; generated by ARM C/C++ Compiler, 4.1 [Build 894]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\Obj\gpio_led.o --asm_dir=.\List\ --list_dir=.\List\ --depend=.\Obj\gpio_led.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\Libraries\CMSIS\CM3\CoreSupport -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x\startup\arm -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\User -I..\BaseDrive -I..\Ucosii -I..\Ucosii\Port -I..\Ucosii\Src -I..\Ucosii\Include -I..\Ucgui -I..\Ucgui\Config -I..\Ucgui\GUI_X -I..\Ucgui\GUI -I..\Ucgui\GUI\ConvertColor -I..\Ucgui\GUI\ConvertMono -I..\Ucgui\GUI\Core -I..\Ucgui\GUI\Core -I..\Ucgui\GUI\LCDDriver -I..\Ucgui\GUI\MultiLayer -I..\Ucgui\GUI\Widget -I..\Ucgui\GUI\WM -I..\ExternalDrive\Lcd -I..\ExternalDrive\Touch -I..\Panel -I"D:\Program files\Keil\ARM\RV31\Inc" -I"D:\Program files\Keil\ARM\CMSIS\Include" -I"D:\Program files\Keil\ARM\Inc\ST\STM32F10x" -D__MICROLIB -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=.\Obj\gpio_led.crf ..\BaseDrive\Gpio_Led.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  GpioLed_Init PROC
;;;26     *******************************************************************************************/
;;;27     void GpioLed_Init(void)
000000  b508              PUSH     {r3,lr}
;;;28     {
;;;29       	GPIO_InitTypeDef GPIO_InitStructure;
;;;30       
;;;31     	RCC_APB2PeriphClockCmd(LED1_RCC_APB2Periph , ENABLE);// 使能APB2外设LED1时钟
000002  2101              MOVS     r1,#1
000004  2080              MOVS     r0,#0x80
000006  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;32     	RCC_APB2PeriphClockCmd(LED2_RCC_APB2Periph , ENABLE);// 使能APB2外设LED2时钟
00000a  2101              MOVS     r1,#1
00000c  2080              MOVS     r0,#0x80
00000e  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;33     	RCC_APB2PeriphClockCmd(LED3_RCC_APB2Periph , ENABLE);// 使能APB2外设LED3时钟
000012  2101              MOVS     r1,#1
000014  2080              MOVS     r0,#0x80
000016  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;34     
;;;35       	GPIO_InitStructure.GPIO_Pin	= LED1_GPIO_Pin;         //选择led1
00001a  2040              MOVS     r0,#0x40
00001c  f8ad0000          STRH     r0,[sp,#0]
;;;36       	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;	 //管脚频率为50MHZ
000020  2003              MOVS     r0,#3
000022  f88d0002          STRB     r0,[sp,#2]
;;;37       	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;	 //模式为推挽输出
000026  2010              MOVS     r0,#0x10
000028  f88d0003          STRB     r0,[sp,#3]
;;;38       	GPIO_Init(LED1_GPIO, &GPIO_InitStructure);           //初始化led1寄存器
00002c  4669              MOV      r1,sp
00002e  4888              LDR      r0,|L1.592|
000030  f7fffffe          BL       GPIO_Init
;;;39     
;;;40       	GPIO_InitStructure.GPIO_Pin	= LED2_GPIO_Pin;         //选择led2
000034  2080              MOVS     r0,#0x80
000036  f8ad0000          STRH     r0,[sp,#0]
;;;41       	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;	 //管脚频率为50MHZ
00003a  2003              MOVS     r0,#3
00003c  f88d0002          STRB     r0,[sp,#2]
;;;42       	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;	 //模式为推挽输出
000040  2010              MOVS     r0,#0x10
000042  f88d0003          STRB     r0,[sp,#3]
;;;43       	GPIO_Init(LED2_GPIO, &GPIO_InitStructure);           //初始化led2寄存器
000046  4669              MOV      r1,sp
000048  4881              LDR      r0,|L1.592|
00004a  f7fffffe          BL       GPIO_Init
;;;44     
;;;45     	GPIO_InitStructure.GPIO_Pin	= LED3_GPIO_Pin;         //选择led3
00004e  f44f7080          MOV      r0,#0x100
000052  f8ad0000          STRH     r0,[sp,#0]
;;;46       	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz; 	 //管脚频率为50MHZ
000056  2003              MOVS     r0,#3
000058  f88d0002          STRB     r0,[sp,#2]
;;;47       	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;	 //模式为推挽输出
00005c  2010              MOVS     r0,#0x10
00005e  f88d0003          STRB     r0,[sp,#3]
;;;48       	GPIO_Init(LED3_GPIO, &GPIO_InitStructure);           //初始化led3寄存器
000062  4669              MOV      r1,sp
000064  487a              LDR      r0,|L1.592|
000066  f7fffffe          BL       GPIO_Init
;;;49     
;;;50         LED1_OFF();
00006a  2140              MOVS     r1,#0x40
00006c  4878              LDR      r0,|L1.592|
00006e  f7fffffe          BL       GPIO_SetBits
;;;51         LED2_OFF();
000072  2180              MOVS     r1,#0x80
000074  4876              LDR      r0,|L1.592|
000076  f7fffffe          BL       GPIO_SetBits
;;;52         LED3_OFF();
00007a  f44f7180          MOV      r1,#0x100
00007e  4874              LDR      r0,|L1.592|
000080  f7fffffe          BL       GPIO_SetBits
;;;53     }
000084  bd08              POP      {r3,pc}
;;;54     
                          ENDP

                  Delay PROC
;;;63     *******************************************************************************************/
;;;64     static void Delay(u32 counter)
000086  bf00              NOP      
                  |L1.136|
;;;65     {
;;;66     	while(counter--);
000088  0001              MOVS     r1,r0
00008a  f1a00001          SUB      r0,r0,#1
00008e  d1fb              BNE      |L1.136|
;;;67     }
000090  4770              BX       lr
;;;68     
                          ENDP

                  LED_Display PROC
;;;77     *******************************************************************************************/
;;;78     void LED_Display(void)
000092  b510              PUSH     {r4,lr}
;;;79     {
;;;80         GPIO_SetBits(LED1_GPIO,LED1_GPIO_Pin);
000094  2140              MOVS     r1,#0x40
000096  486e              LDR      r0,|L1.592|
000098  f7fffffe          BL       GPIO_SetBits
;;;81     	Delay(0xfffff);
00009c  486d              LDR      r0,|L1.596|
00009e  f7fffffe          BL       Delay
;;;82     	GPIO_ResetBits(LED1_GPIO,LED1_GPIO_Pin);
0000a2  2140              MOVS     r1,#0x40
0000a4  486a              LDR      r0,|L1.592|
0000a6  f7fffffe          BL       GPIO_ResetBits
;;;83     
;;;84     	GPIO_SetBits(LED2_GPIO,LED2_GPIO_Pin);
0000aa  2180              MOVS     r1,#0x80
0000ac  4868              LDR      r0,|L1.592|
0000ae  f7fffffe          BL       GPIO_SetBits
;;;85     	Delay(0xfffff);
0000b2  4868              LDR      r0,|L1.596|
0000b4  f7fffffe          BL       Delay
;;;86     	GPIO_ResetBits(LED2_GPIO,LED2_GPIO_Pin);
0000b8  2180              MOVS     r1,#0x80
0000ba  4865              LDR      r0,|L1.592|
0000bc  f7fffffe          BL       GPIO_ResetBits
;;;87     
;;;88     	GPIO_SetBits(LED3_GPIO,LED3_GPIO_Pin);
0000c0  f44f7180          MOV      r1,#0x100
0000c4  4862              LDR      r0,|L1.592|
0000c6  f7fffffe          BL       GPIO_SetBits
;;;89     	Delay(0xfffff);
0000ca  4862              LDR      r0,|L1.596|
0000cc  f7fffffe          BL       Delay
;;;90     	GPIO_ResetBits(LED3_GPIO,LED3_GPIO_Pin);
0000d0  f44f7180          MOV      r1,#0x100
0000d4  485e              LDR      r0,|L1.592|
0000d6  f7fffffe          BL       GPIO_ResetBits
;;;91     }
0000da  bd10              POP      {r4,pc}
;;;92     
                          ENDP

                  Key_Init PROC
;;;101    *******************************************************************************************/
;;;102    void Key_Init(void)
0000dc  b508              PUSH     {r3,lr}
;;;103    {
;;;104      	GPIO_InitTypeDef GPIO_InitStructure;
;;;105      
;;;106    	RCC_APB2PeriphClockCmd(KEY1_RCC_APB2Periph , ENABLE);// 使能APB2外设KEY1时钟
0000de  2101              MOVS     r1,#1
0000e0  2004              MOVS     r0,#4
0000e2  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;107    	RCC_APB2PeriphClockCmd(KEY2_RCC_APB2Periph , ENABLE);// 使能APB2外设KEY2时钟
0000e6  2101              MOVS     r1,#1
0000e8  2020              MOVS     r0,#0x20
0000ea  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;108    	RCC_APB2PeriphClockCmd(KEY3_RCC_APB2Periph , ENABLE);// 使能APB2外设KEY3时钟
0000ee  2101              MOVS     r1,#1
0000f0  2004              MOVS     r0,#4
0000f2  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;109    
;;;110      	GPIO_InitStructure.GPIO_Pin	= KEY1_GPIO_Pin;         //选择KEY1
0000f6  f44f7080          MOV      r0,#0x100
0000fa  f8ad0000          STRH     r0,[sp,#0]
;;;111      	//GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;	 //管脚频率为50MHZ
;;;112      	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;//模式为输入浮空
0000fe  2004              MOVS     r0,#4
000100  f88d0003          STRB     r0,[sp,#3]
;;;113      	GPIO_Init(KEY1_GPIO, &GPIO_InitStructure);           //初始化KEY1寄存器
000104  4669              MOV      r1,sp
000106  4854              LDR      r0,|L1.600|
000108  f7fffffe          BL       GPIO_Init
;;;114    
;;;115      	GPIO_InitStructure.GPIO_Pin	= KEY2_GPIO_Pin;         //选择KEY2
00010c  2008              MOVS     r0,#8
00010e  f8ad0000          STRH     r0,[sp,#0]
;;;116      	//GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;	 //管脚频率为50MHZ
;;;117      	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;//模式为输入浮空
000112  2004              MOVS     r0,#4
000114  f88d0003          STRB     r0,[sp,#3]
;;;118      	GPIO_Init(KEY2_GPIO, &GPIO_InitStructure);           //初始化KEY2寄存器
000118  4669              MOV      r1,sp
00011a  4850              LDR      r0,|L1.604|
00011c  f7fffffe          BL       GPIO_Init
;;;119    
;;;120    	GPIO_InitStructure.GPIO_Pin	= KEY3_GPIO_Pin;         //选择KEY3
000120  2001              MOVS     r0,#1
000122  f8ad0000          STRH     r0,[sp,#0]
;;;121      	//GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz; 	 //管脚频率为50MHZ
;;;122      	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;//模式为输入浮空
000126  2004              MOVS     r0,#4
000128  f88d0003          STRB     r0,[sp,#3]
;;;123      	GPIO_Init(KEY3_GPIO, &GPIO_InitStructure);           //初始化KEY3寄存器
00012c  4669              MOV      r1,sp
00012e  484a              LDR      r0,|L1.600|
000130  f7fffffe          BL       GPIO_Init
;;;124    }
000134  bd08              POP      {r3,pc}
;;;125    
                          ENDP

                  Key_Test PROC
;;;134    *******************************************************************************************/
;;;135    void Key_Test(void)
000136  b510              PUSH     {r4,lr}
;;;136    {
;;;137        /***************按键1的测试********************/
;;;138    	if(GPIO_ReadInputDataBit(KEY1_GPIO,KEY1_GPIO_Pin) == Bit_RESET)
000138  f44f7180          MOV      r1,#0x100
00013c  4846              LDR      r0,|L1.600|
00013e  f7fffffe          BL       GPIO_ReadInputDataBit
000142  b920              CBNZ     r0,|L1.334|
;;;139    	{
;;;140    	    GPIO_ResetBits(LED1_GPIO,LED1_GPIO_Pin);    
000144  2140              MOVS     r1,#0x40
000146  4842              LDR      r0,|L1.592|
000148  f7fffffe          BL       GPIO_ResetBits
00014c  e00a              B        |L1.356|
                  |L1.334|
;;;141    	}
;;;142    	else if(GPIO_ReadInputDataBit(KEY1_GPIO,KEY1_GPIO_Pin) == Bit_SET)
00014e  f44f7180          MOV      r1,#0x100
000152  4841              LDR      r0,|L1.600|
000154  f7fffffe          BL       GPIO_ReadInputDataBit
000158  2801              CMP      r0,#1
00015a  d103              BNE      |L1.356|
;;;143    	{
;;;144    	    GPIO_SetBits(LED1_GPIO,LED1_GPIO_Pin);    
00015c  2140              MOVS     r1,#0x40
00015e  483c              LDR      r0,|L1.592|
000160  f7fffffe          BL       GPIO_SetBits
                  |L1.356|
;;;145    	}
;;;146    	/***************按键2的测试********************/
;;;147    	if(GPIO_ReadInputDataBit(KEY2_GPIO,KEY2_GPIO_Pin) == Bit_RESET)
000164  2108              MOVS     r1,#8
000166  483d              LDR      r0,|L1.604|
000168  f7fffffe          BL       GPIO_ReadInputDataBit
00016c  b990              CBNZ     r0,|L1.404|
;;;148    	{
;;;149    	    Delay(0xfffff);
00016e  4839              LDR      r0,|L1.596|
000170  f7fffffe          BL       Delay
;;;150    		if(GPIO_ReadInputDataBit(KEY2_GPIO,KEY2_GPIO_Pin) == Bit_RESET)
000174  2108              MOVS     r1,#8
000176  4839              LDR      r0,|L1.604|
000178  f7fffffe          BL       GPIO_ReadInputDataBit
00017c  b950              CBNZ     r0,|L1.404|
;;;151    		{
;;;152    		    if(key_info.Key2_state == true)
00017e  4838              LDR      r0,|L1.608|
000180  7840              LDRB     r0,[r0,#1]  ; key_info
000182  2801              CMP      r0,#1
000184  d103              BNE      |L1.398|
;;;153    			    key_info.Key2_state = false;
000186  2000              MOVS     r0,#0
000188  4935              LDR      r1,|L1.608|
00018a  7048              STRB     r0,[r1,#1]
00018c  e002              B        |L1.404|
                  |L1.398|
;;;154    			else
;;;155    				key_info.Key2_state = true;
00018e  2001              MOVS     r0,#1
000190  4933              LDR      r1,|L1.608|
000192  7048              STRB     r0,[r1,#1]
                  |L1.404|
;;;156    		}		
;;;157    	}
;;;158    
;;;159    	if(key_info.Key2_state == true)
000194  4832              LDR      r0,|L1.608|
000196  7840              LDRB     r0,[r0,#1]  ; key_info
000198  2801              CMP      r0,#1
00019a  d104              BNE      |L1.422|
;;;160    	    GPIO_ResetBits(LED2_GPIO,LED2_GPIO_Pin);
00019c  2180              MOVS     r1,#0x80
00019e  482c              LDR      r0,|L1.592|
0001a0  f7fffffe          BL       GPIO_ResetBits
0001a4  e003              B        |L1.430|
                  |L1.422|
;;;161    	else 
;;;162    		GPIO_SetBits(LED2_GPIO,LED2_GPIO_Pin);
0001a6  2180              MOVS     r1,#0x80
0001a8  4829              LDR      r0,|L1.592|
0001aa  f7fffffe          BL       GPIO_SetBits
                  |L1.430|
;;;163    
;;;164        /***************按键3的测试********************/
;;;165    	if(GPIO_ReadInputDataBit(KEY3_GPIO,KEY3_GPIO_Pin) == Bit_RESET)
0001ae  2101              MOVS     r1,#1
0001b0  4829              LDR      r0,|L1.600|
0001b2  f7fffffe          BL       GPIO_ReadInputDataBit
0001b6  b998              CBNZ     r0,|L1.480|
;;;166    	{
;;;167    	    Delay(0xffff);
0001b8  f64f70ff          MOV      r0,#0xffff
0001bc  f7fffffe          BL       Delay
;;;168    		if(GPIO_ReadInputDataBit(KEY3_GPIO,KEY3_GPIO_Pin) == Bit_RESET)
0001c0  2101              MOVS     r1,#1
0001c2  4825              LDR      r0,|L1.600|
0001c4  f7fffffe          BL       GPIO_ReadInputDataBit
0001c8  b950              CBNZ     r0,|L1.480|
;;;169    		{
;;;170    		    if(key_info.Key3_state == true)
0001ca  4825              LDR      r0,|L1.608|
0001cc  7880              LDRB     r0,[r0,#2]  ; key_info
0001ce  2801              CMP      r0,#1
0001d0  d103              BNE      |L1.474|
;;;171    			    key_info.Key3_state = false;
0001d2  2000              MOVS     r0,#0
0001d4  4922              LDR      r1,|L1.608|
0001d6  7088              STRB     r0,[r1,#2]
0001d8  e002              B        |L1.480|
                  |L1.474|
;;;172    			else
;;;173    				key_info.Key3_state = true;
0001da  2001              MOVS     r0,#1
0001dc  4920              LDR      r1,|L1.608|
0001de  7088              STRB     r0,[r1,#2]
                  |L1.480|
;;;174    		}		
;;;175    	}
;;;176    
;;;177    	key_info.Counter2 += 0xfff;
0001e0  481f              LDR      r0,|L1.608|
0001e2  6880              LDR      r0,[r0,#8]  ; key_info
0001e4  f60070ff          ADD      r0,r0,#0xfff
0001e8  491d              LDR      r1,|L1.608|
0001ea  6088              STR      r0,[r1,#8]  ; key_info
;;;178    	if(key_info.Counter2 > 0x2fffff)
0001ec  4608              MOV      r0,r1
0001ee  6880              LDR      r0,[r0,#8]  ; key_info
0001f0  f5b01f40          CMP      r0,#0x300000
0001f4  d301              BCC      |L1.506|
;;;179        key_info.Counter2 = 0;
0001f6  2000              MOVS     r0,#0
0001f8  6088              STR      r0,[r1,#8]  ; key_info
                  |L1.506|
;;;180    
;;;181    	if(key_info.Key3_state == true)
0001fa  4819              LDR      r0,|L1.608|
0001fc  7880              LDRB     r0,[r0,#2]  ; key_info
0001fe  2801              CMP      r0,#1
000200  d11f              BNE      |L1.578|
;;;182    	{
;;;183    	    key_info.Counter1 += 1;
000202  4817              LDR      r0,|L1.608|
000204  6840              LDR      r0,[r0,#4]  ; key_info
000206  1c40              ADDS     r0,r0,#1
000208  4915              LDR      r1,|L1.608|
00020a  6048              STR      r0,[r1,#4]  ; key_info
;;;184    		if(key_info.Counter1 > 0x2ff)
00020c  4608              MOV      r0,r1
00020e  6840              LDR      r0,[r0,#4]  ; key_info
000210  f5b07f40          CMP      r0,#0x300
000214  d301              BCC      |L1.538|
;;;185    		    key_info.Counter1 = 0;
000216  2000              MOVS     r0,#0
000218  6048              STR      r0,[r1,#4]  ; key_info
                  |L1.538|
;;;186    		
;;;187    		if(key_info.Counter2 > key_info.Counter1 * 0xfff)
00021a  4811              LDR      r0,|L1.608|
00021c  6880              LDR      r0,[r0,#8]  ; key_info
00021e  4910              LDR      r1,|L1.608|
000220  6849              LDR      r1,[r1,#4]  ; key_info
000222  ebc13101          RSB      r1,r1,r1,LSL #12
000226  4288              CMP      r0,r1
000228  d905              BLS      |L1.566|
;;;188    		    GPIO_SetBits(LED3_GPIO,LED3_GPIO_Pin);
00022a  f44f7180          MOV      r1,#0x100
00022e  4808              LDR      r0,|L1.592|
000230  f7fffffe          BL       GPIO_SetBits
000234  e00a              B        |L1.588|
                  |L1.566|
;;;189    		else
;;;190    		    GPIO_ResetBits(LED3_GPIO,LED3_GPIO_Pin);
000236  f44f7180          MOV      r1,#0x100
00023a  4805              LDR      r0,|L1.592|
00023c  f7fffffe          BL       GPIO_ResetBits
000240  e004              B        |L1.588|
                  |L1.578|
;;;191    	}
;;;192    	else
;;;193    	    GPIO_SetBits(LED3_GPIO,LED3_GPIO_Pin);
000242  f44f7180          MOV      r1,#0x100
000246  4802              LDR      r0,|L1.592|
000248  f7fffffe          BL       GPIO_SetBits
                  |L1.588|
;;;194    }
00024c  bd10              POP      {r4,pc}
;;;195    
                          ENDP

00024e  0000              DCW      0x0000
                  |L1.592|
                          DCD      0x40011c00
                  |L1.596|
                          DCD      0x000fffff
                  |L1.600|
                          DCD      0x40010800
                  |L1.604|
                          DCD      0x40011400
                  |L1.608|
                          DCD      key_info

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  key_info
                          %        12
