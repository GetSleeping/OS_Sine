; generated by ARM C/C++ Compiler, 4.1 [Build 894]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\Obj\lcdp222.o --asm_dir=.\List\ --list_dir=.\List\ --depend=.\Obj\lcdp222.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\Libraries\CMSIS\CM3\CoreSupport -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x\startup\arm -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\User -I..\BaseDrive -I..\Ucosii -I..\Ucosii\Port -I..\Ucosii\Src -I..\Ucosii\Include -I..\Ucgui -I..\Ucgui\Config -I..\Ucgui\GUI_X -I..\Ucgui\GUI -I..\Ucgui\GUI\ConvertColor -I..\Ucgui\GUI\ConvertMono -I..\Ucgui\GUI\Core -I..\Ucgui\GUI\Core -I..\Ucgui\GUI\LCDDriver -I..\Ucgui\GUI\MultiLayer -I..\Ucgui\GUI\Widget -I..\Ucgui\GUI\WM -I..\ExternalDrive\Lcd -I..\ExternalDrive\Touch -I..\Panel -I"D:\Program files\Keil\ARM\RV31\Inc" -I"D:\Program files\Keil\ARM\CMSIS\Include" -I"D:\Program files\Keil\ARM\Inc\ST\STM32F10x" -D__MICROLIB -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=.\Obj\lcdp222.crf ..\Ucgui\GUI\ConvertColor\LCDP222.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=1

                  LCD_Color2Index_222 PROC
;;;31     */
;;;32     unsigned LCD_Color2Index_222(LCD_COLOR Color) {
000000  b530              PUSH     {r4,r5,lr}
000002  4601              MOV      r1,r0
;;;33       int r,g,b;
;;;34       r = ((Color&255)      +0x2a)/0x55;
000004  b2c8              UXTB     r0,r1
000006  302a              ADDS     r0,r0,#0x2a
000008  2555              MOVS     r5,#0x55
00000a  fbb0f2f5          UDIV     r2,r0,r5
;;;35       g = (((Color>>8)&255) +0x2a)/0x55;
00000e  f3c12007          UBFX     r0,r1,#8,#8
000012  302a              ADDS     r0,r0,#0x2a
000014  fbb0f3f5          UDIV     r3,r0,r5
;;;36       b = (((Color>>16)&255)+0x2a)/0x55;
000018  f3c14007          UBFX     r0,r1,#16,#8
00001c  302a              ADDS     r0,r0,#0x2a
00001e  fbb0f4f5          UDIV     r4,r0,r5
;;;37       return r+(g<<2)+(b<<4);
000022  eb020083          ADD      r0,r2,r3,LSL #2
000026  eb001004          ADD      r0,r0,r4,LSL #4
;;;38     }
00002a  bd30              POP      {r4,r5,pc}
;;;39     
                          ENDP

                  LCD_Index2Color_222 PROC
;;;43     */
;;;44     LCD_COLOR LCD_Index2Color_222(int Index) {
00002c  b510              PUSH     {r4,lr}
00002e  4601              MOV      r1,r0
;;;45       U16P r,g,b;
;;;46       r = ((Index>>0)&3)*0x55;
000030  f0010003          AND      r0,r1,#3
000034  eb001000          ADD      r0,r0,r0,LSL #4
000038  eb000280          ADD      r2,r0,r0,LSL #2
;;;47       g = ((Index>>2)&3)*0x55;
00003c  f3c10081          UBFX     r0,r1,#2,#2
000040  eb001000          ADD      r0,r0,r0,LSL #4
000044  eb000380          ADD      r3,r0,r0,LSL #2
;;;48       b = (Index>>4)    *0x55;
000048  1108              ASRS     r0,r1,#4
00004a  eb001000          ADD      r0,r0,r0,LSL #4
00004e  eb000480          ADD      r4,r0,r0,LSL #2
;;;49       return (((U32)b)<<16)|(g<<8)|r;
000052  0420              LSLS     r0,r4,#16
000054  ea402003          ORR      r0,r0,r3,LSL #8
000058  4310              ORRS     r0,r0,r2
;;;50     }
00005a  bd10              POP      {r4,pc}
;;;51     
                          ENDP

                  LCD_GetIndexMask_222 PROC
;;;55     */
;;;56     unsigned LCD_GetIndexMask_222(void) {
00005c  203f              MOVS     r0,#0x3f
;;;57       return 0x0003f;
;;;58     }
00005e  4770              BX       lr
;;;59     
                          ENDP

                  LCD_Color2Index_M222 PROC
;;;69     */
;;;70     unsigned LCD_Color2Index_M222(LCD_COLOR Color) {
000060  b530              PUSH     {r4,r5,lr}
000062  4601              MOV      r1,r0
;;;71       int r,g,b;
;;;72       r = ((Color&255)      +0x2a)/0x55;
000064  b2c8              UXTB     r0,r1
000066  302a              ADDS     r0,r0,#0x2a
000068  2555              MOVS     r5,#0x55
00006a  fbb0f2f5          UDIV     r2,r0,r5
;;;73       g = (((Color>>8)&255) +0x2a)/0x55;
00006e  f3c12007          UBFX     r0,r1,#8,#8
000072  302a              ADDS     r0,r0,#0x2a
000074  fbb0f3f5          UDIV     r3,r0,r5
;;;74       b = (((Color>>16)&255)+0x2a)/0x55;
000078  f3c14007          UBFX     r0,r1,#16,#8
00007c  302a              ADDS     r0,r0,#0x2a
00007e  fbb0f4f5          UDIV     r4,r0,r5
;;;75       return b+(g<<2)+(r<<4);
000082  eb040083          ADD      r0,r4,r3,LSL #2
000086  eb001002          ADD      r0,r0,r2,LSL #4
;;;76     }
00008a  bd30              POP      {r4,r5,pc}
;;;77     
                          ENDP

                  LCD_Index2Color_M222 PROC
;;;81     */
;;;82     LCD_COLOR LCD_Index2Color_M222(int Index) {
00008c  b510              PUSH     {r4,lr}
00008e  4601              MOV      r1,r0
;;;83       U16P r,g,b;
;;;84       r = ((Index>>0)&3)*0x55;
000090  f0010003          AND      r0,r1,#3
000094  eb001000          ADD      r0,r0,r0,LSL #4
000098  eb000280          ADD      r2,r0,r0,LSL #2
;;;85       g = ((Index>>2)&3)*0x55;
00009c  f3c10081          UBFX     r0,r1,#2,#2
0000a0  eb001000          ADD      r0,r0,r0,LSL #4
0000a4  eb000380          ADD      r3,r0,r0,LSL #2
;;;86       b = (Index>>4)    *0x55;
0000a8  1108              ASRS     r0,r1,#4
0000aa  eb001000          ADD      r0,r0,r0,LSL #4
0000ae  eb000080          ADD      r0,r0,r0,LSL #2
0000b2  b284              UXTH     r4,r0
;;;87       return (((U32)r)<<16)|(g<<8)|b;
0000b4  0410              LSLS     r0,r2,#16
0000b6  ea402003          ORR      r0,r0,r3,LSL #8
0000ba  4320              ORRS     r0,r0,r4
;;;88     }
0000bc  bd10              POP      {r4,pc}
;;;89     
                          ENDP

                  LCD_GetIndexMask_M222 PROC
;;;93     */
;;;94     unsigned LCD_GetIndexMask_M222(void) {
0000be  203f              MOVS     r0,#0x3f
;;;95       return 0x003f;
;;;96     }
0000c0  4770              BX       lr
;;;97     
                          ENDP

